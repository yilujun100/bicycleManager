{"version":3,"sources":["App.js","pages/login/index.js","utils/index.js","axios/index.js","components/Header/index.js","components/Footer/index.js","config/menuConfig.js","store/actionCreator.js","store/actionTypes.js","components/NavLeft/index.js","admin.js","pages/ui/buttons.js","pages/ui/modals.js","pages/ui/loadings.js","pages/ui/notice.js","pages/ui/messages.js","pages/ui/tabs.js","pages/ui/gallery.js","pages/ui/carousel.js","pages/form/login.js","pages/form/register.js","pages/home/index.js","pages/nomatch/index.js","pages/table/basicTable.js","pages/table/highTable.js","pages/city/index.js","components/BaseForm/index.js","components/ETable/index.js","pages/order/index.js","common.js","pages/order/detail.js","pages/user/index.js","pages/map/bikeMap.js","pages/echarts/echartTheme.js","pages/echarts/bar/index.js","pages/echarts/themeLight.js","pages/echarts/pie/index.js","pages/echarts/line/index.js","pages/rich/index.js","pages/permission/index.js","router/index.js","serviceWorker.js","store/reducer.js","store/index.js","index.js"],"names":["App","style","width","this","props","children","React","Component","Login","Option","formatDate","timestamp","date","Date","year","getFullYear","month","toDouble","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","str","pagination","data","callback","onChange","current","result","page","pageSize","page_size","total","total_count","showTotal","showQuickJumper","getOptionList","options","forEach","item","push","value","id","key","name","updateSelectedItem","selectedRowKeys","selectedRows","selectedIds","setState","selectedItem","Axios","_this","url","params","isMock","ajax","then","res","list","item_list","map","index","Utils","requestList","Promise","resolve","reject","JsonP","param","err","response","status","message","loading","isShowLoading","document","getElementById","display","baseApi","axios","method","baseURL","timeout","code","info","title","content","msg","console","log","catch","type","Header","state","userName","setInterval","sysTime","Util","getTime","getWeatherAPIData","jsonp","encodeURIComponent","results","weather_data","dayPictureUrl","weather","menuName","menuType","logoSrc","process","className","span","src","alt","href","connect","Footer","menuList","btnList","getMenuAction","SubMenu","NavLeft","renderMenu","Item","to","handleClick","currentKey","dispatch","handleHomeClick","menuTreeNode","MenuConfig","window","location","hash","replace","onClick","theme","selectedKeys","Admin","Buttons","size","handleCloseLoading","handleChange","e","target","disabled","icon","PlusOutlined","EditOutlined","DeleteOutlined","shape","SearchOutlined","DownloadOutlined","Group","LeftOutlined","RightOutlined","Modals","showModal1","showModal2","showModal3","showModal4","handleOpen","handleConfirm","onOk","onCancel","visible","okText","cancelText","top","wrapClassName","Loadings","iconLoading","LoadingOutlined","fontSize","margin","indicator","marginLeft","spinning","description","marginBottom","tip","Notice","openNotification","direction","notification","config","placement","Messages","showMessage","TabPane","UITabs","newTabIndex","handleCallback","activeKey","onEdit","targetKey","action","add","panes","remove","lastIndex","pane","i","filter","length","defaultActiveKey","tab","Gallery","openGallery","imgSrc","currentImg","imgList","cover","Meta","gutter","md","footer","UICarousel","imgBaseURL","autoplay","effect","FormItem","FormLogin","handleSubmit","userInfo","success","pwd","layout","placeholder","marginTop","initialValues","remember","onFinish","rules","required","min","max","pattern","RegExp","prefix","UserOutlined","LockOutlined","valuePropName","noStyle","float","htmlType","RadioGroup","TextArea","FormRegister","JSON","stringify","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","file","originFileObj","imageUrl","userImg","offsetLayout","wrapperCol","xs","sm","offset","sex","age","interest","isMarried","birthday","moment","address","time","labelCol","label","mode","autoSize","minRows","maxRows","listType","showUploadList","height","Home","BasicTable","dataSource2","request","selectedCheckRowKeys","selectedCheckRows","onRowClick","record","handleDelete","ids","join","dataSource","columns","dataIndex","render","rowSelection","rowCheckSelection","bordered","onRow","HighTable","filters","sorter","sortOrder","order","confirm","columns3","a","b","abc","columns4","text","scroll","y","fixed","x","FilterForm","OpenCityForm","city_id","op_mode","use_mode","ref","formRef","City","isShowOpenCity","createRef","handleOpenCity","getFieldsValue","cityInfo","arr","user_name","formateDate","initFormList","formList","formItemList","field","SELECT","startTime","showTime","format","endTime","colon","INPUT","CHECKBOX","DATE","handleFilterSubmit","fieldsValue","filterSubmit","reset","resetFields","ETable","indexOf","splice","selectKey","onSelectChange","onSelectAll","selected","changeRows","getOptions","p","nameList","onSelect","row_selection","Order","orderInfo","orderConfirmVisible","city","order_status","openOrderDetail","ORDER_DETAIL_RUL","open","orderId","handleFinishOrder","handleFilter","formItemLayout","BaseForm","bind","distance","bike_sn","battery","start_time","common","OrderDetail","getDetailInfo","renderMap","BMap","Map","addMapControl","drawBikeRoute","position_list","drawServiceArea","area","addControl","ScaleControl","anchor","BMAP_ANCHOR_TOP_RIGHT","NavigationControl","positionList","startPoint","endPoint","first","last","Point","lon","lat","startIcon","Icon","Size","imageSize","startMarker","Marker","addOverlay","endIcon","endMarker","trackPoint","point","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","centerAndZoom","polygon","Polygon","fillColor","fillOpacity","match","order_sn","mobile","start_location","end_location","User","isVisible","handleOperator","userFormRef","wrappedComponentRef","inst","UserForm","getState","username","Moment","rows","BikeMap","initalValues","end_time","filterParams","route_list","enableMapClick","gps1","split","gps2","startPointIcon","bikeMarkerStart","endPointIcon","bikeMarkerEnd","routeList","polyLine","serviceList","service_list","servicePointist","polyServiceLine","bikeList","bike_list","bikeIcon","bikeMarker","top_right_control","top_right_navigation","enableScrollWheelZoom","Bar","getOption","tooltip","trigger","xAxis","yAxis","series","getOption2","legend","echarts","registerTheme","echartTheme","option","notMerge","lazyUpdate","colorPalette","color","textStyle","fontWeight","visualMap","toolbox","iconStyle","normal","borderColor","backgroundColor","axisPointer","lineStyle","crossStyle","shadowStyle","dataZoom","dataBackgroundColor","fillerColor","handleColor","categoryAxis","axisLine","splitLine","show","valueAxis","splitArea","timeline","controlStyle","symbol","symbolSize","line","itemStyle","borderWidth","emphasis","candlestick","color0","graph","areaColor","gauge","axisTick","splitNumber","axisLabel","offsetCenter","Pie","orient","right","bottom","formatter","radius","center","shadowBlur","shadowOffsetX","shadowColor","getOption3","sort","roseType","animationType","animationEasing","animationDelay","idx","Math","random","themeLight","Line","stack","boundaryGap","areaStyle","RichText","showRichText","editorContent","editorState","handleClearContent","handleGetText","onEditorChange","onEditorStateChange","onContentStateChange","draftjs","TreeNode","Permission","handleRole","isRoleVisible","handleRoleSubmit","roleFormRef","handlePermission","isPermVisible","detailInfo","menus","menuInfo","handlePermEditSubmit","permFormRef","role_id","handleUserAuth","getRoleUserList","isUserVisible","isAuthClosed","getAuthUserList","mockData","targetKeys","user_id","patchUserInfo","handleUserSubmit","user_ids","createTime","authorizeTime","patchMenuInfo","checkedKeys","userAuthFormRef","isClosed","RoleForm","role_name","PermEditForm","onCheck","renderTreeNodes","parentKey","dataRef","renderBtnTreeNode","menu","btnTreeNode","maxLength","checkable","defaultExpandAll","menuConfig","RoleAuthForm","filterOption","inputValue","listStyle","showSearch","titles","searchPlaceholder","IRouter","path","component","Tabs","Carousel","Boolean","hostname","defaultState","store","createStore","newState","parse","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b9f464fc.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\n\nexport default class Login extends React.Component {\n    render() {\n        return (\n            <div>\n                this is login page;\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport { Select } from 'antd';\nconst Option = Select.Option;\n\nexport default {\n    formatDate(timestamp) {\n        if (!timestamp) return '';\n        let date = new Date(timestamp);\n        let year = date.getFullYear();\n        let month = this.toDouble(date.getMonth() + 1);\n        let day = this.toDouble(date.getDate());\n        let hour = this.toDouble(date.getHours());\n        let minute = this.toDouble(date.getMinutes());\n        let second = this.toDouble(date.getSeconds());\n        return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n    },\n\n    toDouble(str) {\n        return str < 10 ? '0' + str : str;\n    },\n\n    pagination(data, callback) {\n        return {\n            onChange: current => {\n                callback(current);\n            },\n            current: data.result.page,\n            pageSize: data.result.page_size,\n            total: data.result.total_count,\n            showTotal: () => {\n                return `共${data.result.total_count}条`;\n            },\n            showQuickJumper: true\n        };\n    },\n\n    getOptionList(data) {\n        if (!data) {\n            return [];\n        }\n        let options = [];\n        data.forEach(item => {\n            options.push(<Option value={item.id} key={item.id}>{item.name}</Option>);\n        });\n        return options;\n    },\n\n    /**\n     * ETable 行点击通用函数\n     * @param {*选中行的索引} selectedRowKeys\n     * @param {*选中行对象} selectedRows\n     * @param {*选中行的id} selectedIds\n     */\n    updateSelectedItem(selectedRowKeys, selectedRows, selectedIds) {\n        if (selectedIds) {\n            this.setState({\n                selectedRowKeys,\n                selectedIds,\n                selectedItem: selectedRows\n            });\n        } else {\n            this.setState({\n                selectedRowKeys,\n                selectedItem: selectedRows\n            });\n        }\n    }\n};","import JsonP from 'jsonp';\nimport axios from 'axios';\nimport { Modal } from 'antd';\nimport Utils from './../utils';\n\nexport default class Axios {\n    static requestList(_this, url, params, isMock=true) {\n        const data = {\n            params,\n            isMock\n        };\n        this.ajax({\n            url,\n            data\n        }).then(res => {\n            if (res && res.result) {\n                const list = res.result.item_list.map((item, index) => {\n                    item.key = index;\n                    return item;\n                });\n                _this.setState({\n                    list,\n                    pagination: Utils.pagination(res, current => {\n                        _this.params.page = current;\n                        _this.requestList();\n                    })\n                });\n            }\n        });\n    }\n\n    static jsonp(options) {\n        return new Promise((resolve, reject) => {\n            JsonP(options.url, {\n                param: 'callback'\n            }, function(err, response) {\n                if (response.status === 'success') {\n                    resolve(response);\n                } else {\n                    reject(response.message);\n                }\n            })\n        })\n    }\n\n    static ajax(options) {\n        let loading;\n        if (options.data && options.data.isShowLoading !== false) {\n            loading = document.getElementById('ajaxLoading');\n            loading.style.display = 'block';\n        }\n        let baseApi = '';\n        if (options.isMock) {\n            baseApi = 'https://www.easy-mock.com/mock/5f4fa47a66f90555e2209e3b/api';\n        } else {\n            baseApi = 'https://www.easy-mock.com/mock/5f4fa47a66f90555e2209e3b/api';\n        }\n        return new Promise((resolve, reject) => {\n            axios({\n                url: options.url,\n                method: 'get',\n                baseURL: baseApi,\n                timeout: 5000\n            }).then(response => {\n                if (options.data && options.data.isShowLoading !== false) {\n                    loading = document.getElementById('ajaxLoading');\n                    loading.style.display = 'none';\n                }\n                if (response.status === 200) {\n                    const res = response.data;\n                    if (res.code === 0) {\n                        resolve(res);\n                    } else {\n                        Modal.info({\n                            title: '提示',\n                            content: res.msg\n                        })\n                    }\n                } else {\n                    console.log('reject');\n                    reject(response.data);\n                }\n            }).catch(err => {\n                console.log('error', err);\n                Modal.info({\n                    type: 'error',\n                    title: '提示',\n                    content: err.message\n                });\n                loading.style.display = 'none';\n            });\n        });\n    }\n};\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport './index.less';\nimport Util from '../../utils';\nimport axios from '../../axios';\nimport { connect } from 'react-redux';\n\nclass Header extends React.Component {\n    state = {};\n\n    componentDidMount() {\n        this.setState({\n            userName: 'yilujun100'\n        });\n        setInterval(() => {\n            let sysTime = Util.formatDate(new Date().getTime());\n            this.setState({\n                sysTime\n            });\n        }, 1000);\n        this.getWeatherAPIData();\n    }\n\n    getWeatherAPIData() {\n        let city = '成都';\n        axios.jsonp({\n            url: 'http://api.map.baidu.com/telematics/v3/weather?location=' + encodeURIComponent(city) + '&output=json&ak=rCoT9oPRq1tuugGRb6pcXtN7RUVGGI9K'\n        }).then(res => {\n            const {dayPictureUrl, weather} = res.results[0].weather_data[0];\n            this.setState({\n                dayPictureUrl,\n                weather\n            });\n        });\n    }\n\n    render() {\n        const { menuName, menuType } = this.props;\n        const logoSrc = process.env.NODE_ENV === 'development' ? '/assets/logo-ant.svg' : `${process.env.PUBLIC_URL}/assets/logo-ant.svg`;\n        return (\n            <div className=\"header\" style={{width: '100%'}}>\n                <Row className=\"header-top\">\n                    {\n                        menuType ?\n                            <Col span={6} className=\"logo\">\n                                <img src={logoSrc} alt=\"\"/>\n                                <span>共享单车管理系统</span>\n                            </Col> : ''\n                    }\n                    <Col span={menuType ? 18 : 24}>\n                        <span>欢迎，{this.state.userName}</span>\n                        <a href=\"void: 0\">退出</a>\n                    </Col>\n                </Row>\n                {\n                    menuType ? '' : (\n                        <Row className=\"breadcrumb\">\n                            <Col span={4} className=\"breadcrumb-title\">{menuName || '首页'}</Col>\n                            <Col span={20} className=\"weather\">\n                                <span className=\"date\">{this.state.sysTime}</span>\n                                <span className=\"weather-img\">\n                                    <img src={this.state.dayPictureUrl} alt=\"\"/>\n                                </span>\n                                <span className=\"weather-detail\">\n                                    {this.state.weather}\n                                </span>\n                            </Col>\n                        </Row>\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    menuName: state.menuName\n});\n\nexport default connect(\n    mapStateToProps\n)(Header);","import React from 'react';\nimport './index.less';\n\nexport default class Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"footer\">\n               版权所有：yilujun100（推荐使用谷歌浏览器，可以获得更佳操作页面体验） 技术支持：yilujun100\n            </div>\n        );\n    }\n};","const menuList = [\n    {\n        title: '首页',\n        key: '/home'\n    },\n    {\n        title: 'UI',\n        key: '/ui',\n        children: [\n            {\n                title: '按钮',\n                key: '/ui/buttons'\n            },\n            {\n                title: '弹框',\n                key: '/ui/modals'\n            },\n            {\n                title: 'Loading',\n                key: '/ui/loadings'\n            },\n            {\n                title: '通知提醒',\n                key: '/ui/notification'\n            },\n            {\n                title: '全局Message',\n                key: '/ui/messages'\n            },\n            {\n                title: 'Tab页签',\n                key: '/ui/tabs'\n            },\n            {\n                title: '图片画廊',\n                key: '/ui/gallery'\n            },\n            {\n                title: '轮播图',\n                key: '/ui/carousel'\n            }\n        ]\n    },\n    {\n        title: '表单',\n        key: '/form',\n        children: [\n            {\n                title: '登录',\n                key: '/form/login'\n            },\n            {\n                title: '注册',\n                key: '/form/reg'\n            }\n        ]\n    },\n    {\n        title: '表格',\n        key: '/table',\n        children: [\n            {\n                title: '基础表格',\n                key: '/table/basic'\n            },\n            {\n                title: '高级表格',\n                key: '/table/high'\n            }\n        ]\n    },\n    {\n        title: '富文本',\n        key: '/rich'\n    },\n    {\n        title: '城市管理',\n        key: '/city'\n    },\n    {\n        title: '订单管理',\n        key: '/order',\n        btnList: [\n            {\n                title: '订单详情',\n                key: 'detail'\n            },\n            {\n                title: '结束订单',\n                key: 'finish'\n            }\n        ]\n    },\n    {\n        title: '员工管理',\n        key: '/user'\n    },\n    {\n        title: '车辆地图',\n        key: '/bikeMap'\n    },\n    {\n        title: '图表',\n        key: '/charts',\n        children: [\n            {\n                title: '柱形图',\n                key: '/charts/bar'\n            },\n            {\n                title: '饼图',\n                key: '/charts/pie'\n            },\n            {\n                title: '折线图',\n                key: '/charts/line'\n            }\n        ]\n    },\n    {\n        title: '权限设置',\n        key: '/permission'\n    }\n];\n\nexport default menuList;","// 使用actionCreator统一创建action\r\nimport {\r\n    SWITCH_MENU\r\n} from './actionTypes';\r\n\r\nexport const getMenuAction = menuName => ({\r\n    type: SWITCH_MENU,\r\n    menuName\r\n});","export const SWITCH_MENU = 'switch_menu';","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport MenuConfig from './../../config/menuConfig';\nimport './index.less';\nimport { connect } from 'react-redux';\nimport {\n    getMenuAction\n} from './../../store/actionCreator';\n\nconst { SubMenu } = Menu;\n\nclass NavLeft extends React.Component {\n    constructor(props) {\n        super(props);\n        const menuTreeNode = this.renderMenu(MenuConfig);\n        this.state = {\n            menuTreeNode,\n            currentKey: window.location.hash.replace(/#|\\?.*$/g, '')\n        };\n    }\n\n    // 菜单渲染\n    renderMenu = data => {\n        return data.map(item => {\n            if (item.children) {\n                return (\n                    <SubMenu title={item.title} key={item.key}>\n                        { this.renderMenu(item.children) }\n                    </SubMenu>\n                );\n            }\n            return <Menu.Item title={item.title} key={item.key}>\n                <NavLink to={item.key}>{ item.title }</NavLink>\n            </Menu.Item>;\n        });\n    }\n\n    // 菜单点击\n    handleClick = ({ item, key }) => {\n        if (key === this.state.currentKey) {\n            return false;\n        }\n        const { dispatch } = this.props;\n        const action = getMenuAction(item.props.title);\n        dispatch(action);\n        this.setState({\n            currentKey: key\n        });\n    };\n\n    handleHomeClick = () => {\n        const { dispatch } = this.props;\n        const action = getMenuAction('首页');\n        dispatch(action);\n        this.setState({\n            currentKey: '/home'\n        });\n    };\n\n    render() {\n        const logoSrc = process.env.NODE_ENV === 'development' ? '/assets/logo-ant.svg' : `${process.env.PUBLIC_URL}/assets/logo-ant.svg`;\n        return (\n            <div>\n                <NavLink to=\"/home\" onClick={this.handleHomeClick}>\n                    <div className=\"logo\">\n                        <img src={logoSrc} alt=\"\" />\n                        <h1>Bicycle MS</h1>\n                    </div>\n                </NavLink>\n                <Menu\n                    onClick={this.handleClick}\n                    theme=\"dark\"\n                    selectedKeys={this.state.currentKey}\n                >\n                    { this.state.menuTreeNode }\n                </Menu>\n            </div>\n        );\n    }\n}\n\nexport default connect()(NavLeft);\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport NavLeft from './components/NavLeft';\nimport './styles/common.less';\n// import Home from './pages/demos/demo-router/route1/Home';\n// import IRouter from './pages/demos/demo-router/route2/router';\n// import IRouter from './pages/demos/demo-router/route3/router';\n\nexport default class Admin extends React.Component {\n    render() {\n        return (\n            <Row className=\"container\">\n                <Col span={3} className=\"nav-left\">\n                    <NavLeft />\n                </Col>\n                <Col span={21} className=\"main\">\n                    <Header />\n                    <Row className=\"content\">\n                        {/* <Home /> */}\n                        {this.props.children}\n                    </Row>\n                    <Footer />\n                </Col>\n            </Row>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Card, Button, Radio } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined, SearchOutlined, DownloadOutlined, LeftOutlined, RightOutlined } from '@ant-design/icons';\nimport './ui.less';\n\nexport default class Buttons extends Component {\n    state = {\n        loading: true,\n        size: 'default'\n    };\n\n    handleCloseLoading = () => {\n        this.setState({\n            loading: false\n        });\n    }\n\n    handleChange = e => {\n        this.setState({\n            size: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"基础按钮\" className=\"card-wrap\">\n                    <Button type=\"primary\">Primary Button</Button>\n                    <Button>Default Button</Button>\n                    <Button type=\"dashed\">Dashed Button</Button>\n                    <Button type=\"danger\">Danger Button</Button>\n                    <Button disabled>Disabled Button</Button>\n                </Card>\n                <Card title=\"图形按钮\" className=\"card-wrap\">\n                    <Button icon={<PlusOutlined />}>创建</Button>\n                    <Button icon={<EditOutlined />}>编辑</Button>\n                    <Button icon={<DeleteOutlined />}>删除</Button>\n                    <Button shape=\"circle\" icon={<SearchOutlined />}></Button>\n                    <Button type=\"primary\" icon={<SearchOutlined />}>搜索</Button>\n                    <Button type=\"primary\" icon={<DownloadOutlined />}>下载</Button>\n                </Card>\n                <Card title=\"Loading按钮\" className=\"card-wrap\">\n                    <Button type=\"primary\" loading={this.state.loading}>确定</Button>\n                    <Button type=\"primary\" shape=\"circle\" loading={this.state.loading}></Button>\n                    <Button loading={this.state.loading}>点击加载</Button>\n                    <Button shape=\"circle\" loading={this.state.loading}></Button>\n                    <Button type=\"primary\" onClick={this.handleCloseLoading}>关闭</Button>\n                </Card>\n                <Card title=\"按钮组\">\n                    <Button.Group>\n                        <Button type=\"primary\" icon={<LeftOutlined />}>返回</Button>\n                        <Button type=\"primary\" icon={<RightOutlined />}>前进</Button>\n                    </Button.Group>\n                </Card>\n                <Card title=\"按钮尺寸\" className=\"card-wrap\">\n                    <Radio.Group value={this.state.size} onChange={this.handleChange}>\n                        <Radio value=\"small\">小</Radio>\n                        <Radio value=\"default\">中</Radio>\n                        <Radio value=\"large\">大</Radio>\n                    </Radio.Group>\n                    <Button type=\"primary\" size={this.state.size}>Primary Button</Button>\n                    <Button size={this.state.size}>Default Button</Button>\n                    <Button type=\"dashed\" size={this.state.size}>Dashed Button</Button>\n                    <Button type=\"danger\" size={this.state.size}>Danger Button</Button>\n                </Card>\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Button, Modal } from 'antd';\nimport './ui.less';\n\nexport default class Modals extends Component {\n    state = {\n        showModal1: false,\n        showModal2: false,\n        showModal3: false,\n        showModal4: false\n    };\n\n    handleOpen = type => {\n        this.setState({\n            [type]: true\n        })\n    };\n\n    handleConfirm = type => {\n        Modal[type]({\n            title: '确认？',\n            content: '你确定你学会了React了吗？',\n            onOk() {\n                console.log('Ok');\n            },\n            onCancel() {\n                console.log('Cancel');\n            }\n        });\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"基础模态框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal1')}>Open</Button>\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal2')}>自定义页脚</Button>\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal3')}>顶部20px弹框</Button>\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal4')}>水平垂直居中</Button>\n                </Card>\n                <Card title=\"信息确认框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('confirm')}>Confirm</Button>\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('warning')}>Warning</Button>\n                </Card>\n                <Modal\n                    title=\"React\"\n                    visible={this.state.showModal1}\n                    onCancel={() => {\n                        this.setState({\n                            showModal1: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n                <Modal\n                    title=\"React\"\n                    visible={this.state.showModal2}\n                    okText=\"好的\"\n                    cancelText=\"算了\"\n                    onCancel={() => {\n                        this.setState({\n                            showModal2: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n                <Modal\n                    title=\"React\"\n                    style={{top: 20}}\n                    visible={this.state.showModal3}\n                    onCancel={() => {\n                        this.setState({\n                            showModal3: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n                <Modal\n                    title=\"React\"\n                    wrapClassName=\"vertical-center-modal\"\n                    visible={this.state.showModal4}\n                    onCancel={() => {\n                        this.setState({\n                            showModal4: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Spin, Alert } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport './ui.less';\n\nexport default class Loadings extends Component {\n    render() {\n        const iconLoading = <LoadingOutlined style={{fontSize: 24}} />;\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"Spin用法\" className=\"card-wrap\">\n                    <Spin size=\"small\" />\n                    <Spin style={{margin: '0 10px'}} />\n                    <Spin size=\"large\" />\n                    <Spin indicator={iconLoading} style={{marginLeft: 10}} spinning={true} />\n                </Card>\n                <Card title=\"内容遮罩\" className=\"card-wrap\">\n                    <Alert\n                        message=\"Alert message title\"\n                        description=\"Further details about the context of this alert.\"\n                        type=\"info\"\n                        style={{ marginBottom: 10 }}\n                    />\n                    <Spin>\n                        <Alert\n                            message=\"Alert message title\"\n                            description=\"Further details about the context of this alert.\"\n                            type=\"warning\"\n                            style={{ marginBottom: 10 }}\n                        />\n                    </Spin>\n                    <Spin tip=\"加载中...\">\n                        <Alert\n                            message=\"Alert message title\"\n                            description=\"Further details about the context of this alert.\"\n                            type=\"warning\"\n                            style={{ marginBottom: 10 }}\n                        />\n                    </Spin>\n                    <Spin indicator={iconLoading}>\n                        <Alert\n                            message=\"Alert message title\"\n                            description=\"Further details about the context of this alert.\"\n                            type=\"warning\"\n                            style={{ marginBottom: 10 }}\n                        />\n                    </Spin>\n                </Card>\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Button, notification } from 'antd';\nimport './ui.less';\n\nclass Notice extends Component {\n    openNotification = (type, direction) => {\n        if (direction) {\n            notification.config({\n                placement: direction\n            });\n        }\n        notification[type]({\n            message: 'Notification Title',\n            description: 'This is the content of the notification.'\n        });\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.openNotification('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('error')}>Error</Button>\n                </Card>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.openNotification('success', 'topLeft')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('info', 'topRight')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('warning', 'bottomLeft')}>Warning</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('error', 'bottomRight')}>Error</Button>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Notice;\n","import React, { Component } from 'react';\nimport { Card, Button, message } from 'antd';\nimport './ui.less';\n\nclass Messages extends Component {\n    showMessage = type => {\n        message[type]('恭喜你，成功晋升最强王者');\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"全局提示框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.showMessage('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('error')}>Error</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('loading')}>Loading</Button>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport { Card, Tabs, message } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport './ui.less';\nconst { TabPane } = Tabs;\n\nclass UITabs extends Component {\n    newTabIndex = 0;\n    handleCallback = key => {\n        message.info('Hi,您选择了页签：' + key);\n    };\n\n    componentWillMount() {\n        const panes = [\n            {\n                title: 'Tab 1',\n                content: 'Tab 1',\n                key: '1'\n            },\n            {\n                title: 'Tab 2',\n                content: 'Tab 2',\n                key: '2'\n            },\n            {\n                title: 'Tab 3',\n                content: 'Tab 3',\n                key: '3'\n            }\n        ];\n        this.setState({\n            activeKey: panes[0].key,\n            panes\n        });\n    }\n\n    onChange = activeKey => {\n        this.setState({\n            activeKey\n        });\n    };\n\n    onEdit = (targetKey, action) => {\n        this[action](targetKey);\n    };\n\n    add = () => {\n        const { panes } = this.state;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({ title: 'New Tab', content: 'New Tab Pane', key: activeKey });\n        this.setState({ panes, activeKey });\n    };\n\n    remove = targetKey => {\n        let { activeKey } = this.state;\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (panes.length && activeKey === targetKey) {\n            if (lastIndex >= 0) {\n                activeKey = panes[lastIndex].key;\n            } else {\n                activeKey = panes[0].key;\n            }\n        }\n        this.setState({\n            panes,\n            activeKey\n        });\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"Tab页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleCallback}>\n                        <TabPane tab=\"Tab 1\" key=\"1\">\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab=\"Tab 2\" key=\"2\" disabled>\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab=\"Tab 3\" key=\"3\">\n                            React是一个非常受欢迎的MV*框架\n                        </TabPane>\n                    </Tabs>\n                </Card>\n                <Card title=\"Tab带图的页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleCallback}>\n                        <TabPane tab={<span><PlusOutlined />Tab 1</span>} key=\"1\">\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab={<span><EditOutlined />Tab 2</span>} key=\"2\">\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab={<span><DeleteOutlined />Tab 3</span>} key=\"3\">\n                            React是一个非常受欢迎的MV*框架\n                        </TabPane>\n                    </Tabs>\n                </Card>\n                <Card title=\"Tab带图的页签\" className=\"card-wrap\">\n                    <Tabs\n                        onChange={this.onChange}\n                        activeKey={this.state.activeKey}\n                        type=\"editable-card\"\n                        onEdit={this.onEdit}\n                    >\n                        {\n                            this.state.panes.map(pane => (\n                                <TabPane tab={pane.title} key={pane.key}>\n                                    {pane.content}\n                                </TabPane>\n                            ))\n                        }\n                    </Tabs>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default UITabs;","import React, { Component } from 'react';\nimport { Card, Row, Col, Modal } from 'antd';\n\nclass Gallery extends Component {\n    state = {\n        visible: false\n    };\n\n    openGallery = imgSrc => {\n        this.setState({\n            visible: true,\n            currentImg: `/gallery/${imgSrc}`\n        });\n    };\n\n    render() {\n        const baseURL = process.env.NODE_ENV === 'development' ? '/gallery/' : `${process.env.PUBLIC_URL}/gallery/`;\n        const imgs = [\n            ['1.png', '2.png', '3.png', '4.png', '5.png'],\n            ['6.png', '7.png', '8.png', '9.png', '10.png'],\n            ['11.png', '12.png', '13.png', '14.png', '15.png'],\n            ['16.png', '17.png', '18.png', '19.png', '20.png'],\n            ['21.png', '22.png', '23.png', '24.png', '25.png']\n        ];\n        const imgList = imgs.map(list => list.map(item => (\n            <Card\n                style={{marginBottom: 10}}\n                cover={<img src={`${baseURL}${item}`} onClick={() => this.openGallery(item)} alt=\"cover\" />}\n            >\n                <Card.Meta\n                    title=\"React Admin\"\n                    description=\"I Love React\"\n                />\n            </Card>\n        )))\n        return (\n            <div className=\"card-wrap\">\n                <Row gutter={10}>\n                    <Col md={5}>\n                        {imgList[0]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[1]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[2]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[3]}\n                    </Col>\n                    <Col md={4}>\n                        {imgList[4]}\n                    </Col>\n                </Row>\n                <Modal\n                    width={420}\n                    visible={this.state.visible}\n                    title=\"图片画廊\"\n                    onCancel={()=>{\n                        this.setState({\n                            visible:false\n                        })\n                    }}\n                    footer={null}\n                >\n                   {<img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Gallery;","import React, { Component } from 'react';\nimport { Card, Carousel } from 'antd';\nimport './ui.less';\n\nclass UICarousel extends Component {\n    render() {\n        const imgBaseURL = process.env.NODE_ENV === 'development' ? '/carousel-img/' : `${process.env.PUBLIC_URL}/carousel-img/`;\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"文字背景轮播\" className=\"card-wrap\">\n                    <Carousel autoplay effect=\"fade\">\n                        <div><h3>Ant Motion Banner - React</h3></div>\n                        <div><h3>Ant Motion Banner - Vue</h3></div>\n                        <div><h3>Ant Motion Banner - Angular</h3></div>\n                    </Carousel>\n                </Card>\n                <Card title=\"图片轮播\" className=\"slider-wrap\">\n                    <Carousel autoplay effect=\"fade\">\n                        <div>\n                            <img src={`${imgBaseURL}carousel-1.jpg`} alt=\"\"/>\n                        </div>\n                        <div>\n                            <img src={`${imgBaseURL}carousel-2.jpg`} alt=\"\" />\n                        </div>\n                        <div>\n                            <img src={`${imgBaseURL}carousel-3.jpg`} alt=\"\" />\n                        </div>\n                    </Carousel>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default UICarousel;\n","import React, { Component } from 'react';\nimport { Card, Form, Input, Button, message, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nconst FormItem = Form.Item;\n\nclass FormLogin extends Component {\n    handleSubmit = userInfo => {\n        message.success(`${userInfo.userName} 恭喜你，登录成功，当前密码为：${userInfo.pwd}`);\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"登录行内表单\">\n                    <Form layout=\"inline\">\n                        <FormItem>\n                            <Input placeholder=\"请输入用户名\" />\n                        </FormItem>\n                        <FormItem>\n                            <Input placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\">登录</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n                <Card title=\"登录水平表单\" style={{marginTop: 10}}>\n                    <Form\n                        style={{width: 300}}\n                        initialValues={{\n                            userName: '',\n                            pwd: '',\n                            remember: true\n                        }}\n                        onFinish={this.handleSubmit}\n                    >\n                        <FormItem\n                            name=\"userName\"\n                            rules={\n                                [\n                                    { required: true, message: '用户名不能为空' },\n                                    { min: 5, max: 10, message: '长度在 5 到 10 个字符' },\n                                    { pattern: new RegExp('^\\\\w+$', 'g'), message: '用户名必须为字母或者数字' }\n                                ]\n                            }\n                        >\n                            <Input prefix={<UserOutlined />} placeholder=\"请输入用户名\" />\n                        </FormItem>\n                        <FormItem\n                            name=\"pwd\"\n                        >\n                            <Input prefix={<LockOutlined />} type=\"password\" placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem>\n                            <FormItem name=\"remember\" valuePropName=\"checked\" noStyle>\n                                <Checkbox>记住密码</Checkbox>\n                            </FormItem>\n                            <a href=\"void: 0\" style={{float: 'right'}}>忘记密码</a>\n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\" htmlType=\"submit\">登录</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default FormLogin;","import React, { Component } from 'react';\nimport { Card, Form, Button, Input, Checkbox, Radio, Select, Switch, DatePicker, TimePicker, Upload, InputNumber, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst Option = Select.Option;\nconst TextArea= Input.TextArea;\n\nclass FormRegister extends Component {\n    state = {\n        loading: false\n    };\n\n    handleSubmit = userInfo =>{\n        console.log(JSON.stringify(userInfo))\n        message.success(`${userInfo.userName} 恭喜你，注册成功，当前密码为：${userInfo.pwd}`)\n    };\n\n    getBase64 = (img, callback)=>{\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    };\n\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n                userImg:imageUrl,\n                loading: false,\n            }));\n        }\n    };\n\n    render() {\n        const fromItemLayout = {\n            labelCol: {\n                xs: 24,\n                sm: 4\n            },\n            wrapperCol: {\n                xs: 24,\n                sm: 12\n            }\n        };\n        const offsetLayout = {\n            wrapperCol: {\n                xs: 24,\n                sm: {\n                    span: 12,\n                    offset: 4\n                }\n            }\n        };\n        const rowObject = {\n            minRows: 4,\n            maxRows: 6\n        };\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"注册表单\">\n                    <Form\n                        layout=\"horizontal\"\n                        initialValues={{\n                            userName: '',\n                            pwd: '',\n                            sex: '1',\n                            age: 18,\n                            state: '2',\n                            interest: ['2', '5'],\n                            isMarried: true,\n                            birthday: moment('2018-08-08'),\n                            address: '成都市天府广场',\n                            time: '',\n                            userImg: ''\n                        }}\n                        {...fromItemLayout}\n                        onFinish={this.handleSubmit}\n                    >\n                        <FormItem\n                            label=\"用户名\"\n                            name=\"userName\"\n                            rules={\n                                [\n                                    { required: true, message: '用户名不能为空' }\n                                ]\n                            }\n                        >\n                            <Input placeholder=\"请输入用户名\" />\n                        </FormItem>\n                        <FormItem\n                            label=\"密码\"\n                            name=\"pwd\"\n                        >\n                            <Input type=\"password\" placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem\n                            label=\"性别\"\n                            name=\"sex\"\n                        >\n                            <RadioGroup>\n                                <Radio value=\"1\">男</Radio>\n                                <Radio value=\"2\">女</Radio>\n                            </RadioGroup>\n                        </FormItem>\n                        <FormItem\n                            label=\"年龄\"\n                            name=\"age\"\n                        >\n                            <InputNumber />\n                        </FormItem>\n                        <FormItem\n                            label=\"当前状态\"\n                            name=\"state\"\n                        >\n                            <Select>\n                                <Option value=\"1\">咸鱼一条</Option>\n                                <Option value=\"2\">风华浪子</Option>\n                                <Option value=\"3\">北大才子一枚</Option>\n                                <Option value=\"4\">百度FE</Option>\n                                <Option value=\"5\">创业者</Option>\n                            </Select>\n                        </FormItem>\n                        <FormItem\n                            label=\"爱好\"\n                            name=\"interest\"\n                        >\n                            <Select mode=\"multiple\">\n                                <Option value=\"1\">游泳</Option>\n                                <Option value=\"2\">打篮球</Option>\n                                <Option value=\"3\">踢足球</Option>\n                                <Option value=\"4\">跑步</Option>\n                                <Option value=\"5\">爬山</Option>\n                                <Option value=\"6\">骑行</Option>\n                                <Option value=\"7\">桌球</Option>\n                                <Option value=\"8\">麦霸</Option>\n                            </Select>\n                        </FormItem>\n                        <FormItem\n                            label=\"是否已婚\"\n                        >\n                            <FormItem name=\"isMarried\" valuePropName=\"checked\" noStyle>\n                                <Switch />\n                            </FormItem>\n                        </FormItem>\n                        <FormItem\n                            label=\"生日\"\n                            name=\"birthday\"\n                        >\n                            <DatePicker />\n                        </FormItem>\n                        <FormItem\n                            label=\"联系地址\"\n                            name=\"address\"\n                        >\n                            <TextArea autoSize={rowObject} />\n                        </FormItem>\n                        <FormItem\n                            label=\"早起时间\"\n                            name=\"time\"\n                        >\n                            <TimePicker />\n                        </FormItem>\n                        <FormItem\n                            label=\"头像\"\n                        >\n                            <Upload\n                                name=\"userImg\"\n                                listType=\"picture-card\"\n                                showUploadList={false}\n                                action=\"//jsonplaceholder.typicode.com/posts/\"\n                                onChange={this.handleChange}\n                            >\n                                {this.state.userImg ? <img src={this.state.userImg} width=\"100\" height=\"100\" alt=\"userImg\" /> : <PlusOutlined />}\n                            </Upload>\n                        </FormItem>\n                        <FormItem\n                            {...offsetLayout}\n                        >\n                            <Checkbox>我已阅读过<a href=\"void: 0\">用户协议</a></Checkbox>\n                        </FormItem>\n                        <FormItem\n                            {...offsetLayout}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\">注册</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default FormRegister;","import React from 'react';\nimport './index.less';\n\nexport default class Home extends React.Component{\n\n    render(){\n        return (\n            <div className=\"home-wrap\">\n                欢迎进入共享单车后台管理系统\n            </div>\n        );\n    }\n};\n","import React from 'react';\n\nexport default class NoMatch extends React.Component {\n    render() {\n        return (\n            <div style={{\n                width: '100%',\n                textAlign: 'center',\n                fontSize: 24\n            }}>\n                404 NO Found!!!\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Table, Modal, Button, message } from 'antd';\nimport axios from './../../axios';\nimport Utils from './../../utils';\n\nclass BasicTable extends Component {\n    state = {\n        dataSource2: []\n    };\n\n    params = {\n        page: 1\n    };\n\n    componentDidMount() {\n        let data = [\n            {\n                id: '0',\n                userName: 'Jack',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            },\n            {\n                id: '1',\n                userName: 'Tom',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            },\n            {\n                id: '2',\n                userName: 'Lily',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            }\n        ];\n        data = data.map((item, index) => ({\n            ...item,\n            key: index\n        }));\n        this.setState({\n            dataSource: data\n        });\n        this.request();\n    }\n\n    // 动态获取mock数据\n    request = () => {\n        let _this = this;\n        axios.ajax({\n            url: '/table/list',\n            data: {\n                params: {\n                    page: this.params.page\n                }\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                res.result.list = res.result.list.map((item, index) => ({\n                    ...item,\n                    key: index\n                }));\n                this.setState({\n                    dataSource2: res.result.list,\n                    selectedRowKeys: [],\n                    selectedRows: null,\n                    selectedCheckRowKeys: [],\n                    selectedCheckRows: null,\n                    pagination: Utils.pagination(res, current => {\n                        _this.params.page = current;\n                        this.request();\n                    })\n                });\n            }\n        });\n    };\n\n    onRowClick = (record, index) => {\n        const selectedRowKeys = [index];\n\n        Modal.info({\n            title: '信息',\n            content: `用户名：${record.userName},用户爱好：${record.interest}`\n        });\n        this.setState({\n            selectedRowKeys,\n            selectedRows: record\n        });\n    };\n\n    // 多选执行删除操作\n    handleDelete = () => {\n        const rows = this.state.selectedCheckRows;\n        const ids = rows.map(item => item.id);\n        Modal.info({\n            title: '删除提示',\n            content: `您确定要删除这些数据吗？${ids.join(',')}`,\n            onOk: () => {\n                message.success('删除成功');\n                this.request();\n            }\n        })\n    };\n\n    render() {\n        const columns = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: sex => {\n                    return sex === '1' ? '男' : '女';\n                }\n            },\n            {\n                title: '状态',\n                key: 'state',\n                dataIndex: 'state',\n                render: state => {\n                    const config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    };\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: interest => {\n                    const config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    };\n                    return config[interest];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time'\n            }\n        ];\n        const { selectedRowKeys, selectedCheckRowKeys } = this.state;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys\n        };\n        const rowCheckSelection = {\n            type: 'checkbox',\n            selectedRowKeys: selectedCheckRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedCheckRowKeys: selectedRowKeys,\n                    selectedCheckRows: selectedRows\n                });\n            }\n        }\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"基础表格\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"动态数据渲染表格-Mock\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-单选\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        rowSelection={rowSelection}\n                        onRow={(record, index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(record, index);\n                                }\n                            };\n                        }}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-多选\" style={{margin: '10px 0'}}>\n                    <div style={{marginBottom: 10}}>\n                        <Button onClick={this.handleDelete}>删除</Button>\n                    </div>\n                    <Table\n                        bordered\n                        rowSelection={rowCheckSelection}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-表格分页\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={this.state.pagination}\n                    />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default BasicTable;\n","import React, { Component } from 'react';\nimport { Card, Table, Modal, Button, message, Badge } from 'antd';\nimport axios from './../../axios';\n\nexport default class HighTable extends Component {\n    state = {\n\n    };\n\n    params = {\n        page: 1\n    };\n\n    // 动态获取mock数据\n    request = () => {\n        axios.ajax({\n            url: '/table/high/list',\n            data: {\n                params: {\n                    page: this.params.page\n                }\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                res.result.list = res.result.list.map((item, index) => ({...item, key: index}));\n                this.setState({\n                    dataSource: res.result.list\n                });\n            }\n        });\n    };\n\n    handleChange = (pagination, filters, sorter) => {\n        this.setState({\n            sortOrder: sorter.order\n        });\n    };\n\n    // 删除操作\n    handleDelete = item => {\n        Modal.confirm({\n            title: '确认',\n            content: '您确认要删除此条数据吗？',\n            onOk: () => {\n                message.success('删除成功');\n                this.request();\n            }\n        });\n    };\n\n    componentDidMount() {\n        this.request();\n    }\n\n    render() {\n        const columns = [\n            {\n                title: 'id',\n                key: 'id',\n                width:80,\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                width: 80,\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                width: 80,\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '状态',\n                key: 'state',\n                width: 80,\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                width: 80,\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                width: 120,\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                width: 80,\n                dataIndex: 'time'\n            }\n        ];\n        const columns2 = [\n            {\n                title: 'id',\n                key: 'id',\n                width:80,\n                fixed: 'left',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                width: 80,\n                fixed: 'left',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                width: 80,\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '状态',\n                key: 'state',\n                width: 80,\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                width: 80,\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                width: 220,\n                fixed: 'right',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                width: 120,\n                fixed: 'right',\n                dataIndex: 'time'\n            }\n        ];\n        const columns3 = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age',\n                sorter: (a, b) => {\n                    return a.age - b.age\n                },\n                sortOrder: this.state.sortOrder\n            },\n            {\n                title: '状态',\n                key: 'state',\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time'\n            }\n        ];\n        const columns4 = [\n            {\n                title: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '年龄',\n                dataIndex: 'age'\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': <Badge status=\"success\" text=\"成功\"/>,\n                        '2': <Badge status=\"error\" text=\"报错\" />,\n                        '3': <Badge status=\"default\" text=\"正常\" />,\n                        '4': <Badge status=\"processing\" text=\"进行中\" />,\n                        '5': <Badge status=\"warning\" text=\"警告\" />\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                dataIndex: 'address'\n            },\n            {\n                title: '操作',\n                render: (text, item) => {\n                    return <Button size=\"small\" onClick={(item) => { this.handleDelete(item) }}>删除</Button>;\n                }\n            }\n        ];\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"头部固定\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        scroll={{ y: 240 }}\n                    />\n                </Card>\n                <Card title=\"左侧固定\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        columns={columns2}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        scroll={{ x: 1800 }}\n                    />\n                </Card>\n                <Card title=\"表格排序\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        columns={columns3}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        onChange={this.handleChange}\n                    />\n                </Card>\n                <Card title=\"操作按钮\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        columns={columns4}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                    />\n                </Card>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Card, Button, Table, Form, Select, Modal, message } from 'antd';\nimport axios from './../../axios';\nimport Utils from './../../utils';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass FilterForm extends Component {\n\n    render() {\n        return (\n            <Form layout=\"inline\">\n                <FormItem\n                    label=\"城市\"\n                    name=\"city_id\"\n                >\n                    <Select\n                        style={{width: 100}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">北京市</Option>\n                        <Option value=\"2\">上海市</Option>\n                        <Option value=\"3\">深圳市</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"用车模式\"\n                    name=\"mode\"\n                >\n                    <Select\n                        style={{width: 120}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">指定停车点模式</Option>\n                        <Option value=\"2\">禁停区模式</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"营运模式\"\n                    name=\"op_mode\"\n                >\n                    <Select\n                        style={{width: 80}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">自营</Option>\n                        <Option value=\"2\">加盟</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"加盟商授权状态\"\n                    name=\"auth_status\"\n                >\n                    <Select\n                        style={{width: 100}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">已授权</Option>\n                        <Option value=\"2\">未授权</Option>\n                    </Select>\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" style={{margin: '0 20px'}}>查询</Button>\n                    <Button>重置</Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nclass OpenCityForm extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                span: 5\n            },\n            wrapperCol: {\n                span: 19\n            }\n        };\n        return (\n            <Form\n                layout=\"horizontal\"\n                initialValues={{\n                    city_id: '1',\n                    op_mode: '1',\n                    use_mode: '1'\n                }}\n                {...formItemLayout}\n                ref={this.props.formRef}\n            >\n                <FormItem\n                    label=\"选择城市\"\n                    name=\"city_id\"\n                >\n                    <Select\n                        style={{width: 120}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">北京市</Option>\n                        <Option value=\"2\">上海市</Option>\n                        <Option value=\"3\">深圳市</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"营运模式\"\n                    name=\"op_mode\"\n                >\n                    <Select\n                        style={{width: 120}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">自营</Option>\n                        <Option value=\"2\">加盟</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"用车模式\"\n                    name=\"use_mode\"\n                >\n                    <Select\n                        style={{width: 120}}\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">指定停车点</Option>\n                        <Option value=\"2\">禁停区</Option>\n                    </Select>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nclass City extends Component {\n    state = {\n        list: [],\n        isShowOpenCity: false\n    };\n    params = {\n        page: 1\n    };\n    formRef = React.createRef();\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    // 请求mock接口数据\n    requestList = () => {\n        let _this = this;\n        axios.ajax({\n            url: '/open_city',\n            data: {\n                params: {\n                    page: this.params.page\n                }\n            }\n        }).then(res => {\n            let list = res.result.item_list.map((item, index) => ({\n                ...item,\n                key: index\n            }));\n            this.setState({\n                list,\n                pagination: Utils.pagination(res, current => {\n                    _this.params.page = current;\n                    _this.requestList();\n                })\n            })\n        });\n    };\n\n    // 开通城市\n    handleOpenCity = () => {\n        this.setState({\n            isShowOpenCity: true\n        });\n    };\n\n    // 城市开通提交\n    handleSubmit = () => {\n        console.log(this.formRef.current.getFieldsValue());\n        let cityInfo = this.formRef.current.getFieldsValue();\n        axios.ajax({\n            url: '/city/open',\n            data: {\n                params: cityInfo\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                message.success('开通成功');\n                this.setState({\n                    isShowOpenCity: false\n                });\n                this.requestList();\n            }\n        })\n    };\n\n    render() {\n        const columns = [\n            {\n                title: '城市ID',\n                dataIndex: 'id'\n            },\n            {\n                title: '城市名称',\n                dataIndex: 'name'\n            },\n            {\n                title: '用车模式',\n                dataIndex: 'mode',\n                render(mode) {\n                    return mode === 1 ? '停车点' : '禁停区';\n                }\n            },\n            {\n                title: '营运模式',\n                dataIndex: 'op_mode',\n                render(op_mode) {\n                    return op_mode === 1 ? '自营' : '加盟';\n                }\n            },\n            {\n                title: '授权加盟商',\n                dataIndex: 'franchisee_name'\n            },\n            {\n                title: '城市管理员',\n                dataIndex: 'city_admins',\n                render(arr) {\n                    return arr.map(item => item.user_name).join(',');\n                }\n            },\n            {\n                title: '城市开通时间',\n                dataIndex: 'open_time'\n            },\n            {\n                title: '操作时间',\n                dataIndex: 'update_time',\n                render: Utils.formateDate\n            },\n            {\n                title: '操作人',\n                dataIndex: 'sys_user_name'\n            }\n        ];\n        return (\n            <div style={{width: '100%'}}>\n                <Card>\n                    <FilterForm />\n                </Card>\n                <Card style={{marginTop: 10}}>\n                    <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                    />\n                </div>\n                <Modal\n                    title=\"开通城市\"\n                    visible={this.state.isShowOpenCity}\n                    onCancel={() => {\n                        this.setState({\n                            isShowOpenCity: false\n                        })\n                    }}\n                    onOk={this.handleSubmit}\n                >\n                    <OpenCityForm formRef={this.formRef} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default City;\n","import React, { Component } from 'react';\nimport { Form, Input, Select, Checkbox, DatePicker, Button } from 'antd';\nimport Utils from '../../utils';\nconst FormItem = Form.Item;\n\nclass FilterForm extends Component {\n    formRef = React.createRef();\n    initFormList = () => {\n        const { formList } = this.props;\n        const formItemList = [];\n        if (formList && formList.length > 0) {\n            formList.forEach((item, i) => {\n                const { type, label, field, placeholder, width } = item;\n                if (type === '城市') {\n                    const SELECT = <FormItem label=\"城市\" name=\"city\">\n                        <Select\n                            style={{width: 80}}\n                            placeholder={placeholder}\n                        >\n                            {Utils.getOptionList([{ id: '0', name: '全部' }, { id: '1', name: '北京' }, { id: '2', name: '上海' }, { id: '3', name: '天津' }, { id: '4', name: '杭州' }])}\n                        </Select>\n                    </FormItem>;\n                    formItemList.push(SELECT);\n                } else if (type === '时间查询') {\n                    const startTime = <FormItem label=\"订单时间\" name=\"start_time\">\n                        <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\n                    </FormItem>;\n                    formItemList.push(startTime);\n                    const endTime = <FormItem label=\"~\" colon={false} name=\"end_time\">\n                        <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\n                    </FormItem>;\n                    formItemList.push(endTime);\n                } else if (type === 'INPUT') {\n                    const INPUT = <FormItem label={label} name={field}>\n                        <Input type=\"text\" placeholder={placeholder} />\n                    </FormItem>;\n                    formItemList.push(INPUT);\n                } else if (type === 'SELECT') {\n                    const SELECT = <FormItem label={label} name={field}>\n                        <Select\n                            style={{width: width}}\n                            placeholder={placeholder}\n                        >\n                            {Utils.getOptionList(item.list)}\n                        </Select>\n                    </FormItem>;\n                    formItemList.push(SELECT);\n                } else if (type === 'CHECKBOX') {\n                    const CHECKBOX = <FormItem name={field}>\n                        <Checkbox>{label}</Checkbox>\n                    </FormItem>;\n                    formItemList.push(CHECKBOX);\n                } else if (type === 'DATE') {\n                    const DATE = <FormItem label={label} name={field}>\n                        <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\n                    </FormItem>;\n                    formItemList.push(DATE);\n                }\n            });\n        }\n        return formItemList;\n    };\n\n    handleFilterSubmit = () => {\n        const fieldsValue = this.formRef.current.getFieldsValue();\n        this.props.filterSubmit(fieldsValue);\n    };\n\n    reset = () => {\n        this.formRef.current.resetFields();\n    };\n\n    render() {\n        const { initialValues } = this.props;\n        return (\n            <Form\n                ref={this.formRef}\n                layout=\"inline\"\n                initialValues={initialValues}\n            >\n                {this.initFormList()}\n                <FormItem>\n                    <Button type=\"primary\" style={{margin: '0 20px'}} onClick={this.handleFilterSubmit}>查询</Button>\n                    <Button onClick={this.reset}>重置</Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nexport default FilterForm;\n","import React, { Component } from 'react';\nimport { Table } from 'antd';\nimport './index.less';\n\nclass ETable extends Component {\n    state = {};\n\n    // 处理行点击事件\n    onRowClick = (record, index) => {\n        const { rowSelection } = this.props;\n        if (rowSelection === 'checkbox') {\n            let { selectedRowKeys, selectedIds, selectedItem } = this.props;\n            if (selectedIds) {\n                const i = selectedIds.indexOf(record.id);\n                if (i === -1) { // 避免重复添加\n                    selectedIds.push(record.id);\n                    selectedRowKeys.push(index);\n                    selectedItem.push(record);\n                } else {\n                    selectedIds.splice(index, 1);\n                    selectedRowKeys.splice(index, 1);\n                    selectedItem.splice(index, 1);\n                }\n            } else {\n                selectedIds = [record.id];\n                selectedRowKeys = [index];\n                selectedItem = [record];\n            }\n            this.props.updateSelectedItem(selectedRowKeys, selectedItem || {}, selectedIds);\n        } else {\n            let selectKey = [index];\n            const { selectedRowKeys } = this.props;\n            if (selectedRowKeys && selectedRowKeys[0] === index) {\n                return;\n            }\n            this.props.updateSelectedItem(selectKey, record || {});\n        }\n    };\n\n    // 选择框变更\n    onSelectChange = (selectedRowKeys, selectedRows) => {\n        const { rowSelection } = this.props;\n        const selectedIds = [];\n        if (rowSelection === 'checkbox') {\n            selectedRows.forEach(item => {\n                selectedIds.push(item.id);\n            });\n            this.setState({\n                selectedRowKeys,\n                selectedIds,\n                selectedItem: selectedRows[0]\n            });\n        }\n        this.props.updateSelectedItem(selectedRowKeys, selectedRows[0], selectedIds);\n    };\n\n    onSelectAll = (selected, selectedRows, changeRows) => {\n        const selectedIds = [];\n        const selectKey = [];\n        selectedRows.forEach((item,i)=> {\n            selectedIds.push(item.id);\n            selectKey.push(i);\n        });\n        this.props.updateSelectedItem(selectKey, selectedRows[0] || {}, selectedIds);\n    };\n\n    getOptions = () => {\n        let p = this.props;\n        const nameList = {\n            '订单编号': 170,\n            '车辆编号': 80,\n            '手机号码': 96,\n            '用户姓名': 70,\n            '密码': 70,\n            '运维区域': 300,\n            '车型': 42,\n            '故障编号': 76,\n            '代理商编码': 97,\n            '角色ID': 64\n        };\n        if (p.columns && p.columns.length > 0) {\n            p.columns.forEach(item => {\n                // 开始/结束 时间\n                if (!item.title) {\n                    return;\n                }\n                if (!item.width) {\n                    if (item.title.indexOf('时间') > -1 && item.title.indexOf('持续时间') < 0) {\n                        item.width = 132;\n                    } else if (item.title.indexOf('图片') > -1) {\n                        item.width = 86;\n                    } else if (item.title.indexOf('权限') > -1 || item.title.indexOf('负责城市') > -1) {\n                        item.width = '40%';\n                        item.className = 'text-left';\n                    } else {\n                        if (nameList[item.title]) {\n                            item.width = nameList[item.title];\n                        }\n                    }\n                }\n                item.bordered = true;\n            });\n        }\n        const { selectedRowKeys } = this.props;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n            onSelect: (record, selected, selectedRows) => {\n                console.log('...');\n            },\n            onSelectAll: this.onSelectAll\n        };\n        let row_selection = this.props.rowSelection;\n        // 当属性为false或null时，说明没有单选或者复选列\n        if (row_selection === false || row_selection === null) {\n            row_selection = false;\n        } else if (row_selection === 'checkbox') {\n            // 设置类型为复选框\n            rowSelection.type = 'checkbox';\n        } else {\n            // 默认为单选\n            row_selection = 'radio';\n        }\n        return (\n            <Table\n                className=\"card-wrap page-table\"\n                bordered\n                {...this.props}\n                rowSelection={row_selection ? rowSelection : null}\n                onRow={(record, index) => ({\n                    onClick: () => {\n                        if (!row_selection) {\n                            return;\n                        }\n                        this.onRowClick(record, index);\n                    }\n                })}\n            />\n        );\n    };\n    render() {\n        return (\n            <div>\n                {this.getOptions()}\n            </div>\n        );\n    }\n}\n\nexport default ETable;","import React, { Component } from 'react';\r\nimport { Card, Button, Table, Form, Modal, message } from 'antd';\r\nimport axios from './../../axios';\r\nimport Utils from './../../utils';\r\nimport BaseForm from './../../components/BaseForm';\r\nimport ETable from './../../components/ETable';\r\nconst FormItem = Form.Item;\r\n\r\nexport default class Order extends Component {\r\n    state = {\r\n        list: [],\r\n        selectedRowKeys: [],\r\n        selectedItem: null,\r\n        selectedIds: [],\r\n        orderInfo: null,\r\n        orderConfirmVisible: false\r\n    };\r\n    params = {\r\n        page: 1\r\n    };\r\n\r\n    formList = [\r\n        {\r\n            type: 'SELECT',\r\n            label: '城市',\r\n            field: 'city',\r\n            placeholder: '全部',\r\n            width: 80,\r\n            list: [\r\n                { id: '0', name: '全部' },\r\n                { id: '1', name: '北京' },\r\n                { id: '2', name: '天津' },\r\n                { id: '3', name: '上海' }\r\n            ]\r\n        },\r\n        {\r\n            type: '时间查询'\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '订单状态',\r\n            field: 'order_status',\r\n            placeholder: '全部',\r\n            width: 80,\r\n            list: [\r\n                { id: '0', name: '全部' },\r\n                { id: '1', name: '进行中' },\r\n                { id: '2', name: '结束行程' }\r\n            ]\r\n        }\r\n    ];\r\n    initialValues = {\r\n        city: '0',\r\n        'start_time': '',\r\n        'end_time': '',\r\n        order_status: '0'\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.requestList();\r\n    }\r\n\r\n    onRowClick = (record, index) => {\r\n        let selectKey = [index];\r\n        this.setState({\r\n            selectedRowKeys: selectKey,\r\n            selectedItem: record\r\n        });\r\n    };\r\n\r\n    requestList = () => {\r\n        const _this = this;\r\n        axios.requestList(_this, '/order/list', this.params, true);\r\n        // axios.ajax({\r\n        //     url: '/order/list',\r\n        //     data: {\r\n        //         params: this.params\r\n        //     }\r\n        // }).then(res => {\r\n        //     const list = res.result.item_list.map((item, index) => {\r\n        //         item.key = index;\r\n        //         return item;\r\n        //     });\r\n        //     this.setState({\r\n        //         list,\r\n        //         pagination: Utils.pagination(res, current => {\r\n        //             _this.params.page = current;\r\n        //             _this.requestList();\r\n        //         })\r\n        //     })\r\n        // });\r\n    };\r\n\r\n    openOrderDetail = () => {\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            });\r\n            return;\r\n        }\r\n        const ORDER_DETAIL_RUL = process.env.NODE_ENV === 'development'\r\n            ? `/#/common/order/detail/${item.id}`\r\n            : `/bicyclemanager/#/common/order/detail/${item.id}`;\r\n        window.open(ORDER_DETAIL_RUL, '_blank');\r\n    };\r\n\r\n    // 结束订单二次确认\r\n    handleConfirm = () => {\r\n        let item = this.state.selectedItem;\r\n        console.log(item);\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请选择一条订单进行结束'\r\n            });\r\n            return;\r\n        }\r\n        axios.ajax({\r\n            url: '/order/ebike_info',\r\n            data: {\r\n                params: {\r\n                    orderId: item.id\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    orderInfo: res.result,\r\n                    orderConfirmVisible: true\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    // 结束订单\r\n    handleFinishOrder = () => {\r\n        const { selectedItem } = this.state;\r\n        axios.ajax({\r\n            url: '/order/finish_order',\r\n            data: {\r\n                params: {\r\n                    orderId: selectedItem.id\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code === 0) {\r\n                message.success('订单结束成功');\r\n                this.setState({\r\n                    orderConfirmVisible: false\r\n                });\r\n                this.requestList();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleFilter = params => {\r\n        console.log(params);\r\n        this.params = params;\r\n        this.requestList();\r\n    };\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '订单编号',\r\n                dataIndex: 'order_sn'\r\n            },\r\n            {\r\n                title: '车辆编号',\r\n                dataIndex: 'bike_sn'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'user_name'\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile'\r\n            },\r\n            {\r\n                title: '里程',\r\n                dataIndex: 'distance',\r\n                render(distance) {\r\n                    return distance / 1000 + 'Km';\r\n                }\r\n            },\r\n            {\r\n                title: '行驶时长',\r\n                dataIndex: 'total_time'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'status'\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'start_time'\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'end_time'\r\n            },\r\n            {\r\n                title: '订单金额',\r\n                dataIndex: 'total_fee'\r\n            },\r\n            {\r\n                title: '实付金额',\r\n                dataIndex: 'user_pay'\r\n            }\r\n        ];\r\n        const formItemLayout = {\r\n            labelCol: { span: 5 },\r\n            wrapperCol: { span: 19 }\r\n        };\r\n        // const { selectedRowKeys } = this.state;\r\n        // const rowSelection = {\r\n        //     type: 'radio',\r\n        //     wrapperCol: {\r\n        //         span: 19\r\n        //     },\r\n        //     selectedRowKeys\r\n        // };\r\n\r\n        return (\r\n            <div style={{width: '100%'}}>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} initialValues={this.initialValues} filterSubmit={this.handleFilter} />\r\n                </Card>\r\n                <Card style={{marginTop: 10}}>\r\n                    <Button type=\"primary\" onClick={this.openOrderDetail}>订单详情</Button>\r\n                    <Button type=\"primary\" style={{marginLeft: 10}} onClick={this.handleConfirm}>结束订单</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <ETable\r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        selectedIds={this.state.selectedIds}\r\n                        selectedItem={this.state.selectedItem}\r\n                        pagination={this.state.pagination}\r\n                        // rowSelection=\"checkbox\"\r\n                    />\r\n                    {/* <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                        rowSelection={rowSelection}\r\n                        onRow={(record, index) => {\r\n                            return {\r\n                                onClick: () => {\r\n                                    this.onRowClick(record, index);\r\n                                }\r\n                            };\r\n                        }}\r\n                    /> */}\r\n                </div>\r\n                {\r\n                    this.state.orderConfirmVisible && (\r\n                        <Modal\r\n                            title=\"结束订单\"\r\n                            visible={this.state.orderConfirmVisible}\r\n                            onCancel={() => {\r\n                                this.setState({\r\n                                    orderConfirmVisible: false\r\n                                })\r\n                            }}\r\n                            onOk={this.handleFinishOrder}\r\n                            width={600}\r\n                        >\r\n                            <FormItem label=\"车辆编号\" {...formItemLayout}>\r\n                                {this.state.orderInfo.bike_sn}\r\n                            </FormItem>\r\n                            <FormItem label=\"剩余电量\" {...formItemLayout}>\r\n                                {this.state.orderInfo.battery + '%'}\r\n                            </FormItem>\r\n                            <FormItem label=\"行程开始时间\" {...formItemLayout}>\r\n                                {this.state.orderInfo.start_time}\r\n                            </FormItem>\r\n                            <FormItem label=\"当前位置\" {...formItemLayout}>\r\n                                {this.state.orderInfo.location}\r\n                            </FormItem>\r\n                        </Modal>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { Row } from 'antd';\nimport Header from './components/Header';\nimport './styles/common.less';\n\nclass common extends Component {\n    render() {\n        return (\n            <div>\n                <Row className=\"simple-page\">\n                    <Header menuType=\"second\" />\n                </Row>\n                <Row className=\"content\">\n                    {this.props.children}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default common;","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport axios from './../../axios';\nimport './detail.less';\n\nclass OrderDetail extends Component {\n    state = {\n\n    };\n\n    componentDidMount() {\n        const orderId = this.props.match.params.orderId;\n        if (orderId) {\n            this.getDetailInfo(orderId);\n        }\n    }\n\n    getDetailInfo = orderId => {\n        axios.ajax({\n            url: '/order/detail',\n            data: {\n                params: {\n                    orderId\n                }\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                this.setState({\n                    orderInfo: res.result\n                });\n                this.renderMap(res.result);\n            }\n        })\n    };\n\n    renderMap = result => {\n        this.map = new window.BMap.Map('orderDetailMap');\n        // 添加地图控件\n        this.addMapControl();\n        // this.map.centerAndZoom('北京', 11);\n        // 调用路线图绘制方法\n        this.drawBikeRoute(result.position_list);\n        // 调用服务区绘制方法\n        this.drawServiceArea(result.area);\n    };\n\n    // 添加地图控件\n    addMapControl = () => {\n        const map = this.map;\n        map.addControl(new window.BMap.ScaleControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n        map.addControl(new window.BMap.NavigationControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n    };\n\n    // 绘制用户的行驶路线\n    drawBikeRoute = positionList => {\n        let startPoint = '';\n        let endPoint = '';\n        if (positionList.length > 0) {\n            let first = positionList[0];\n            let last = positionList[positionList.length - 1];\n            startPoint = new window.BMap.Point(first.lon, first.lat);\n            let startIcon = new window.BMap.Icon('/assets/start_point.png', new window.BMap.Size(36, 42), {\n                imageSize: new window.BMap.Size(36, 42),\n                anchor: new window.BMap.Size(18, 42)\n            });\n            let startMarker = new window.BMap.Marker(startPoint, { icon: startIcon });\n            this.map.addOverlay(startMarker);\n\n            endPoint = new window.BMap.Point(last.lon, last.lat);\n            let endIcon = new window.BMap.Icon('/assets/end_point.png', new window.BMap.Size(36, 42), {\n                imageSize: new window.BMap.Size(36, 42),\n                anchor: new window.BMap.Size(18, 42)\n            });\n            let endMarker = new window.BMap.Marker(endPoint, { icon: endIcon });\n            this.map.addOverlay(endMarker);\n\n            // 连接线路图\n            let trackPoint = [];\n            for (let i = 0; i < positionList.length; i++) {\n                let point = positionList[i];\n                trackPoint.push(new window.BMap.Point(point.lon, point.lat));\n            }\n            let polyline = new window.BMap.Polyline(trackPoint, {\n                strokeColor: '#1869ad',\n                strokeWeight: 3,\n                strokeOpacity: 1\n            });\n            this.map.addOverlay(polyline);\n            this.map.centerAndZoom(endPoint, 11);\n        }\n    };\n\n    // 绘制服务区\n    drawServiceArea = positionList => {\n        // 连接路线图\n        let trackPoint = [];\n        for (let i = 0; i < positionList.length; i++) {\n            let point = positionList[i];\n            trackPoint.push(new window.BMap.Point(point.lon, point.lat));\n        }\n        // 绘制服务区\n        let polygon = new window.BMap.Polygon(trackPoint, {\n            strokeColor: '#CE0000',\n            strokeWeight: 4,\n            strokeOpacity: 1,\n            fillColor: '#ff8605',\n            fillOpacity:0.4\n        });\n        this.map.addOverlay(polygon);\n    };\n\n    render() {\n        const info = this.state.orderInfo || {};\n        return (\n            <div style={{width: '100%'}}>\n                <Card>\n                    <div id=\"orderDetailMap\" className=\"order-map\"></div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">基础信息</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">用车模式</div>\n                                <div className=\"detail-form-content\">{info.mode === 1 ?'服务区':'停车点'}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">订单编号</div>\n                                <div className=\"detail-form-content\">{info.order_sn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">车辆编号</div>\n                                <div className=\"detail-form-content\">{info.bike_sn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">用户姓名</div>\n                                <div className=\"detail-form-content\">{info.user_name}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">手机号码</div>\n                                <div className=\"detail-form-content\">{info.mobile}</div>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">行驶轨迹</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">行程起点</div>\n                                <div className=\"detail-form-content\">{info.start_location}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行程终点</div>\n                                <div className=\"detail-form-content\">{info.end_location}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行驶里程</div>\n                                <div className=\"detail-form-content\">{info.distance/1000}公里</div>\n                            </li>\n                        </ul>\n                    </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default OrderDetail;\n","import React, { Component } from 'react';\nimport { Card, Button, Form, Input, Select, Radio, Modal, DatePicker } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport axios from './../../axios';\nimport Utils from './../../utils';\nimport BaseForm from './../../components/BaseForm';\nimport ETable from './../../components/ETable';\nimport Moment from 'moment';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst RadioGroup = Radio.Group;\n\nclass User extends Component {\n    state = {\n        list: [],\n        selectedRowKeys: [],\n        selectedItem: null,\n        title: '',\n        isVisible: false,\n        type: '',\n        userInfo: null\n    };\n\n    params = {\n        page: 1\n    };\n\n    formList = [\n        {\n            type: 'INPUT',\n            label: '用户名',\n            field: 'user_name',\n            placeholder: '请输入用户名',\n            width: 130\n        },\n        {\n            type: 'INPUT',\n            label: '手机号',\n            field: 'user_mobile',\n            placeholder: '请输入手机号',\n            width: 140\n        },\n        {\n            type: 'DATE',\n            label: '请选择入职日期',\n            field: 'user_date',\n            placeholder: '请输入日期',\n            width: 100\n        }\n    ];\n\n    initialValues = {\n        'user_name': '',\n        'user_mobile': '',\n        'user_date': ''\n    };\n\n    handleFilter = params => {\n        this.params = params;\n        this.requestList();\n    };\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    requestList = () => {\n        const _this = this;\n        axios.requestList(_this, '/user/list', this.params, true);\n    };\n\n    // 操作员工\n    handleOperator = type => {\n        let item = this.state.selectedItem;\n        if (type === 'create') {\n            this.setState({\n                title: '创建员工',\n                isVisible: true,\n                type\n            });\n        } else if (type === 'edit' || type === 'detail') {\n            if (!item) {\n                Modal.info({\n                    title: '信息',\n                    content: '请选择一个用户'\n                });\n                return;\n            }\n            this.setState({\n                title: type === 'edit' ? '编辑用户' : '查看详情',\n                isVisible: true,\n                userInfo: item,\n                type\n            });\n        } else if (type === 'delete') {\n            if (!item) {\n                Modal.info({\n                    title: '信息',\n                    content: '请选择一个用户'\n                });\n                return;\n            }\n            Modal.confirm({\n                title: '确认删除',\n                content: '是否要删除当前选中的员工',\n                onOk: () => {\n                    axios.ajax({\n                        url:'/user/delete',\n                        data:{\n                            params:{\n                                id:item.id\n                            }\n                        }\n                    }).then(res => {\n                        if(res.code === 0){\n                            this.setState({\n                                isVisible:false\n                            })\n                            this.userFormRef.current.resetFields();\n                            this.requestList();\n                        }\n                    });\n                }\n            })\n        }\n    };\n\n    handleSubmit = () => {\n        let type = this.state.type;\n        let data = this.userFormRef.current.getFieldsValue();\n        axios.ajax({\n            url:type === 'create' ? '/user/add' : '/user/edit',\n            data: {\n                params: {\n                    ...data\n                }\n            }\n        }).then((res)=>{\n            if(res.code === 0){\n                this.setState({\n                    isVisible:false\n                });\n                this.userFormRef.current.resetFields();\n                this.requestList();\n            }\n        });\n    };\n\n    render() {\n        const columns = [\n            {\n                title: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                dataIndex: 'username'\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render(state) {\n                    const config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子一枚',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    };\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                render(interest) {\n                    const config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    };\n                    return config[interest];\n                }\n            },\n            {\n                title: '婚否',\n                dataIndex: 'isMarried',\n                render(isMarried) {\n                    return isMarried ? '已婚' : '未婚';\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '联系地址',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                dataIndex: 'time'\n            }\n        ];\n        let footer = {};\n        if (this.state.type === 'detail') {\n            footer = {\n                footer: null\n            };\n        }\n        return (\n            <div style={{width: '100%'}}>\n                <Card>\n                    <BaseForm formList={this.formList} initialValues={this.initialValues} filterSubmit={this.handleFilter} />\n                </Card>\n                <Card style={{marginTop: 10}}>\n                    <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => this.handleOperator('create')}>创建员工</Button>\n                    <Button type=\"primary\" icon={<EditOutlined />} style={{marginLeft: 10}} onClick={() => this.handleOperator('edit')}>编辑员工</Button>\n                    <Button type=\"primary\" style={{marginLeft: 10}} onClick={() => this.handleOperator('detail')}>员工详情</Button>\n                    <Button type=\"danger\" icon={<DeleteOutlined />} style={{marginLeft: 10}} onClick={() => this.handleOperator('delete')}>删除员工</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <ETable\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\n                        columns={columns}\n                        dataSource={this.state.list}\n                        selectedRowKeys={this.state.selectedRowKeys}\n                        selectedItem={this.state.selectedItem}\n                        pagination={this.state.pagination}\n                    />\n                </div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.isVisible}\n                    onOk={this.handleSubmit}\n                    width={800}\n                    onCancel={() => {\n                        this.userFormRef.current.resetFields();\n                        this.setState({\n                            isVisible: false,\n                            userInfo: ''\n                        });\n                    }}\n                    {...footer}\n                >\n                    <UserForm userInfo={this.state.userInfo} type={this.state.type} wrappedComponentRef={inst => this.userFormRef = inst} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nclass UserForm extends Component {\n    userFormRef = React.createRef();\n    getState = state => {\n        return {\n            '1': '咸鱼一条',\n            '2': '风华浪子',\n            '3': '北大才子一枚',\n            '4': '百度FE',\n            '5': '创业者'\n        }[state];\n    };\n\n    componentDidMount() {\n        this.props.wrappedComponentRef(this.userFormRef);\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 16 }\n        };\n        const { userInfo, type } = this.props;\n        return (\n            <Form\n                layout=\"horizontal\"\n                {...formItemLayout}\n                initialValues={{\n                    'user_name': userInfo !== null ? userInfo.username : '',\n                    sex: userInfo !== null ? userInfo.sex : '',\n                    state: userInfo !== null ? userInfo.state : '',\n                    birthday: userInfo !== null ? Moment(userInfo.birthday) : '',\n                    address: userInfo !== null ? userInfo.address : ''\n                }}\n                ref={this.userFormRef}\n            >\n                <FormItem label=\"姓名\" name=\"user_name\">\n                    {\n                        userInfo && type === 'detail'\n                        ? userInfo.username\n                        : <Input type=\"text\" placeholder=\"请输入姓名\" />\n                    }\n                </FormItem>\n                <FormItem label=\"性别\" name=\"sex\">\n                    {\n                        userInfo && type === 'detail'\n                        ? userInfo.sex\n                        : (\n                            <RadioGroup>\n                                <Radio value={1}>男</Radio>\n                                <Radio value={2}>女</Radio>\n                            </RadioGroup>\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"状态\" name=\"state\">\n                    {\n                        userInfo && type === 'detail'\n                        ? this.getState(userInfo.state)\n                        : (\n                            <Select>\n                                <Option value={1}>咸鱼一条</Option>\n                                <Option value={2}>风华浪子</Option>\n                                <Option value={3}>北大才子一枚</Option>\n                                <Option value={4}>百度FE</Option>\n                                <Option value={5}>创业者</Option>\n                            </Select>\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"生日\" name=\"birthday\">\n                    {\n                        userInfo && type === 'detail'\n                        ? userInfo.birthday\n                        : <DatePicker />\n                    }\n                </FormItem>\n                <FormItem label=\"联系地址\" name=\"address\">\n                    {\n                        userInfo && type === 'detail'\n                        ? userInfo.address\n                        : <Input.TextArea rows={3} placeholder=\"请输入联系地址\" />\n                    }\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nexport default User;","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport axios from './../../axios';\nimport BaseForm from './../../components/BaseForm';\n\nclass BikeMap extends Component {\n    state = {\n\n    };\n\n    formList = [\n        {\n            type: '城市',\n            placeholder: '全部'\n        },\n        {\n            type: '时间查询'\n        },\n        {\n            type: 'SELECT',\n            label: '订单状态',\n            field: 'order_status',\n            placeholder: '全部',\n            width: 150,\n            list: [\n                { id: '0', name: '全部' },\n                { id: '1', name: '进行中' },\n                { id: '2', name: '行程结束' }\n            ]\n        }\n    ];\n\n    initalValues = {\n        city: '0',\n        start_time: '',\n        end_time: '',\n        order_status: '0'\n    };\n\n    params = {\n        page: 1\n    };\n\n    // 查询表单\n    handleFilterSubmit = filterParams => {\n        this.params = filterParams;\n        this.requestList();\n    };\n\n    // 列表请求\n    requestList = () => {\n        axios.ajax({\n            url: '/map/bike_list',\n            data: {\n                params: this.params\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                this.setState({\n                    total_count: res.result.total_count\n                });\n                this.renderMap(res.result);\n            }\n        });\n    };\n\n    // 渲染地图\n    renderMap = res => {\n        const list = res.route_list;\n        this.map = new window.BMap.Map('container', { enableMapClick: false });\n        let gps1 = list[0].split(',');\n        let startPoint = new window.BMap.Point(gps1[0], gps1[1]);\n        let gps2 = list[list.length - 1].split(',');\n        let endPoint = new window.BMap.Point(gps2[0], gps2[1]);\n        this.map.centerAndZoom(endPoint, 11);\n\n        // 添加起始图标\n        let startPointIcon = new window.BMap.Icon('/assets/start_point.png', new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n        let bikeMarkerStart = new window.BMap.Marker(startPoint, { icon: startPointIcon });\n        this.map.addOverlay(bikeMarkerStart);\n        let endPointIcon = new window.BMap.Icon('/assets/end_point.png', new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n        let bikeMarkerEnd = new window.BMap.Marker(endPoint, { icon: endPointIcon });\n        this.map.addOverlay(bikeMarkerEnd);\n\n        // 绘制车辆行驶路线\n        const routeList = [];\n        list.forEach(item => {\n            let p = item.split(',');\n            let point = new window.BMap.Point(p[0], p[1]);\n            routeList.push(point);\n        });\n        let polyLine = new window.BMap.Polyline(routeList, {\n            strokeColor: '#ef4136',\n            strokeWeight: 3,\n            strokeOpacity: 1\n        });\n        this.map.addOverlay(polyLine);\n\n        // 绘制服务区\n        let serviceList = res.service_list;\n        let servicePointist = [];\n        serviceList.forEach((item) => {\n            let point = new window.BMap.Point(item.lon, item.lat);\n            servicePointist.push(point);\n        });\n        let polyServiceLine = new window.BMap.Polyline(servicePointist, {\n            strokeColor: '#ef4136',\n            strokeWeight: 3,\n            strokeOpacity: 1\n        });\n        this.map.addOverlay(polyServiceLine);\n\n        // 添加地图中的自行车图标\n        let bikeList = res.bike_list;\n        let bikeIcon = new window.BMap.Icon('assets/bike.jpg', new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n        bikeList.forEach((item) => {\n            let p = item.split(\",\");\n            let point = new window.BMap.Point(p[0], p[1]);\n            var bikeMarker = new window.BMap.Marker(point, { icon: bikeIcon });\n            this.map.addOverlay(bikeMarker);\n        });\n\n        // 添加地图控件\n        this.addMapControl();\n    };\n\n    // 添加地图控件\n    addMapControl = () => {\n        let map = this.map;\n        // 左上角，添加比例尺\n        var top_right_control = new window.BMap.ScaleControl({anchor: window.BMAP_ANCHOR_TOP_RIGHT});\n        var top_right_navigation = new window.BMap.NavigationControl({anchor: window.BMAP_ANCHOR_TOP_RIGHT});\n        //添加控件和比例尺\n        map.addControl(top_right_control);\n        map.addControl(top_right_navigation);\n        map.enableScrollWheelZoom(true);\n        // legend.addLegend(map);\n    };\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card>\n                    <BaseForm formList={this.formList} initialValues={this.initialValues} filterSubmit={this.handleFilterSubmit} />\n                </Card>\n                <Card style={{marginTop: 10}}>\n                    <div>共{this.state.total_count}辆车</div>\n                    <div id=\"container\" style={{height: 500}}></div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default BikeMap;","export default {\n    \"color\": [\n        \"#f9c700\",\n        \"#ff5400\",\n        \"#6699cc\",\n        \"#9cb3c5\",\n        \"#e0e6ec\",\n        \"#666666\",\n        \"#787464\",\n        \"#cc7e63\",\n        \"#724e58\",\n        \"#4b565b\"\n    ],\n    \"backgroundColor\": \"#ffffff\",\n    \"textStyle\": {},\n    \"title\": {\n        \"textStyle\": {\n            \"color\": \"#cccccc\"\n        },\n        \"subtextStyle\": {\n            \"color\": \"#cccccc\"\n        }\n    },\n    \"line\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 1\n            }\n        },\n        \"lineStyle\": {\n            \"normal\": {\n                \"width\": 2\n            }\n        },\n        \"symbolSize\": \"10\",\n        \"symbol\": \"emptyCircle\",\n        \"smooth\": false\n    },\n    \"pie\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"categoryAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#999999\",\n                \"fontSize\": \"14\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#f1f3f5\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": false,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#999999\",\n                \"fontSize\": \"14\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#f1f3f5\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": false,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"toolbox\": {\n        \"iconStyle\": {\n            \"normal\": {\n                \"borderColor\": \"#999999\"\n            },\n            \"emphasis\": {\n                \"borderColor\": \"#666666\"\n            }\n        }\n    },\n    \"legend\": {\n        \"textStyle\": {\n            \"color\": \"#333333\"\n        }\n    },\n    \"tooltip\": {\n        \"axisPointer\": {\n            \"lineStyle\": {\n                \"color\": \"#cccccc\",\n                \"width\": 1\n            },\n            \"crossStyle\": {\n                \"color\": \"#cccccc\",\n                \"width\": 1\n            }\n        }\n    },\n    \"timeline\": {\n        \"lineStyle\": {\n            \"color\": \"#293c55\",\n            \"width\": 1\n        },\n        \"itemStyle\": {\n            \"normal\": {\n                \"color\": \"#293c55\",\n                \"borderWidth\": 1\n            },\n            \"emphasis\": {\n                \"color\": \"#a9334c\"\n            }\n        },\n        \"controlStyle\": {\n            \"normal\": {\n                \"color\": \"#293c55\",\n                \"borderColor\": \"#293c55\",\n                \"borderWidth\": 0.5\n            },\n            \"emphasis\": {\n                \"color\": \"#293c55\",\n                \"borderColor\": \"#293c55\",\n                \"borderWidth\": 0.5\n            }\n        },\n        \"checkpointStyle\": {\n            \"color\": \"#e43c59\",\n            \"borderColor\": \"rgba(194,53,49,0.5)\"\n        },\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#293c55\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"#293c55\"\n                }\n            }\n        }\n    },\n    \"markPoint\": {\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#ffffff\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"#ffffff\"\n                }\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport ReactEcharts from 'echarts-for-react';\nimport echartTheme from '../echartTheme';\n// 引入ECharts主模块\nimport echarts from 'echarts/lib/echarts';\n// 引入柱状图\nimport 'echarts/lib/chart/bar';\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\n\nclass Bar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        echarts.registerTheme('Bicycle', echartTheme);\n    }\n\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip : {\n                trigger: 'axis'\n            },\n            xAxis: {\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'bar',\n                    data: [\n                        1000,\n                        2000,\n                        1500,\n                        3000,\n                        2000,\n                        1200,\n                        800\n                    ]\n                }\n            ]\n        };\n        return option;\n    };\n\n    getOption2 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip : {\n                trigger: 'axis'\n            },\n            legend:{\n                data:['OFO','摩拜','小蓝']\n            },\n            xAxis: {\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: 'OFO',\n                    type: 'bar',\n                    data: [\n                        2000,\n                        3000,\n                        5500,\n                        7000,\n                        8000,\n                        12000,\n                        20000\n                    ]\n                },\n                {\n                    name: '摩拜',\n                    type: 'bar',\n                    data: [\n                        1500,\n                        3000,\n                        4500,\n                        6000,\n                        8000,\n                        10000,\n                        15000\n                    ]\n                },\n                {\n                    name: '小蓝',\n                    type: 'bar',\n                    data: [\n                        1000,\n                        2000,\n                        2500,\n                        4000,\n                        6000,\n                        7000,\n                        8000\n                    ]\n                },\n            ]\n        };\n        return option;\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"柱形图表之一\">\n                    <ReactEcharts option={this.getOption()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n                <Card title=\"柱形图表之二\" style={{marginTop: 10}}>\n                    <ReactEcharts option={this.getOption2()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Bar;","var colorPalette = [\n    '#C1232B',\n    '#27727B',\n    '#FCCE10',\n    '#E87C25',\n    '#B5C334',\n    '#FE8463',\n    '#9BCA63',\n    '#FAD860',\n    '#F3A43B',\n    '#60C0DD',\n    '#D7504B',\n    '#C6E579',\n    '#F4E001',\n    '#F0805A',\n    '#26C0C0'\n];\nexport default {\n\n    color: colorPalette,\n\n    title: {\n        textStyle: {\n            fontWeight: 'normal',\n            color: '#27727B'\n        }\n    },\n\n    visualMap: {\n        color: ['#C1232B', '#FCCE10']\n    },\n\n    toolbox: {\n        iconStyle: {\n            normal: {\n                borderColor: colorPalette[0]\n            }\n        }\n    },\n\n    tooltip: {\n        backgroundColor: 'rgba(50,50,50,0.5)',\n        axisPointer: {\n            type: 'line',\n            lineStyle: {\n                color: '#27727B',\n                type: 'dashed'\n            },\n            crossStyle: {\n                color: '#27727B'\n            },\n            shadowStyle: {\n                color: 'rgba(200,200,200,0.3)'\n            }\n        }\n    },\n\n    dataZoom: {\n        dataBackgroundColor: 'rgba(181,195,52,0.3)',\n        fillerColor: 'rgba(181,195,52,0.2)',\n        handleColor: '#27727B'\n    },\n\n    categoryAxis: {\n        axisLine: {\n            lineStyle: {\n                color: '#27727B'\n            }\n        },\n        splitLine: {\n            show: false\n        }\n    },\n\n    valueAxis: {\n        axisLine: {\n            show: false\n        },\n        splitArea: {\n            show: false\n        },\n        splitLine: {\n            lineStyle: {\n                color: ['#ccc'],\n                type: 'dashed'\n            }\n        }\n    },\n\n    timeline: {\n        lineStyle: {\n            color: '#27727B'\n        },\n        controlStyle: {\n            normal: {\n                color: '#27727B',\n                borderColor: '#27727B'\n            }\n        },\n        symbol: 'emptyCircle',\n        symbolSize: 3\n    },\n\n    line: {\n        itemStyle: {\n            normal: {\n                borderWidth: 2,\n                borderColor: '#fff',\n                lineStyle: {\n                    width: 3\n                }\n            },\n            emphasis: {\n                borderWidth: 0\n            }\n        },\n        symbol: 'circle',\n        symbolSize: 3.5\n    },\n\n    candlestick: {\n        itemStyle: {\n            normal: {\n                color: '#C1232B',\n                color0: '#B5C334',\n                lineStyle: {\n                    width: 1,\n                    color: '#C1232B',\n                    color0: '#B5C334'\n                }\n            }\n        }\n    },\n\n    graph: {\n        color: colorPalette\n    },\n\n    map: {\n        label: {\n            normal: {\n                textStyle: {\n                    color: '#C1232B'\n                }\n            },\n            emphasis: {\n                textStyle: {\n                    color: 'rgb(100,0,0)'\n                }\n            }\n        },\n        itemStyle: {\n            normal: {\n                areaColor: '#ddd',\n                borderColor: '#eee'\n            },\n            emphasis: {\n                areaColor: '#fe994e'\n            }\n        }\n    },\n\n    gauge: {\n        axisLine: {\n            lineStyle: {\n                color: [\n                    [\n                        0.2, '#B5C334'\n                    ],\n                    [\n                        0.8, '#27727B'\n                    ],\n                    [1, '#C1232B']\n                ]\n            }\n        },\n        axisTick: {\n            splitNumber: 2,\n            length: 5,\n            lineStyle: {\n                color: '#fff'\n            }\n        },\n        axisLabel: {\n            textStyle: {\n                color: '#fff'\n            }\n        },\n        splitLine: {\n            length: '5%',\n            lineStyle: {\n                color: '#fff'\n            }\n        },\n        title: {\n            offsetCenter: [0, -20]\n        }\n    }\n}","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport ReactEcharts from 'echarts-for-react';\nimport themeLight from '../themeLight';\n// 引入ECharts主模块\nimport echarts from 'echarts/lib/echarts';\n// 引入饼图\nimport 'echarts/lib/chart/pie';\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\n\nclass Pie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        echarts.registerTheme('Bicycle', themeLight);\n    }\n\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x : 'center'\n            },\n            legend : {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: ['周一','周二','周三','周四','周五','周六','周日']\n            },\n            tooltip: {\n                trigger : 'item',\n                formatter : \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name : '订单量',\n                    type : 'pie',\n                    radius : '55%',\n                    center : [\n                        '50%', '60%'\n                    ],\n                    data:[\n                        {\n                            value:1000,\n                            name:'周一'\n                        },\n                        {\n                            value: 1000,\n                            name: '周二'\n                        },\n                        {\n                            value: 2000,\n                            name: '周三'\n                        },\n                        {\n                            value: 1500,\n                            name: '周四'\n                        },\n                        {\n                            value: 3000,\n                            name: '周五'\n                        },\n                        {\n                            value: 2000,\n                            name: '周六'\n                        },\n                        {\n                            value: 1200,\n                            name: '周日'\n                        },\n                    ],\n                    itemStyle : {\n                        emphasis: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }\n            ]\n        };\n        return option;\n    };\n\n    getOption2 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            legend: {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    radius: ['50%', '80%'],\n                    center: [\n                        '50%', '55%'\n                    ],\n                    data: [\n                        {\n                            value: 1000,\n                            name: '周一'\n                        }, {\n                            value: 1000,\n                            name: '周二'\n                        }, {\n                            value: 2000,\n                            name: '周三'\n                        }, {\n                            value: 1500,\n                            name: '周四'\n                        }, {\n                            value: 3000,\n                            name: '周五'\n                        }, {\n                            value: 2000,\n                            name: '周六'\n                        }, {\n                            value: 1200,\n                            name: '周日'\n                        }\n                    ],\n                    itemStyle: {\n                        emphasis: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }\n            ]\n        };\n        return option;\n    };\n\n    getOption3 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            legend: {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    radius: '55%',\n                    center: [\n                        '50%', '50%'\n                    ],\n                    data: [\n                        {\n                            value: 1000,\n                            name: '周一'\n                        }, {\n                            value: 1000,\n                            name: '周二'\n                        }, {\n                            value: 2000,\n                            name: '周三'\n                        }, {\n                            value: 1500,\n                            name: '周四'\n                        }, {\n                            value: 3000,\n                            name: '周五'\n                        }, {\n                            value: 2000,\n                            name: '周六'\n                        }, {\n                            value: 1200,\n                            name: '周日'\n                        }\n                    ].sort(function (a, b) { return a.value - b.value; }),\n                    roseType: 'radius',\n                    animationType: 'scale',\n                    animationEasing: 'elasticOut',\n                    animationDelay: function (idx) {\n                        return Math.random() * 200;\n                    }\n                }\n            ]\n        };\n        return option;\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"饼形图表之一\">\n                    <ReactEcharts option={this.getOption()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n                <Card title=\"饼形图之二\" style={{marginTop: 10}}>\n                    <ReactEcharts option={this.getOption2()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n                <Card title=\"饼形图之三\" style={{marginTop: 10}}>\n                    <ReactEcharts option={this.getOption3()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Pie;","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport ReactEcharts from 'echarts-for-react';\nimport echartTheme from '../echartTheme';\n// 引入ECharts主模块\nimport echarts from 'echarts/lib/echarts';\n// 引入饼图\nimport 'echarts/lib/chart/line';\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\n\nclass Line extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        echarts.registerTheme('Bicycle', echartTheme);\n    }\n\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis'\n            },\n            xAxis: {\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'line',\n                    data: [\n                        1000,\n                        2000,\n                        1500,\n                        3000,\n                        2000,\n                        1200,\n                        800\n                    ]\n                }\n            ]\n        };\n        return option;\n    };\n\n    getOption2 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis'\n            },\n            legend:{\n                data:['OFO订单量','摩拜订单量']\n            },\n            xAxis: {\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: 'OFO订单量',\n                    type: 'line',\n                    stack: '总量',\n                    data: [\n                        1200,\n                        3000,\n                        4500,\n                        6000,\n                        8000,\n                        12000,\n                        20000\n                    ]\n                },\n                {\n                    name: '摩拜订单量',\n                    type: 'line',\n                    stack: '总量',\n                    data: [\n                        1000,\n                        2000,\n                        5500,\n                        6000,\n                        8000,\n                        10000,\n                        12000\n                    ]\n                },\n            ]\n        };\n        return option;\n    };\n\n    getOption3 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis'\n            },\n            xAxis: {\n                type:'category',\n                boundaryGap: false,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'line',\n                    data: [\n                        1000,\n                        2000,\n                        1500,\n                        3000,\n                        2000,\n                        1200,\n                        800\n                    ],\n                    areaStyle: {}\n                }\n            ]\n        };\n        return option;\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"折线图表之一\">\n                    <ReactEcharts option={this.getOption()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n                <Card title=\"折线图表之二\" style={{marginTop: 10}}>\n                    <ReactEcharts option={this.getOption2()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n                <Card title=\"折线图表之三\" style={{marginTop: 10}}>\n                    <ReactEcharts option={this.getOption3()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Line;","import React, { Component } from 'react';\nimport { Card, Modal, Button } from 'antd';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftjs from 'draftjs-to-html';\n\nclass RichText extends Component {\n    state = {\n        showRichText:false,\n        editorContent: '',\n        editorState: ''\n    };\n\n    handleClearContent = () => {\n        this.setState({\n            editorState:''\n        });\n    };\n\n    handleGetText = () => {\n        this.setState({\n            showRichText:true\n        });\n    };\n\n    onEditorChange = editorContent => {\n        this.setState({\n            editorContent,\n        });\n    };\n\n    onEditorStateChange = editorState => {\n        this.setState({\n            editorState\n        });\n    };\n\n    render() {\n        const { editorContent, editorState } = this.state;\n        return (\n            <div style={{width: '100%'}}>\n                <Card style={{marginTop: 10}}>\n                    <Button type=\"primary\" onClick={this.handleClearContent}>清空内容</Button>\n                    <Button type=\"primary\" onClick={this.handleGetText}>获取HTML文本</Button>\n                </Card>\n                <Card title=\"富文本编辑器\">\n                    <Editor\n                        editorState={editorState}\n                        onContentStateChange={this.onEditorChange}\n                        onEditorStateChange={this.onEditorStateChange}\n                    />\n                </Card>\n                <Modal\n                    title=\"富文本\"\n                    visible={this.state.showRichText}\n                    onCancel={()=>{\n                        this.setState({\n                            showRichText:false\n                        })\n                    }}\n                    footer={null}\n                >\n                    {draftjs(editorContent)}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RichText;","import React, { Component } from 'react';\r\nimport { Card, Button, Form, Input, Select, Tree, Transfer, Modal, message } from 'antd';\r\nimport axios from '../../axios';\r\nimport ETable from '../../components/ETable';\r\nimport menuConfig from '../../config/menuConfig';\r\nimport Utils from '../../utils';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst TreeNode = Tree.TreeNode;\r\n\r\nclass Permission extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isRoleVisible: false,\r\n            isPermVisible: false,\r\n            isUserVisible: false,\r\n            list: [],\r\n            selectedRowKeys: [],\r\n            selectedItem: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.requestList();\r\n    }\r\n\r\n    requestList = () => {\r\n        const _this = this;\r\n        axios.requestList(_this, '/role/list', {});\r\n    };\r\n\r\n    // 创建角色\r\n    handleRole = () => {\r\n        this.setState({\r\n            isRoleVisible: true\r\n        });\r\n    };\r\n\r\n    // 角色提交\r\n    handleRoleSubmit = () => {\r\n        let data = this.roleFormRef.current.getFieldsValue();\r\n        axios.ajax({\r\n            url: '/role/create',\r\n            data: {\r\n                params: {\r\n                    ...data\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    isRoleVisible: false\r\n                });\r\n                this.roleFormRef.current.resetFields();\r\n                this.requestList();\r\n                message.success('创建成功');\r\n            }\r\n        });\r\n    };\r\n\r\n    // 设置权限\r\n    handlePermission = () => {\r\n        if (!this.state.selectedItem) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请选择一个角色'\r\n            });\r\n            return;\r\n        }\r\n        this.setState({\r\n            isPermVisible: true,\r\n            detailInfo: this.state.selectedItem\r\n        });\r\n        let menuList = this.state.selectedItem.menus;\r\n        this.setState({\r\n            menuInfo: menuList\r\n        });\r\n    };\r\n\r\n    handlePermEditSubmit = () => {\r\n        let data = this.permFormRef.current.getFieldsValue();\r\n        data.role_id = this.state.selectedItem.id;\r\n        data.menus = this.state.menuInfo;\r\n        axios.ajax({\r\n            url: '/permission/edit',\r\n            data: {\r\n                params: {\r\n                    ...data\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    isPermVisible: false\r\n                });\r\n                this.requestList();\r\n            }\r\n        });\r\n    };\r\n\r\n    // 用户授权\r\n    handleUserAuth = () => {\r\n        if (!this.state.selectedItem) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请选择一个角色'\r\n            });\r\n            return;\r\n        }\r\n        this.getRoleUserList(this.state.selectedItem.id);\r\n        this.setState({\r\n            isUserVisible: true,\r\n            isAuthClosed: false,\r\n            detailInfo: this.state.selectedItem\r\n        });\r\n    };\r\n\r\n    getRoleUserList = id => {\r\n        axios.ajax({\r\n            url: '/role/user_list',\r\n            data: {\r\n                params: {\r\n                    id\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code === 0) {\r\n                this.getAuthUserList(res.result);\r\n            }\r\n        });\r\n    };\r\n\r\n    // 筛选目标用户\r\n    getAuthUserList = dataSource => {\r\n        const mockData = [];\r\n        const targetKeys = [];\r\n        if (dataSource && dataSource.length > 0) {\r\n            for (let i = 0; i < dataSource.length; i++) {\r\n                const data = {\r\n                    key: dataSource[i].user_id,\r\n                    title: dataSource[i].user_name,\r\n                    status: dataSource[i].status\r\n                };\r\n                if (data.status === 1) {\r\n                    targetKeys.push(data.key);\r\n                }\r\n                mockData.push(data);\r\n            }\r\n        }\r\n        this.setState({ mockData, targetKeys });\r\n    };\r\n\r\n    patchUserInfo = targetKeys => {\r\n        this.setState({\r\n            targetKeys\r\n        });\r\n    };\r\n\r\n    // 用户授权提交\r\n    handleUserSubmit = () => {\r\n        let data = {};\r\n        data.user_ids = this.state.targetKeys || [];\r\n        data.role_id = this.state.selectedItem.id;\r\n        axios.ajax({\r\n            url: '/role/user_role_edit',\r\n            data: {\r\n                params: {\r\n                    ...data\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    isUserVisible: false\r\n                });\r\n                this.requestList();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '角色ID',\r\n                dataIndex: 'id'\r\n            },\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'role_name'\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                render(createTime) {\r\n                    return Utils.formatDate(createTime);\r\n                }\r\n            },\r\n            {\r\n                title: '使用状态',\r\n                dataIndex: 'status',\r\n                render(status) {\r\n                    return status === 1 ? '启用' : '停用';\r\n                }\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'authorize_time',\r\n                render(authorizeTime) {\r\n                    return Utils.formatDate(authorizeTime);\r\n                }\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'authorize_user_name'\r\n            }\r\n        ];\r\n        return (\r\n            <div style={{width: '100%'}}>\r\n                <Card>\r\n                    <Button type=\"primary\" onClick={this.handleRole}>创建角色</Button>\r\n                    <Button type=\"primary\" onClick={this.handlePermission}>设置权限</Button>\r\n                    <Button type=\"primary\" onClick={this.handleUserAuth}>用户授权</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <ETable\r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        dataSource={this.state.list}\r\n                        columns={columns}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title=\"创建角色\"\r\n                    visible={this.state.isRoleVisible}\r\n                    onOk={this.handleRoleSubmit}\r\n                    onCancel={() => {\r\n                        this.roleFormRef.current.resetFields();\r\n                        this.setState({\r\n                            isRoleVisible: false\r\n                        });\r\n                    }}\r\n                >\r\n                    <RoleForm wrappedComponentRef={inst => this.roleFormRef = inst} />\r\n                </Modal>\r\n                <Modal\r\n                    title=\"权限设置\"\r\n                    visible={this.state.isPermVisible}\r\n                    width={600}\r\n                    onOk={this.handlePermEditSubmit}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            isPermVisible: false\r\n                        });\r\n                    }}\r\n                >\r\n                    <PermEditForm\r\n                        wrappedComponentRef={inst => this.permFormRef = inst}\r\n                        detailInfo={this.state.detailInfo}\r\n                        menuInfo={this.state.menuInfo||[]}\r\n                        patchMenuInfo={checkedKeys => {\r\n                            this.setState({\r\n                                menuInfo: checkedKeys\r\n                            });\r\n                        }}\r\n                    />\r\n                </Modal>\r\n                <Modal\r\n                    title=\"用户授权\"\r\n                    visible={this.state.isUserVisible}\r\n                    width={800}\r\n                    onOk={this.handleUserSubmit}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            isUserVisible: false\r\n                        })\r\n                    }}\r\n                >\r\n                    <RoleAuthForm\r\n                        wrappedComponentRef={inst => this.userAuthFormRef = inst}\r\n                        isClosed={this.state.isAuthClosed}\r\n                        detailInfo={this.state.detailInfo}\r\n                        targetKeys={this.state.targetKeys}\r\n                        mockData={this.state.mockData}\r\n                        patchUserInfo={this.patchUserInfo}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// 角色创建\r\nclass RoleForm extends Component {\r\n    roleFormRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.props.wrappedComponentRef(this.roleFormRef);\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 5 },\r\n            wrapperCol: { span: 16 }\r\n        };\r\n        return (\r\n            <Form\r\n                layout=\"horizontal\"\r\n                {...formItemLayout}\r\n                initialValues={{\r\n                    role_name: '',\r\n                    state: 1\r\n                }}\r\n                ref={this.roleFormRef}\r\n            >\r\n                <FormItem label=\"角色名称\" name=\"role_name\">\r\n                    <Input type=\"text\" placeholder=\"请输入角色名称\" />\r\n                </FormItem>\r\n                <FormItem label=\"状态\" name=\"state\">\r\n                    <Select>\r\n                        <Option value={1}>启用</Option>\r\n                        <Option value={0}>停用</Option>\r\n                    </Select>\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\n// 设置权限\r\nclass PermEditForm extends Component {\r\n    state = {};\r\n    permFormRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.props.wrappedComponentRef(this.permFormRef);\r\n    }\r\n\r\n    // 设置选中的节点，通过父组件方法再传递回来\r\n    onCheck = checkedKeys => {\r\n        this.props.patchMenuInfo(checkedKeys);\r\n    };\r\n\r\n    renderTreeNodes = (data, key='') => {\r\n        return data.map(item => {\r\n            let parentKey = key + item.key;\r\n            if (item.children) {\r\n                return (\r\n                    <TreeNode title={item.title} key={parentKey} dataRef={item} className=\"op-role-tree\">\r\n                        {this.renderTreeNodes(item.children, parentKey)}\r\n                    </TreeNode>\r\n                );\r\n            } else if (item.btnList) {\r\n                return (\r\n                    <TreeNode title={item.title} key={parentKey} dataRef={item} className=\"op-role-tree\">\r\n                        {this.renderBtnTreeNode(item, parentKey)}\r\n                    </TreeNode>\r\n                )\r\n            }\r\n            return <TreeNode {...item} />;\r\n        });\r\n    };\r\n\r\n    renderBtnTreeNode = (menu, parentKey='') => {\r\n        const btnTreeNode = [];\r\n        menu.btnList.forEach(item => {\r\n            console.log(parentKey + '-btn-' + item.key);\r\n            btnTreeNode.push(<TreeNode title={item.title} key={parentKey+'-btn-'+item.key} className=\"op-role-tree\" />)\r\n        });\r\n        return btnTreeNode;\r\n    };\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 5 },\r\n            wrapperCol: { span: 18 }\r\n        };\r\n        const { detailInfo, menuInfo } = this.props;\r\n        return (\r\n            <Form\r\n                layout=\"horizontal\"\r\n                {...formItemLayout}\r\n                initialValues={{\r\n                    status: 1\r\n                }}\r\n                ref={this.permFormRef}\r\n            >\r\n                <FormItem label=\"角色名称：\">\r\n                    <Input disabled maxLength=\"8\" placeholder={detailInfo.role_name} />\r\n                </FormItem>\r\n                <FormItem label=\"状态：\" name=\"status\">\r\n                    <Select style={{width: 80}}>\r\n                        <Option value={1}>启用</Option>\r\n                        <Option value={0}>停用</Option>\r\n                    </Select>\r\n                </FormItem>\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll\r\n                    onCheck={checkedKeys => this.onCheck(checkedKeys)}\r\n                    checkedKeys={menuInfo || []}\r\n                >\r\n                    <TreeNode title=\"平台权限\" key=\"platform_all\">\r\n                        {this.renderTreeNodes(menuConfig)}\r\n                    </TreeNode>\r\n                </Tree>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\n// 用户授权\r\nclass RoleAuthForm extends Component {\r\n    userAuthFormRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.props.wrappedComponentRef(this.userAuthFormRef);\r\n    }\r\n\r\n    filterOption = (inputValue, option) => {\r\n        return option.title.indexOf(inputValue) > -1;\r\n    };\r\n\r\n    handleChange = targetKeys => {\r\n        this.props.patchUserInfo(targetKeys);\r\n    };\r\n\r\n    render() {\r\n        const formItemLayout={\r\n            labelCol: { span: 5 },\r\n            wrapperCol: { span: 18 }\r\n        };\r\n        const { detailInfo } = this.props;\r\n        return (\r\n            <Form\r\n                layout=\"horizontal\"\r\n                {...formItemLayout}\r\n                ref={this.userAuthFormRef}\r\n            >\r\n                <FormItem label=\"角色名称：\">\r\n                    <Input disabled maxLength={8} placeholder={detailInfo.role_name} />\r\n                </FormItem>\r\n                <FormItem label=\"选择用户：\">\r\n                    <Transfer\r\n                        listStyle={{width: 200, height: 400}}\r\n                        dataSource={this.props.mockData}\r\n                        showSearch\r\n                        titles={['待选用户', '已选用户']}\r\n                        searchPlaceholder=\"输入用户名\"\r\n                        filterOption={this.filterOption}\r\n                        targetKeys={this.props.targetKeys}\r\n                        onChange={this.handleChange}\r\n                        render={item => item.title}\r\n                    />\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Permission;","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport App from './../App';\nimport Login from '../pages/login';\nimport Admin from './../admin';\nimport Buttons from './../pages/ui/buttons';\nimport Modals from './../pages/ui/modals';\nimport Loadings from './../pages/ui/loadings';\nimport Notice from './../pages/ui/notice';\nimport Messages from './../pages/ui/messages';\nimport Tabs from './../pages/ui/tabs';\nimport Gallery from './../pages/ui/gallery';\nimport Carousel from './../pages/ui/carousel';\nimport FormLogin from './../pages/form/login';\nimport FormRegister from './../pages/form/register';\nimport NoMatch from './../pages/nomatch';\nimport Home from './../pages/home';\nimport BasicTable from './../pages/table/basicTable';\nimport HighTable from './../pages/table/highTable';\nimport City from './../pages/city';\nimport Order from './../pages/order';\nimport Common from './../common';\nimport OrderDetail from './../pages/order/detail';\nimport User from './../pages/user';\nimport BikeMap from './../pages/map/bikeMap';\nimport Bar from './../pages/echarts/bar';\nimport Pie from './../pages/echarts/pie';\nimport Line from './../pages/echarts/line';\nimport RichText from './../pages/rich';\nimport Permission from './../pages/permission';\n\nexport default class IRouter extends React.Component {\n    render() {\n        return (\n            <Router>\n                <App>\n                    <Switch>\n                        <Route path=\"/login\" component={Login} />\n                        <Route path=\"/common\" render={() =>\n                            <Common>\n                                <Route path=\"/common/order/detail/:orderId\" component={OrderDetail} />\n                            </Common>\n                        } />\n                        <Route\n                            path=\"/\"\n                            render={() => (\n                                <Admin>\n                                    <Switch>\n                                        <Route path=\"/home\" component={Home} />\n                                        <Route path=\"/ui/buttons\" component={Buttons} />\n                                        <Route path=\"/ui/modals\" component={Modals} />\n                                        <Route path=\"/ui/loadings\" component={Loadings} />\n                                        <Route path=\"/ui/notification\" component={Notice} />\n                                        <Route path=\"/ui/messages\" component={Messages} />\n                                        <Route path=\"/ui/tabs\" component={Tabs} />\n                                        <Route path=\"/ui/gallery\" component={Gallery} />\n                                        <Route path=\"/ui/carousel\" component={Carousel} />\n                                        <Route path=\"/form/login\" component={FormLogin} />\n                                        <Route path=\"/form/reg\" component={FormRegister} />\n                                        <Route path=\"/table/basic\" component={BasicTable} />\n                                        <Route path=\"/table/high\" component={HighTable} />\n                                        <Route path=\"/city\" component={City} />\n                                        <Route path=\"/order\" component={Order} />\n                                        <Route path=\"/user\" component={User} />\n                                        <Route path=\"/bikeMap\" component={BikeMap} />\n                                        <Route path=\"/charts/bar\" component={Bar} />\n                                        <Route path=\"/charts/pie\" component={Pie} />\n                                        <Route path=\"/charts/line\" component={Line} />\n                                        <Route path=\"/rich\" component={RichText} />\n                                        <Route path=\"/permission\" component={Permission} />\n                                        <Redirect to=\"/home\" />\n                                        {/* <Route component={NoMatch} /> */}\n                                    </Switch>\n                                </Admin>\n                            )}\n                        ></Route>\n                    </Switch>\n                </App>\n            </Router>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    SWITCH_MENU\r\n} from './actionTypes';\r\n\r\nconst defaultState = {\r\n    menuName: '首页'\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_MENU:\r\n            const newState = JSON.parse(JSON.stringify(state));\r\n            newState.menuName = action.menuName;\r\n            return newState;\r\n        default:\r\n            return {...state};\r\n    }\r\n};","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import Jsx from './demos/Jsx';\n// import Life from './pages/demos/Life';\n// import Admin from './admin';\nimport Router from './router';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Admin /> */}\n    <Provider store={store}>\n        <Router />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}