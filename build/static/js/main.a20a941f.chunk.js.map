{"version":3,"sources":["App.js","pages/login/index.js","utils/index.js","axios/index.js","components/Header/index.js","components/Footer/index.js","config/menuConfig.js","components/NavLeft/index.js","admin.js","pages/ui/buttons.js","pages/ui/modals.js","pages/ui/loadings.js","pages/ui/notice.js","pages/ui/messages.js","pages/ui/tabs.js","pages/ui/gallery.js","pages/ui/carousel.js","pages/form/login.js","pages/form/register.js","pages/nomatch/index.js","pages/home/index.js","pages/table/basicTable.js","pages/table/highTable.js","pages/city/index.js","components/BaseForm/index.js","components/ETable/index.js","pages/order/index.js","common.js","pages/order/detail.js","pages/user/index.js","pages/map/bikeMap.js","pages/echarts/echartTheme.js","pages/echarts/bar/index.js","pages/echarts/themeLight.js","pages/echarts/pie/index.js","pages/echarts/line/index.js","pages/rich/index.js","router/index.js","serviceWorker.js","index.js"],"names":["App","style","width","this","props","children","React","Component","Login","Option","formatDate","timestamp","date","Date","year","getFullYear","month","toDouble","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","str","pagination","data","callback","onChange","current","result","page","pageSize","page_size","total","total_count","showTotal","showQuickJumper","getOptionList","options","forEach","item","push","value","id","key","name","updateSelectedItem","selectedRowKeys","selectedRows","selectedIds","setState","selectedItem","Axios","_this","url","params","isMock","ajax","then","res","list","item_list","map","index","Utils","requestList","Promise","resolve","reject","JsonP","param","err","response","status","message","loading","isShowLoading","document","getElementById","display","baseApi","axios","method","baseURL","timeout","code","info","title","content","msg","console","log","catch","type","Header","state","userName","setInterval","sysTime","Util","getTime","getWeatherAPIData","jsonp","encodeURIComponent","results","weather_data","dayPictureUrl","weather","menuType","logoSrc","process","className","span","src","alt","href","Footer","menuList","btnList","SubMenu","NavLeft","renderMenu","Item","to","menuTreeNode","MenuConfig","theme","Admin","Buttons","size","handleCloseLoading","handleChange","e","target","disabled","icon","PlusOutlined","EditOutlined","DeleteOutlined","shape","SearchOutlined","DownloadOutlined","onClick","Group","LeftOutlined","RightOutlined","Modals","showModal1","showModal2","showModal3","showModal4","handleOpen","handleConfirm","onOk","onCancel","visible","okText","cancelText","top","wrapClassName","Loadings","iconLoading","LoadingOutlined","fontSize","margin","indicator","marginLeft","spinning","description","marginBottom","tip","Notice","openNotification","direction","notification","config","placement","Messages","showMessage","TabPane","UITabs","newTabIndex","handleCallback","activeKey","onEdit","targetKey","action","add","panes","remove","lastIndex","pane","i","filter","length","defaultActiveKey","tab","Gallery","openGallery","imgSrc","currentImg","imgList","cover","Meta","gutter","md","footer","UICarousel","imgBaseURL","autoplay","effect","FormItem","FormLogin","handleSubmit","userInfo","success","pwd","layout","placeholder","marginTop","initialValues","remember","onFinish","rules","required","min","max","pattern","RegExp","prefix","UserOutlined","LockOutlined","valuePropName","noStyle","float","htmlType","RadioGroup","TextArea","FormRegister","JSON","stringify","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","file","originFileObj","imageUrl","userImg","offsetLayout","wrapperCol","xs","sm","offset","sex","age","interest","isMarried","birthday","moment","address","time","labelCol","label","mode","autoSize","minRows","maxRows","listType","showUploadList","height","NoMatch","textAlign","Home","BasicTable","dataSource2","request","selectedCheckRowKeys","selectedCheckRows","onRowClick","record","handleDelete","ids","join","dataSource","columns","dataIndex","render","rowSelection","rowCheckSelection","bordered","onRow","HighTable","filters","sorter","sortOrder","order","confirm","columns3","a","b","abc","columns4","text","scroll","y","fixed","x","FilterForm","OpenCityForm","city_id","op_mode","use_mode","ref","formRef","City","isShowOpenCity","createRef","handleOpenCity","getFieldsValue","cityInfo","arr","user_name","formateDate","initFormList","formList","formItemList","field","SELECT","startTime","showTime","format","endTime","colon","INPUT","CHECKBOX","DATE","handleFilterSubmit","fieldsValue","filterSubmit","reset","resetFields","ETable","indexOf","splice","selectKey","onSelectChange","onSelectAll","selected","changeRows","getOptions","p","nameList","onSelect","row_selection","Order","orderInfo","orderConfirmVisible","city","order_status","openOrderDetail","ORDER_DETAIL_RUL","window","open","orderId","handleFinishOrder","handleFilter","formItemLayout","BaseForm","bind","distance","bike_sn","battery","start_time","location","common","OrderDetail","getDetailInfo","renderMap","BMap","Map","addMapControl","drawBikeRoute","position_list","drawServiceArea","area","addControl","ScaleControl","anchor","BMAP_ANCHOR_TOP_RIGHT","NavigationControl","positionList","startPoint","endPoint","first","last","Point","lon","lat","startIcon","Icon","Size","imageSize","startMarker","Marker","addOverlay","endIcon","endMarker","trackPoint","point","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","centerAndZoom","polygon","Polygon","fillColor","fillOpacity","match","order_sn","mobile","start_location","end_location","User","isVisible","handleOperator","userFormRef","wrappedComponentRef","inst","UserForm","getState","username","Moment","rows","BikeMap","initalValues","end_time","filterParams","route_list","enableMapClick","gps1","split","gps2","startPointIcon","bikeMarkerStart","endPointIcon","bikeMarkerEnd","routeList","polyLine","serviceList","service_list","servicePointist","polyServiceLine","bikeList","bike_list","bikeIcon","bikeMarker","top_right_control","top_right_navigation","enableScrollWheelZoom","Bar","getOption","tooltip","trigger","xAxis","yAxis","series","getOption2","legend","echarts","registerTheme","echartTheme","option","notMerge","lazyUpdate","colorPalette","color","textStyle","fontWeight","visualMap","toolbox","iconStyle","normal","borderColor","backgroundColor","axisPointer","lineStyle","crossStyle","shadowStyle","dataZoom","dataBackgroundColor","fillerColor","handleColor","categoryAxis","axisLine","splitLine","show","valueAxis","splitArea","timeline","controlStyle","symbol","symbolSize","line","itemStyle","borderWidth","emphasis","candlestick","color0","graph","areaColor","gauge","axisTick","splitNumber","axisLabel","offsetCenter","Pie","orient","right","bottom","formatter","radius","center","shadowBlur","shadowOffsetX","shadowColor","getOption3","sort","roseType","animationType","animationEasing","animationDelay","idx","Math","random","themeLight","Line","stack","boundaryGap","areaStyle","RichText","showRichText","editorContent","editorState","handleClearContent","handleGetText","onEditorChange","onEditorStateChange","onContentStateChange","draftjs","IRouter","path","component","Tabs","Carousel","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a20a941f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\n\nexport default class Login extends React.Component {\n    render() {\n        return (\n            <div>\n                this is login page;\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport { Select } from 'antd';\nconst Option = Select.Option;\n\nexport default {\n    formatDate(timestamp) {\n        if (!timestamp) return '';\n        let date = new Date(timestamp);\n        let year = date.getFullYear();\n        let month = this.toDouble(date.getMonth() + 1);\n        let day = this.toDouble(date.getDate());\n        let hour = this.toDouble(date.getHours());\n        let minute = this.toDouble(date.getMinutes());\n        let second = this.toDouble(date.getSeconds());\n        return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n    },\n\n    toDouble(str) {\n        return str < 10 ? '0' + str : str;\n    },\n\n    pagination(data, callback) {\n        return {\n            onChange: current => {\n                callback(current);\n            },\n            current: data.result.page,\n            pageSize: data.result.page_size,\n            total: data.result.total_count,\n            showTotal: () => {\n                return `共${data.result.total_count}条`;\n            },\n            showQuickJumper: true\n        };\n    },\n\n    getOptionList(data) {\n        if (!data) {\n            return [];\n        }\n        let options = [];\n        data.forEach(item => {\n            options.push(<Option value={item.id} key={item.id}>{item.name}</Option>);\n        });\n        return options;\n    },\n\n    /**\n     * ETable 行点击通用函数\n     * @param {*选中行的索引} selectedRowKeys\n     * @param {*选中行对象} selectedRows\n     * @param {*选中行的id} selectedIds\n     */\n    updateSelectedItem(selectedRowKeys, selectedRows, selectedIds) {\n        if (selectedIds) {\n            this.setState({\n                selectedRowKeys,\n                selectedIds,\n                selectedItem: selectedRows\n            });\n        } else {\n            this.setState({\n                selectedRowKeys,\n                selectedItem: selectedRows\n            });\n        }\n    }\n};","import JsonP from 'jsonp';\nimport axios from 'axios';\nimport { Modal } from 'antd';\nimport Utils from './../utils';\n\nexport default class Axios {\n    static requestList(_this, url, params, isMock) {\n        const data = {\n            params,\n            isMock\n        };\n        this.ajax({\n            url,\n            data\n        }).then(res => {\n            if (res && res.result) {\n                const list = res.result.item_list.map((item, index) => {\n                    item.key = index;\n                    return item;\n                });\n                _this.setState({\n                    list,\n                    pagination: Utils.pagination(res, current => {\n                        _this.params.page = current;\n                        _this.requestList();\n                    })\n                });\n            }\n        });\n    }\n\n    static jsonp(options) {\n        return new Promise((resolve, reject) => {\n            JsonP(options.url, {\n                param: 'callback'\n            }, function(err, response) {\n                if (response.status === 'success') {\n                    resolve(response);\n                } else {\n                    reject(response.message);\n                }\n            })\n        })\n    }\n\n    static ajax(options) {\n        let loading;\n        if (options.data && options.data.isShowLoading !== false) {\n            loading = document.getElementById('ajaxLoading');\n            loading.style.display = 'block';\n        }\n        let baseApi = '';\n        if (options.isMock) {\n            baseApi = 'https://www.easy-mock.com/mock/5f4fa47a66f90555e2209e3b/api';\n        } else {\n            baseApi = 'https://www.easy-mock.com/mock/5f4fa47a66f90555e2209e3b/api';\n        }\n        return new Promise((resolve, reject) => {\n            axios({\n                url: options.url,\n                method: 'get',\n                baseURL: baseApi,\n                timeout: 5000\n            }).then(response => {\n                if (options.data && options.data.isShowLoading !== false) {\n                    loading = document.getElementById('ajaxLoading');\n                    loading.style.display = 'none';\n                }\n                if (response.status === 200) {\n                    const res = response.data;\n                    if (res.code === 0) {\n                        resolve(res);\n                    } else {\n                        Modal.info({\n                            title: '提示',\n                            content: res.msg\n                        })\n                    }\n                } else {\n                    console.log('reject');\n                    reject(response.data);\n                }\n            }).catch(err => {\n                console.log('error', err);\n                Modal.info({\n                    type: 'error',\n                    title: '提示',\n                    content: err.message\n                });\n                loading.style.display = 'none';\n            });\n        });\n    }\n};\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport './index.less';\nimport Util from '../../utils';\nimport axios from '../../axios';\n\nexport default class Header extends React.Component {\n    state = {};\n\n    componentDidMount() {\n        this.setState({\n            userName: 'yilujun100'\n        });\n        setInterval(() => {\n            let sysTime = Util.formatDate(new Date().getTime());\n            this.setState({\n                sysTime\n            });\n        }, 1000);\n        this.getWeatherAPIData();\n    }\n\n    getWeatherAPIData() {\n        let city = '成都';\n        axios.jsonp({\n            url: 'http://api.map.baidu.com/telematics/v3/weather?location=' + encodeURIComponent(city) + '&output=json&ak=rCoT9oPRq1tuugGRb6pcXtN7RUVGGI9K'\n        }).then(res => {\n            const {dayPictureUrl, weather} = res.results[0].weather_data[0];\n            this.setState({\n                dayPictureUrl,\n                weather\n            });\n        });\n    }\n\n    render() {\n        const { menuType } = this.props;\n        const logoSrc = process.env.NODE_ENV === 'development' ? '/assets/logo-ant.svg' : `${process.env.PUBLIC_URL}/assets/logo-ant.svg`;\n        return (\n            <div className=\"header\" style={{width: '100%'}}>\n                <Row className=\"header-top\">\n                    {\n                        menuType ?\n                            <Col span={6} className=\"logo\">\n                                <img src={logoSrc} alt=\"\"/>\n                                <span>共享单车管理系统</span>\n                            </Col> : ''\n                    }\n                    <Col span={menuType ? 18 : 24}>\n                        <span>欢迎，{this.state.userName}</span>\n                        <a href=\"void: 0\">退出</a>\n                    </Col>\n                </Row>\n                {\n                    menuType ? '' : (\n                        <Row className=\"breadcrumb\">\n                            <Col span={4} className=\"breadcrumb-title\">首页</Col>\n                            <Col span={20} className=\"weather\">\n                                <span className=\"date\">{this.state.sysTime}</span>\n                                <span className=\"weather-img\">\n                                    <img src={this.state.dayPictureUrl} alt=\"\"/>\n                                </span>\n                                <span className=\"weather-detail\">\n                                    {this.state.weather}\n                                </span>\n                            </Col>\n                        </Row>\n                    )\n                }\n            </div>\n        );\n    }\n};","import React from 'react';\nimport './index.less';\n\nexport default class Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"footer\">\n               版权所有：yilujun100（推荐使用谷歌浏览器，可以获得更佳操作页面体验） 技术支持：yilujun100\n            </div>\n        );\n    }\n};","const menuList = [\n    {\n        title: '首页',\n        key: '/home'\n    },\n    {\n        title: 'UI',\n        key: '/ui',\n        children: [\n            {\n                title: '按钮',\n                key: '/ui/buttons'\n            },\n            {\n                title: '弹框',\n                key: '/ui/modals'\n            },\n            {\n                title: 'Loading',\n                key: '/ui/loadings'\n            },\n            {\n                title: '通知提醒',\n                key: '/ui/notification'\n            },\n            {\n                title: '全局Message',\n                key: '/ui/messages'\n            },\n            {\n                title: 'Tab页签',\n                key: '/ui/tabs'\n            },\n            {\n                title: '图片画廊',\n                key: '/ui/gallery'\n            },\n            {\n                title: '轮播图',\n                key: '/ui/carousel'\n            }\n        ]\n    },\n    {\n        title: '表单',\n        key: '/form',\n        children: [\n            {\n                title: '登录',\n                key: '/form/login'\n            },\n            {\n                title: '注册',\n                key: '/form/reg'\n            }\n        ]\n    },\n    {\n        title: '表格',\n        key: '/table',\n        children: [\n            {\n                title: '基础表格',\n                key: '/table/basic'\n            },\n            {\n                title: '高级表格',\n                key: '/table/high'\n            }\n        ]\n    },\n    {\n        title: '富文本',\n        key: '/rich'\n    },\n    {\n        title: '城市管理',\n        key: '/city'\n    },\n    {\n        title: '订单管理',\n        key: '/order',\n        btnList: [\n            {\n                title: '订单详情',\n                key: 'detail'\n            },\n            {\n                title: '结束订单',\n                key: 'finish'\n            }\n        ]\n    },\n    {\n        title: '员工管理',\n        key: '/user'\n    },\n    {\n        title: '车辆地图',\n        key: '/bikeMap'\n    },\n    {\n        title: '图表',\n        key: '/charts',\n        children: [\n            {\n                title: '柱形图',\n                key: '/charts/bar'\n            },\n            {\n                title: '饼图',\n                key: '/charts/pie'\n            },\n            {\n                title: '折线图',\n                key: '/charts/line'\n            }\n        ]\n    },\n    {\n        title: '权限设置',\n        key: '/permission'\n    }\n];\n\nexport default menuList;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport MenuConfig from './../../config/menuConfig';\nimport './index.less';\n\nconst { SubMenu } = Menu;\n\nexport default class NavLeft extends React.Component {\n    constructor(props) {\n        super(props);\n        const menuTreeNode = this.renderMenu(MenuConfig);\n        this.state = {\n            menuTreeNode\n        };\n    }\n\n    // 菜单渲染\n    renderMenu = data => {\n        return data.map(item => {\n            if (item.children) {\n                return (\n                    <SubMenu title={item.title} key={item.key}>\n                        { this.renderMenu(item.children) }\n                    </SubMenu>\n                );\n            }\n            return <Menu.Item title={item.title} key={item.key}>\n                <NavLink to={item.key}>{ item.title }</NavLink>\n            </Menu.Item>;\n        });\n    }\n\n    render() {\n        const logoSrc = process.env.NODE_ENV === 'development' ? '/assets/logo-ant.svg' : `${process.env.PUBLIC_URL}/assets/logo-ant.svg`;\n        return (\n            <div>\n                <div className=\"logo\">\n                    <img src={logoSrc} alt=\"\" />\n                    <h1>Bicycle MS</h1>\n                </div>\n                <Menu\n                    theme=\"dark\"\n                >\n                    { this.state.menuTreeNode }\n                </Menu>\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport NavLeft from './components/NavLeft';\nimport './styles/common.less';\n// import Home from './pages/demos/demo-router/route1/Home';\n// import IRouter from './pages/demos/demo-router/route2/router';\n// import IRouter from './pages/demos/demo-router/route3/router';\n\nexport default class Admin extends React.Component {\n    render() {\n        return (\n            <Row className=\"container\">\n                <Col span={3} className=\"nav-left\">\n                    <NavLeft />\n                </Col>\n                <Col span={21} className=\"main\">\n                    <Header />\n                    <Row className=\"content\">\n                        {/* <Home /> */}\n                        {this.props.children}\n                    </Row>\n                    <Footer />\n                </Col>\n            </Row>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Card, Button, Radio } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined, SearchOutlined, DownloadOutlined, LeftOutlined, RightOutlined } from '@ant-design/icons';\nimport './ui.less';\n\nexport default class Buttons extends Component {\n    state = {\n        loading: true,\n        size: 'default'\n    };\n\n    handleCloseLoading = () => {\n        this.setState({\n            loading: false\n        });\n    }\n\n    handleChange = e => {\n        this.setState({\n            size: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"基础按钮\" className=\"card-wrap\">\n                    <Button type=\"primary\">Primary Button</Button>\n                    <Button>Default Button</Button>\n                    <Button type=\"dashed\">Dashed Button</Button>\n                    <Button type=\"danger\">Danger Button</Button>\n                    <Button disabled>Disabled Button</Button>\n                </Card>\n                <Card title=\"图形按钮\" className=\"card-wrap\">\n                    <Button icon={<PlusOutlined />}>创建</Button>\n                    <Button icon={<EditOutlined />}>编辑</Button>\n                    <Button icon={<DeleteOutlined />}>删除</Button>\n                    <Button shape=\"circle\" icon={<SearchOutlined />}></Button>\n                    <Button type=\"primary\" icon={<SearchOutlined />}>搜索</Button>\n                    <Button type=\"primary\" icon={<DownloadOutlined />}>下载</Button>\n                </Card>\n                <Card title=\"Loading按钮\" className=\"card-wrap\">\n                    <Button type=\"primary\" loading={this.state.loading}>确定</Button>\n                    <Button type=\"primary\" shape=\"circle\" loading={this.state.loading}></Button>\n                    <Button loading={this.state.loading}>点击加载</Button>\n                    <Button shape=\"circle\" loading={this.state.loading}></Button>\n                    <Button type=\"primary\" onClick={this.handleCloseLoading}>关闭</Button>\n                </Card>\n                <Card title=\"按钮组\">\n                    <Button.Group>\n                        <Button type=\"primary\" icon={<LeftOutlined />}>返回</Button>\n                        <Button type=\"primary\" icon={<RightOutlined />}>前进</Button>\n                    </Button.Group>\n                </Card>\n                <Card title=\"按钮尺寸\" className=\"card-wrap\">\n                    <Radio.Group value={this.state.size} onChange={this.handleChange}>\n                        <Radio value=\"small\">小</Radio>\n                        <Radio value=\"default\">中</Radio>\n                        <Radio value=\"large\">大</Radio>\n                    </Radio.Group>\n                    <Button type=\"primary\" size={this.state.size}>Primary Button</Button>\n                    <Button size={this.state.size}>Default Button</Button>\n                    <Button type=\"dashed\" size={this.state.size}>Dashed Button</Button>\n                    <Button type=\"danger\" size={this.state.size}>Danger Button</Button>\n                </Card>\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Button, Modal } from 'antd';\nimport './ui.less';\n\nexport default class Modals extends Component {\n    state = {\n        showModal1: false,\n        showModal2: false,\n        showModal3: false,\n        showModal4: false\n    };\n\n    handleOpen = type => {\n        this.setState({\n            [type]: true\n        })\n    };\n\n    handleConfirm = type => {\n        Modal[type]({\n            title: '确认？',\n            content: '你确定你学会了React了吗？',\n            onOk() {\n                console.log('Ok');\n            },\n            onCancel() {\n                console.log('Cancel');\n            }\n        });\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"基础模态框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal1')}>Open</Button>\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal2')}>自定义页脚</Button>\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal3')}>顶部20px弹框</Button>\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal4')}>水平垂直居中</Button>\n                </Card>\n                <Card title=\"信息确认框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('confirm')}>Confirm</Button>\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('warning')}>Warning</Button>\n                </Card>\n                <Modal\n                    title=\"React\"\n                    visible={this.state.showModal1}\n                    onCancel={() => {\n                        this.setState({\n                            showModal1: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n                <Modal\n                    title=\"React\"\n                    visible={this.state.showModal2}\n                    okText=\"好的\"\n                    cancelText=\"算了\"\n                    onCancel={() => {\n                        this.setState({\n                            showModal2: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n                <Modal\n                    title=\"React\"\n                    style={{top: 20}}\n                    visible={this.state.showModal3}\n                    onCancel={() => {\n                        this.setState({\n                            showModal3: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n                <Modal\n                    title=\"React\"\n                    wrapClassName=\"vertical-center-modal\"\n                    visible={this.state.showModal4}\n                    onCancel={() => {\n                        this.setState({\n                            showModal4: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Spin, Alert } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport './ui.less';\n\nexport default class Loadings extends Component {\n    render() {\n        const iconLoading = <LoadingOutlined style={{fontSize: 24}} />;\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"Spin用法\" className=\"card-wrap\">\n                    <Spin size=\"small\" />\n                    <Spin style={{margin: '0 10px'}} />\n                    <Spin size=\"large\" />\n                    <Spin indicator={iconLoading} style={{marginLeft: 10}} spinning={true} />\n                </Card>\n                <Card title=\"内容遮罩\" className=\"card-wrap\">\n                    <Alert\n                        message=\"Alert message title\"\n                        description=\"Further details about the context of this alert.\"\n                        type=\"info\"\n                        style={{ marginBottom: 10 }}\n                    />\n                    <Spin>\n                        <Alert\n                            message=\"Alert message title\"\n                            description=\"Further details about the context of this alert.\"\n                            type=\"warning\"\n                            style={{ marginBottom: 10 }}\n                        />\n                    </Spin>\n                    <Spin tip=\"加载中...\">\n                        <Alert\n                            message=\"Alert message title\"\n                            description=\"Further details about the context of this alert.\"\n                            type=\"warning\"\n                            style={{ marginBottom: 10 }}\n                        />\n                    </Spin>\n                    <Spin indicator={iconLoading}>\n                        <Alert\n                            message=\"Alert message title\"\n                            description=\"Further details about the context of this alert.\"\n                            type=\"warning\"\n                            style={{ marginBottom: 10 }}\n                        />\n                    </Spin>\n                </Card>\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Button, notification } from 'antd';\nimport './ui.less';\n\nclass Notice extends Component {\n    openNotification = (type, direction) => {\n        if (direction) {\n            notification.config({\n                placement: direction\n            });\n        }\n        notification[type]({\n            message: 'Notification Title',\n            description: 'This is the content of the notification.'\n        });\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.openNotification('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('error')}>Error</Button>\n                </Card>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.openNotification('success', 'topLeft')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('info', 'topRight')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('warning', 'bottomLeft')}>Warning</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('error', 'bottomRight')}>Error</Button>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Notice;\n","import React, { Component } from 'react';\nimport { Card, Button, message } from 'antd';\nimport './ui.less';\n\nclass Messages extends Component {\n    showMessage = type => {\n        message[type]('恭喜你，成功晋升最强王者');\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"全局提示框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.showMessage('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('error')}>Error</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('loading')}>Loading</Button>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport { Card, Tabs, message } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport './ui.less';\nconst { TabPane } = Tabs;\n\nclass UITabs extends Component {\n    newTabIndex = 0;\n    handleCallback = key => {\n        message.info('Hi,您选择了页签：' + key);\n    };\n\n    componentWillMount() {\n        const panes = [\n            {\n                title: 'Tab 1',\n                content: 'Tab 1',\n                key: '1'\n            },\n            {\n                title: 'Tab 2',\n                content: 'Tab 2',\n                key: '2'\n            },\n            {\n                title: 'Tab 3',\n                content: 'Tab 3',\n                key: '3'\n            }\n        ];\n        this.setState({\n            activeKey: panes[0].key,\n            panes\n        });\n    }\n\n    onChange = activeKey => {\n        this.setState({\n            activeKey\n        });\n    };\n\n    onEdit = (targetKey, action) => {\n        this[action](targetKey);\n    };\n\n    add = () => {\n        const { panes } = this.state;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({ title: 'New Tab', content: 'New Tab Pane', key: activeKey });\n        this.setState({ panes, activeKey });\n    };\n\n    remove = targetKey => {\n        let { activeKey } = this.state;\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (panes.length && activeKey === targetKey) {\n            if (lastIndex >= 0) {\n                activeKey = panes[lastIndex].key;\n            } else {\n                activeKey = panes[0].key;\n            }\n        }\n        this.setState({\n            panes,\n            activeKey\n        });\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"Tab页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleCallback}>\n                        <TabPane tab=\"Tab 1\" key=\"1\">\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab=\"Tab 2\" key=\"2\" disabled>\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab=\"Tab 3\" key=\"3\">\n                            React是一个非常受欢迎的MV*框架\n                        </TabPane>\n                    </Tabs>\n                </Card>\n                <Card title=\"Tab带图的页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleCallback}>\n                        <TabPane tab={<span><PlusOutlined />Tab 1</span>} key=\"1\">\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab={<span><EditOutlined />Tab 2</span>} key=\"2\">\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab={<span><DeleteOutlined />Tab 3</span>} key=\"3\">\n                            React是一个非常受欢迎的MV*框架\n                        </TabPane>\n                    </Tabs>\n                </Card>\n                <Card title=\"Tab带图的页签\" className=\"card-wrap\">\n                    <Tabs\n                        onChange={this.onChange}\n                        activeKey={this.state.activeKey}\n                        type=\"editable-card\"\n                        onEdit={this.onEdit}\n                    >\n                        {\n                            this.state.panes.map(pane => (\n                                <TabPane tab={pane.title} key={pane.key}>\n                                    {pane.content}\n                                </TabPane>\n                            ))\n                        }\n                    </Tabs>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default UITabs;","import React, { Component } from 'react';\nimport { Card, Row, Col, Modal } from 'antd';\n\nclass Gallery extends Component {\n    state = {\n        visible: false\n    };\n\n    openGallery = imgSrc => {\n        this.setState({\n            visible: true,\n            currentImg: `/gallery/${imgSrc}`\n        });\n    };\n\n    render() {\n        const baseURL = process.env.NODE_ENV === 'development' ? '/gallery/' : `${process.env.PUBLIC_URL}/gallery/`;\n        const imgs = [\n            ['1.png', '2.png', '3.png', '4.png', '5.png'],\n            ['6.png', '7.png', '8.png', '9.png', '10.png'],\n            ['11.png', '12.png', '13.png', '14.png', '15.png'],\n            ['16.png', '17.png', '18.png', '19.png', '20.png'],\n            ['21.png', '22.png', '23.png', '24.png', '25.png']\n        ];\n        const imgList = imgs.map(list => list.map(item => (\n            <Card\n                style={{marginBottom: 10}}\n                cover={<img src={`${baseURL}${item}`} onClick={() => this.openGallery(item)} alt=\"cover\" />}\n            >\n                <Card.Meta\n                    title=\"React Admin\"\n                    description=\"I Love React\"\n                />\n            </Card>\n        )))\n        return (\n            <div className=\"card-wrap\">\n                <Row gutter={10}>\n                    <Col md={5}>\n                        {imgList[0]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[1]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[2]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[3]}\n                    </Col>\n                    <Col md={4}>\n                        {imgList[4]}\n                    </Col>\n                </Row>\n                <Modal\n                    width={420}\n                    visible={this.state.visible}\n                    title=\"图片画廊\"\n                    onCancel={()=>{\n                        this.setState({\n                            visible:false\n                        })\n                    }}\n                    footer={null}\n                >\n                   {<img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Gallery;","import React, { Component } from 'react';\nimport { Card, Carousel } from 'antd';\nimport './ui.less';\n\nclass UICarousel extends Component {\n    render() {\n        const imgBaseURL = process.env.NODE_ENV === 'development' ? '/carousel-img/' : `${process.env.PUBLIC_URL}/carousel-img/`;\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"文字背景轮播\" className=\"card-wrap\">\n                    <Carousel autoplay effect=\"fade\">\n                        <div><h3>Ant Motion Banner - React</h3></div>\n                        <div><h3>Ant Motion Banner - Vue</h3></div>\n                        <div><h3>Ant Motion Banner - Angular</h3></div>\n                    </Carousel>\n                </Card>\n                <Card title=\"图片轮播\" className=\"slider-wrap\">\n                    <Carousel autoplay effect=\"fade\">\n                        <div>\n                            <img src={`${imgBaseURL}carousel-1.jpg`} alt=\"\"/>\n                        </div>\n                        <div>\n                            <img src={`${imgBaseURL}carousel-2.jpg`} alt=\"\" />\n                        </div>\n                        <div>\n                            <img src={`${imgBaseURL}carousel-3.jpg`} alt=\"\" />\n                        </div>\n                    </Carousel>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default UICarousel;\n","import React, { Component } from 'react';\nimport { Card, Form, Input, Button, message, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nconst FormItem = Form.Item;\n\nclass FormLogin extends Component {\n    handleSubmit = userInfo => {\n        message.success(`${userInfo.userName} 恭喜你，登录成功，当前密码为：${userInfo.pwd}`);\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"登录行内表单\">\n                    <Form layout=\"inline\">\n                        <FormItem>\n                            <Input placeholder=\"请输入用户名\" />\n                        </FormItem>\n                        <FormItem>\n                            <Input placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\">登录</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n                <Card title=\"登录水平表单\" style={{marginTop: 10}}>\n                    <Form\n                        style={{width: 300}}\n                        initialValues={{\n                            userName: '',\n                            pwd: '',\n                            remember: true\n                        }}\n                        onFinish={this.handleSubmit}\n                    >\n                        <FormItem\n                            name=\"userName\"\n                            rules={\n                                [\n                                    { required: true, message: '用户名不能为空' },\n                                    { min: 5, max: 10, message: '长度在 5 到 10 个字符' },\n                                    { pattern: new RegExp('^\\\\w+$', 'g'), message: '用户名必须为字母或者数字' }\n                                ]\n                            }\n                        >\n                            <Input prefix={<UserOutlined />} placeholder=\"请输入用户名\" />\n                        </FormItem>\n                        <FormItem\n                            name=\"pwd\"\n                        >\n                            <Input prefix={<LockOutlined />} type=\"password\" placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem>\n                            <FormItem name=\"remember\" valuePropName=\"checked\" noStyle>\n                                <Checkbox>记住密码</Checkbox>\n                            </FormItem>\n                            <a href=\"void: 0\" style={{float: 'right'}}>忘记密码</a>\n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\" htmlType=\"submit\">登录</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default FormLogin;","import React, { Component } from 'react';\nimport { Card, Form, Button, Input, Checkbox, Radio, Select, Switch, DatePicker, TimePicker, Upload, InputNumber, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst Option = Select.Option;\nconst TextArea= Input.TextArea;\n\nclass FormRegister extends Component {\n    state = {\n        loading: false\n    };\n\n    handleSubmit = userInfo =>{\n        console.log(JSON.stringify(userInfo))\n        message.success(`${userInfo.userName} 恭喜你，注册成功，当前密码为：${userInfo.pwd}`)\n    };\n\n    getBase64 = (img, callback)=>{\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    };\n\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n                userImg:imageUrl,\n                loading: false,\n            }));\n        }\n    };\n\n    render() {\n        const fromItemLayout = {\n            labelCol: {\n                xs: 24,\n                sm: 4\n            },\n            wrapperCol: {\n                xs: 24,\n                sm: 12\n            }\n        };\n        const offsetLayout = {\n            wrapperCol: {\n                xs: 24,\n                sm: {\n                    span: 12,\n                    offset: 4\n                }\n            }\n        };\n        const rowObject = {\n            minRows: 4,\n            maxRows: 6\n        };\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"注册表单\">\n                    <Form\n                        layout=\"horizontal\"\n                        initialValues={{\n                            userName: '',\n                            pwd: '',\n                            sex: '1',\n                            age: 18,\n                            state: '2',\n                            interest: ['2', '5'],\n                            isMarried: true,\n                            birthday: moment('2018-08-08'),\n                            address: '成都市天府广场',\n                            time: '',\n                            userImg: ''\n                        }}\n                        {...fromItemLayout}\n                        onFinish={this.handleSubmit}\n                    >\n                        <FormItem\n                            label=\"用户名\"\n                            name=\"userName\"\n                            rules={\n                                [\n                                    { required: true, message: '用户名不能为空' }\n                                ]\n                            }\n                        >\n                            <Input placeholder=\"请输入用户名\" />\n                        </FormItem>\n                        <FormItem\n                            label=\"密码\"\n                            name=\"pwd\"\n                        >\n                            <Input type=\"password\" placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem\n                            label=\"性别\"\n                            name=\"sex\"\n                        >\n                            <RadioGroup>\n                                <Radio value=\"1\">男</Radio>\n                                <Radio value=\"2\">女</Radio>\n                            </RadioGroup>\n                        </FormItem>\n                        <FormItem\n                            label=\"年龄\"\n                            name=\"age\"\n                        >\n                            <InputNumber />\n                        </FormItem>\n                        <FormItem\n                            label=\"当前状态\"\n                            name=\"state\"\n                        >\n                            <Select>\n                                <Option value=\"1\">咸鱼一条</Option>\n                                <Option value=\"2\">风华浪子</Option>\n                                <Option value=\"3\">北大才子一枚</Option>\n                                <Option value=\"4\">百度FE</Option>\n                                <Option value=\"5\">创业者</Option>\n                            </Select>\n                        </FormItem>\n                        <FormItem\n                            label=\"爱好\"\n                            name=\"interest\"\n                        >\n                            <Select mode=\"multiple\">\n                                <Option value=\"1\">游泳</Option>\n                                <Option value=\"2\">打篮球</Option>\n                                <Option value=\"3\">踢足球</Option>\n                                <Option value=\"4\">跑步</Option>\n                                <Option value=\"5\">爬山</Option>\n                                <Option value=\"6\">骑行</Option>\n                                <Option value=\"7\">桌球</Option>\n                                <Option value=\"8\">麦霸</Option>\n                            </Select>\n                        </FormItem>\n                        <FormItem\n                            label=\"是否已婚\"\n                        >\n                            <FormItem name=\"isMarried\" valuePropName=\"checked\" noStyle>\n                                <Switch />\n                            </FormItem>\n                        </FormItem>\n                        <FormItem\n                            label=\"生日\"\n                            name=\"birthday\"\n                        >\n                            <DatePicker />\n                        </FormItem>\n                        <FormItem\n                            label=\"联系地址\"\n                            name=\"address\"\n                        >\n                            <TextArea autoSize={rowObject} />\n                        </FormItem>\n                        <FormItem\n                            label=\"早起时间\"\n                            name=\"time\"\n                        >\n                            <TimePicker />\n                        </FormItem>\n                        <FormItem\n                            label=\"头像\"\n                        >\n                            <Upload\n                                name=\"userImg\"\n                                listType=\"picture-card\"\n                                showUploadList={false}\n                                action=\"//jsonplaceholder.typicode.com/posts/\"\n                                onChange={this.handleChange}\n                            >\n                                {this.state.userImg ? <img src={this.state.userImg} width=\"100\" height=\"100\" alt=\"userImg\" /> : <PlusOutlined />}\n                            </Upload>\n                        </FormItem>\n                        <FormItem\n                            {...offsetLayout}\n                        >\n                            <Checkbox>我已阅读过<a href=\"void: 0\">用户协议</a></Checkbox>\n                        </FormItem>\n                        <FormItem\n                            {...offsetLayout}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\">注册</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default FormRegister;","import React from 'react';\n\nexport default class NoMatch extends React.Component {\n    render() {\n        return (\n            <div style={{\n                width: '100%',\n                textAlign: 'center',\n                fontSize: 24\n            }}>\n                404 NO Found!!!\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport './index.less';\n\nexport default class Home extends React.Component{\n\n    render(){\n        return (\n            <div className=\"home-wrap\">\n                欢迎进入共享单车后台管理系统\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Table, Modal, Button, message } from 'antd';\nimport axios from './../../axios';\nimport Utils from './../../utils';\n\nclass BasicTable extends Component {\n    state = {\n        dataSource2: []\n    };\n\n    params = {\n        page: 1\n    };\n\n    componentDidMount() {\n        let data = [\n            {\n                id: '0',\n                userName: 'Jack',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            },\n            {\n                id: '1',\n                userName: 'Tom',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            },\n            {\n                id: '2',\n                userName: 'Lily',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            }\n        ];\n        data = data.map((item, index) => ({\n            ...item,\n            key: index\n        }));\n        this.setState({\n            dataSource: data\n        });\n        this.request();\n    }\n\n    // 动态获取mock数据\n    request = () => {\n        let _this = this;\n        axios.ajax({\n            url: '/table/list',\n            data: {\n                params: {\n                    page: this.params.page\n                }\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                res.result.list = res.result.list.map((item, index) => ({\n                    ...item,\n                    key: index\n                }));\n                this.setState({\n                    dataSource2: res.result.list,\n                    selectedRowKeys: [],\n                    selectedRows: null,\n                    selectedCheckRowKeys: [],\n                    selectedCheckRows: null,\n                    pagination: Utils.pagination(res, current => {\n                        _this.params.page = current;\n                        this.request();\n                    })\n                });\n            }\n        });\n    };\n\n    onRowClick = (record, index) => {\n        const selectedRowKeys = [index];\n\n        Modal.info({\n            title: '信息',\n            content: `用户名：${record.userName},用户爱好：${record.interest}`\n        });\n        this.setState({\n            selectedRowKeys,\n            selectedRows: record\n        });\n    };\n\n    // 多选执行删除操作\n    handleDelete = () => {\n        const rows = this.state.selectedCheckRows;\n        const ids = rows.map(item => item.id);\n        Modal.info({\n            title: '删除提示',\n            content: `您确定要删除这些数据吗？${ids.join(',')}`,\n            onOk: () => {\n                message.success('删除成功');\n                this.request();\n            }\n        })\n    };\n\n    render() {\n        const columns = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: sex => {\n                    return sex === '1' ? '男' : '女';\n                }\n            },\n            {\n                title: '状态',\n                key: 'state',\n                dataIndex: 'state',\n                render: state => {\n                    const config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    };\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: interest => {\n                    const config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    };\n                    return config[interest];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time'\n            }\n        ];\n        const { selectedRowKeys, selectedCheckRowKeys } = this.state;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys\n        };\n        const rowCheckSelection = {\n            type: 'checkbox',\n            selectedRowKeys: selectedCheckRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedCheckRowKeys: selectedRowKeys,\n                    selectedCheckRows: selectedRows\n                });\n            }\n        }\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"基础表格\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"动态数据渲染表格-Mock\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-单选\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        rowSelection={rowSelection}\n                        onRow={(record, index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(record, index);\n                                }\n                            };\n                        }}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-多选\" style={{margin: '10px 0'}}>\n                    <div style={{marginBottom: 10}}>\n                        <Button onClick={this.handleDelete}>删除</Button>\n                    </div>\n                    <Table\n                        bordered\n                        rowSelection={rowCheckSelection}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-表格分页\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={this.state.pagination}\n                    />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default BasicTable;\n","import React, { Component } from 'react';\nimport { Card, Table, Modal, Button, message, Badge } from 'antd';\nimport axios from './../../axios';\n\nexport default class HighTable extends Component {\n    state = {\n\n    };\n\n    params = {\n        page: 1\n    };\n\n    // 动态获取mock数据\n    request = () => {\n        axios.ajax({\n            url: '/table/high/list',\n            data: {\n                params: {\n                    page: this.params.page\n                }\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                res.result.list = res.result.list.map((item, index) => ({...item, key: index}));\n                this.setState({\n                    dataSource: res.result.list\n                });\n            }\n        });\n    };\n\n    handleChange = (pagination, filters, sorter) => {\n        this.setState({\n            sortOrder: sorter.order\n        });\n    };\n\n    // 删除操作\n    handleDelete = item => {\n        Modal.confirm({\n            title: '确认',\n            content: '您确认要删除此条数据吗？',\n            onOk: () => {\n                message.success('删除成功');\n                this.request();\n            }\n        });\n    };\n\n    componentDidMount() {\n        this.request();\n    }\n\n    render() {\n        const columns = [\n            {\n                title: 'id',\n                key: 'id',\n                width:80,\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                width: 80,\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                width: 80,\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '状态',\n                key: 'state',\n                width: 80,\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                width: 80,\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                width: 120,\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                width: 80,\n                dataIndex: 'time'\n            }\n        ];\n        const columns2 = [\n            {\n                title: 'id',\n                key: 'id',\n                width:80,\n                fixed: 'left',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                width: 80,\n                fixed: 'left',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                width: 80,\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '状态',\n                key: 'state',\n                width: 80,\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                width: 80,\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                width: 220,\n                fixed: 'right',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                width: 120,\n                fixed: 'right',\n                dataIndex: 'time'\n            }\n        ];\n        const columns3 = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age',\n                sorter: (a, b) => {\n                    return a.age - b.age\n                },\n                sortOrder: this.state.sortOrder\n            },\n            {\n                title: '状态',\n                key: 'state',\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time'\n            }\n        ];\n        const columns4 = [\n            {\n                title: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '年龄',\n                dataIndex: 'age'\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': <Badge status=\"success\" text=\"成功\"/>,\n                        '2': <Badge status=\"error\" text=\"报错\" />,\n                        '3': <Badge status=\"default\" text=\"正常\" />,\n                        '4': <Badge status=\"processing\" text=\"进行中\" />,\n                        '5': <Badge status=\"warning\" text=\"警告\" />\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                dataIndex: 'address'\n            },\n            {\n                title: '操作',\n                render: (text, item) => {\n                    return <Button size=\"small\" onClick={(item) => { this.handleDelete(item) }}>删除</Button>;\n                }\n            }\n        ];\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"头部固定\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        scroll={{ y: 240 }}\n                    />\n                </Card>\n                <Card title=\"左侧固定\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        columns={columns2}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        scroll={{ x: 1800 }}\n                    />\n                </Card>\n                <Card title=\"表格排序\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        columns={columns3}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        onChange={this.handleChange}\n                    />\n                </Card>\n                <Card title=\"操作按钮\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        columns={columns4}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                    />\n                </Card>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Card, Button, Table, Form, Select, Modal, message } from 'antd';\nimport axios from './../../axios';\nimport Utils from './../../utils';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass FilterForm extends Component {\n\n    render() {\n        return (\n            <Form layout=\"inline\">\n                <FormItem\n                    label=\"城市\"\n                    name=\"city_id\"\n                >\n                    <Select\n                        style={{width: 100}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">北京市</Option>\n                        <Option value=\"2\">上海市</Option>\n                        <Option value=\"3\">深圳市</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"用车模式\"\n                    name=\"mode\"\n                >\n                    <Select\n                        style={{width: 120}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">指定停车点模式</Option>\n                        <Option value=\"2\">禁停区模式</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"营运模式\"\n                    name=\"op_mode\"\n                >\n                    <Select\n                        style={{width: 80}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">自营</Option>\n                        <Option value=\"2\">加盟</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"加盟商授权状态\"\n                    name=\"auth_status\"\n                >\n                    <Select\n                        style={{width: 100}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">已授权</Option>\n                        <Option value=\"2\">未授权</Option>\n                    </Select>\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" style={{margin: '0 20px'}}>查询</Button>\n                    <Button>重置</Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nclass OpenCityForm extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                span: 5\n            },\n            wrapperCol: {\n                span: 19\n            }\n        };\n        return (\n            <Form\n                layout=\"horizontal\"\n                initialValues={{\n                    city_id: '1',\n                    op_mode: '1',\n                    use_mode: '1'\n                }}\n                {...formItemLayout}\n                ref={this.props.formRef}\n            >\n                <FormItem\n                    label=\"选择城市\"\n                    name=\"city_id\"\n                >\n                    <Select\n                        style={{width: 120}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">北京市</Option>\n                        <Option value=\"2\">上海市</Option>\n                        <Option value=\"3\">深圳市</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"营运模式\"\n                    name=\"op_mode\"\n                >\n                    <Select\n                        style={{width: 120}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">自营</Option>\n                        <Option value=\"2\">加盟</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"用车模式\"\n                    name=\"use_mode\"\n                >\n                    <Select\n                        style={{width: 120}}\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">指定停车点</Option>\n                        <Option value=\"2\">禁停区</Option>\n                    </Select>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nclass City extends Component {\n    state = {\n        list: [],\n        isShowOpenCity: false\n    };\n    params = {\n        page: 1\n    };\n    formRef = React.createRef();\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    // 请求mock接口数据\n    requestList = () => {\n        let _this = this;\n        axios.ajax({\n            url: '/open_city',\n            data: {\n                params: {\n                    page: this.params.page\n                }\n            }\n        }).then(res => {\n            let list = res.result.item_list.map((item, index) => ({\n                ...item,\n                key: index\n            }));\n            this.setState({\n                list,\n                pagination: Utils.pagination(res, current => {\n                    _this.params.page = current;\n                    _this.requestList();\n                })\n            })\n        });\n    };\n\n    // 开通城市\n    handleOpenCity = () => {\n        this.setState({\n            isShowOpenCity: true\n        });\n    };\n\n    // 城市开通提交\n    handleSubmit = () => {\n        console.log(this.formRef.current.getFieldsValue());\n        let cityInfo = this.formRef.current.getFieldsValue();\n        axios.ajax({\n            url: '/city/open',\n            data: {\n                params: cityInfo\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                message.success('开通成功');\n                this.setState({\n                    isShowOpenCity: false\n                });\n                this.requestList();\n            }\n        })\n    };\n\n    render() {\n        const columns = [\n            {\n                title: '城市ID',\n                dataIndex: 'id'\n            },\n            {\n                title: '城市名称',\n                dataIndex: 'name'\n            },\n            {\n                title: '用车模式',\n                dataIndex: 'mode',\n                render(mode) {\n                    return mode === 1 ? '停车点' : '禁停区';\n                }\n            },\n            {\n                title: '营运模式',\n                dataIndex: 'op_mode',\n                render(op_mode) {\n                    return op_mode === 1 ? '自营' : '加盟';\n                }\n            },\n            {\n                title: '授权加盟商',\n                dataIndex: 'franchisee_name'\n            },\n            {\n                title: '城市管理员',\n                dataIndex: 'city_admins',\n                render(arr) {\n                    return arr.map(item => item.user_name).join(',');\n                }\n            },\n            {\n                title: '城市开通时间',\n                dataIndex: 'open_time'\n            },\n            {\n                title: '操作时间',\n                dataIndex: 'update_time',\n                render: Utils.formateDate\n            },\n            {\n                title: '操作人',\n                dataIndex: 'sys_user_name'\n            }\n        ];\n        return (\n            <div style={{width: '100%'}}>\n                <Card>\n                    <FilterForm />\n                </Card>\n                <Card style={{marginTop: 10}}>\n                    <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                    />\n                </div>\n                <Modal\n                    title=\"开通城市\"\n                    visible={this.state.isShowOpenCity}\n                    onCancel={() => {\n                        this.setState({\n                            isShowOpenCity: false\n                        })\n                    }}\n                    onOk={this.handleSubmit}\n                >\n                    <OpenCityForm formRef={this.formRef} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default City;\n","import React, { Component } from 'react';\nimport { Form, Input, Select, Checkbox, DatePicker, Button } from 'antd';\nimport Utils from '../../utils';\nconst FormItem = Form.Item;\n\nclass FilterForm extends Component {\n    formRef = React.createRef();\n    initFormList = () => {\n        const { formList } = this.props;\n        const formItemList = [];\n        if (formList && formList.length > 0) {\n            formList.forEach((item, i) => {\n                const { type, label, field, placeholder, width } = item;\n                if (type === '城市') {\n                    const SELECT = <FormItem label=\"城市\" name=\"city\">\n                        <Select\n                            style={{width: 80}}\n                            placeholder={placeholder}\n                        >\n                            {Utils.getOptionList([{ id: '0', name: '全部' }, { id: '1', name: '北京' }, { id: '2', name: '上海' }, { id: '3', name: '天津' }, { id: '4', name: '杭州' }])}\n                        </Select>\n                    </FormItem>;\n                    formItemList.push(SELECT);\n                } else if (type === '时间查询') {\n                    const startTime = <FormItem label=\"订单时间\" name=\"start_time\">\n                        <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\n                    </FormItem>;\n                    formItemList.push(startTime);\n                    const endTime = <FormItem label=\"~\" colon={false} name=\"end_time\">\n                        <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\n                    </FormItem>;\n                    formItemList.push(endTime);\n                } else if (type === 'INPUT') {\n                    const INPUT = <FormItem label={label} name={field}>\n                        <Input type=\"text\" placeholder={placeholder} />\n                    </FormItem>;\n                    formItemList.push(INPUT);\n                } else if (type === 'SELECT') {\n                    const SELECT = <FormItem label={label} name={field}>\n                        <Select\n                            style={{width: width}}\n                            placeholder={placeholder}\n                        >\n                            {Utils.getOptionList(item.list)}\n                        </Select>\n                    </FormItem>;\n                    formItemList.push(SELECT);\n                } else if (type === 'CHECKBOX') {\n                    const CHECKBOX = <FormItem name={field}>\n                        <Checkbox>{label}</Checkbox>\n                    </FormItem>;\n                    formItemList.push(CHECKBOX);\n                } else if (type === 'DATE') {\n                    const DATE = <FormItem label={label} name={field}>\n                        <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\n                    </FormItem>;\n                    formItemList.push(DATE);\n                }\n            });\n        }\n        return formItemList;\n    };\n\n    handleFilterSubmit = () => {\n        const fieldsValue = this.formRef.current.getFieldsValue();\n        this.props.filterSubmit(fieldsValue);\n    };\n\n    reset = () => {\n        this.formRef.current.resetFields();\n    };\n\n    render() {\n        const { initialValues } = this.props;\n        return (\n            <Form\n                ref={this.formRef}\n                layout=\"inline\"\n                initialValues={initialValues}\n            >\n                {this.initFormList()}\n                <FormItem>\n                    <Button type=\"primary\" style={{margin: '0 20px'}} onClick={this.handleFilterSubmit}>查询</Button>\n                    <Button onClick={this.reset}>重置</Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nexport default FilterForm;\n","import React, { Component } from 'react';\nimport { Table } from 'antd';\nimport './index.less';\n\nclass ETable extends Component {\n    state = {};\n\n    // 处理行点击事件\n    onRowClick = (record, index) => {\n        const { rowSelection } = this.props;\n        if (rowSelection === 'checkbox') {\n            let { selectedRowKeys, selectedIds, selectedItem } = this.props;\n            if (selectedIds) {\n                const i = selectedIds.indexOf(record.id);\n                if (i === -1) { // 避免重复添加\n                    selectedIds.push(record.id);\n                    selectedRowKeys.push(index);\n                    selectedItem.push(record);\n                } else {\n                    selectedIds.splice(index, 1);\n                    selectedRowKeys.splice(index, 1);\n                    selectedItem.splice(index, 1);\n                }\n            } else {\n                selectedIds = [record.id];\n                selectedRowKeys = [index];\n                selectedItem = [record];\n            }\n            this.props.updateSelectedItem(selectedRowKeys, selectedItem || {}, selectedIds);\n        } else {\n            let selectKey = [index];\n            const { selectedRowKeys } = this.props;\n            if (selectedRowKeys && selectedRowKeys[0] === index) {\n                return;\n            }\n            this.props.updateSelectedItem(selectKey, record || {});\n        }\n    };\n\n    // 选择框变更\n    onSelectChange = (selectedRowKeys, selectedRows) => {\n        const { rowSelection } = this.props;\n        const selectedIds = [];\n        if (rowSelection === 'checkbox') {\n            selectedRows.forEach(item => {\n                selectedIds.push(item.id);\n            });\n            this.setState({\n                selectedRowKeys,\n                selectedIds,\n                selectedItem: selectedRows[0]\n            });\n        }\n        this.props.updateSelectedItem(selectedRowKeys, selectedRows[0], selectedIds);\n    };\n\n    onSelectAll = (selected, selectedRows, changeRows) => {\n        const selectedIds = [];\n        const selectKey = [];\n        selectedRows.forEach((item,i)=> {\n            selectedIds.push(item.id);\n            selectKey.push(i);\n        });\n        this.props.updateSelectedItem(selectKey, selectedRows[0] || {}, selectedIds);\n    };\n\n    getOptions = () => {\n        let p = this.props;\n        const nameList = {\n            '订单编号': 170,\n            '车辆编号': 80,\n            '手机号码': 96,\n            '用户姓名': 70,\n            '密码': 70,\n            '运维区域': 300,\n            '车型': 42,\n            '故障编号': 76,\n            '代理商编码': 97,\n            '角色ID': 64\n        };\n        if (p.columns && p.columns.length > 0) {\n            p.columns.forEach(item => {\n                // 开始/结束 时间\n                if (!item.title) {\n                    return;\n                }\n                if (!item.width) {\n                    if (item.title.indexOf('时间') > -1 && item.title.indexOf('持续时间') < 0) {\n                        item.width = 132;\n                    } else if (item.title.indexOf('图片') > -1) {\n                        item.width = 86;\n                    } else if (item.title.indexOf('权限') > -1 || item.title.indexOf('负责城市') > -1) {\n                        item.width = '40%';\n                        item.className = 'text-left';\n                    } else {\n                        if (nameList[item.title]) {\n                            item.width = nameList[item.title];\n                        }\n                    }\n                }\n                item.bordered = true;\n            });\n        }\n        const { selectedRowKeys } = this.props;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n            onSelect: (record, selected, selectedRows) => {\n                console.log('...');\n            },\n            onSelectAll: this.onSelectAll\n        };\n        let row_selection = this.props.rowSelection;\n        // 当属性为false或null时，说明没有单选或者复选列\n        if (row_selection === false || row_selection === null) {\n            row_selection = false;\n        } else if (row_selection === 'checkbox') {\n            // 设置类型为复选框\n            rowSelection.type = 'checkbox';\n        } else {\n            // 默认为单选\n            row_selection = 'radio';\n        }\n        return (\n            <Table\n                className=\"card-wrap page-table\"\n                bordered\n                {...this.props}\n                rowSelection={row_selection ? rowSelection : null}\n                onRow={(record, index) => ({\n                    onClick: () => {\n                        if (!row_selection) {\n                            return;\n                        }\n                        this.onRowClick(record, index);\n                    }\n                })}\n            />\n        );\n    };\n    render() {\n        return (\n            <div>\n                {this.getOptions()}\n            </div>\n        );\n    }\n}\n\nexport default ETable;","import React, { Component } from 'react';\r\nimport { Card, Button, Table, Form, Modal, message } from 'antd';\r\nimport axios from './../../axios';\r\nimport Utils from './../../utils';\r\nimport BaseForm from './../../components/BaseForm';\r\nimport ETable from './../../components/ETable';\r\nconst FormItem = Form.Item;\r\n\r\nexport default class Order extends Component {\r\n    state = {\r\n        list: [],\r\n        selectedRowKeys: [],\r\n        selectedItem: null,\r\n        selectedIds: [],\r\n        orderInfo: null,\r\n        orderConfirmVisible: false\r\n    };\r\n    params = {\r\n        page: 1\r\n    };\r\n\r\n    formList = [\r\n        {\r\n            type: 'SELECT',\r\n            label: '城市',\r\n            field: 'city',\r\n            placeholder: '全部',\r\n            width: 80,\r\n            list: [\r\n                { id: '0', name: '全部' },\r\n                { id: '1', name: '北京' },\r\n                { id: '2', name: '天津' },\r\n                { id: '3', name: '上海' }\r\n            ]\r\n        },\r\n        {\r\n            type: '时间查询'\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '订单状态',\r\n            field: 'order_status',\r\n            placeholder: '全部',\r\n            width: 80,\r\n            list: [\r\n                { id: '0', name: '全部' },\r\n                { id: '1', name: '进行中' },\r\n                { id: '2', name: '结束行程' }\r\n            ]\r\n        }\r\n    ];\r\n    initialValues = {\r\n        city: '0',\r\n        'start_time': '',\r\n        'end_time': '',\r\n        order_status: '0'\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.requestList();\r\n    }\r\n\r\n    onRowClick = (record, index) => {\r\n        let selectKey = [index];\r\n        this.setState({\r\n            selectedRowKeys: selectKey,\r\n            selectedItem: record\r\n        });\r\n    };\r\n\r\n    requestList = () => {\r\n        const _this = this;\r\n        axios.requestList(_this, '/order/list', this.params, true);\r\n        // axios.ajax({\r\n        //     url: '/order/list',\r\n        //     data: {\r\n        //         params: this.params\r\n        //     }\r\n        // }).then(res => {\r\n        //     const list = res.result.item_list.map((item, index) => {\r\n        //         item.key = index;\r\n        //         return item;\r\n        //     });\r\n        //     this.setState({\r\n        //         list,\r\n        //         pagination: Utils.pagination(res, current => {\r\n        //             _this.params.page = current;\r\n        //             _this.requestList();\r\n        //         })\r\n        //     })\r\n        // });\r\n    };\r\n\r\n    openOrderDetail = () => {\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            });\r\n            return;\r\n        }\r\n        const ORDER_DETAIL_RUL = process.env.NODE_ENV === 'development'\r\n            ? `/#/common/order/detail/${item.id}`\r\n            : `/bicyclemanager/#/common/order/detail/${item.id}`;\r\n        window.open(ORDER_DETAIL_RUL, '_blank');\r\n    };\r\n\r\n    // 结束订单二次确认\r\n    handleConfirm = () => {\r\n        let item = this.state.selectedItem;\r\n        console.log(item);\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请选择一条订单进行结束'\r\n            });\r\n            return;\r\n        }\r\n        axios.ajax({\r\n            url: '/order/ebike_info',\r\n            data: {\r\n                params: {\r\n                    orderId: item.id\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    orderInfo: res.result,\r\n                    orderConfirmVisible: true\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    // 结束订单\r\n    handleFinishOrder = () => {\r\n        const { selectedItem } = this.state;\r\n        axios.ajax({\r\n            url: '/order/finish_order',\r\n            data: {\r\n                params: {\r\n                    orderId: selectedItem.id\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code === 0) {\r\n                message.success('订单结束成功');\r\n                this.setState({\r\n                    orderConfirmVisible: false\r\n                });\r\n                this.requestList();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleFilter = params => {\r\n        console.log(params);\r\n        this.params = params;\r\n        this.requestList();\r\n    };\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '订单编号',\r\n                dataIndex: 'order_sn'\r\n            },\r\n            {\r\n                title: '车辆编号',\r\n                dataIndex: 'bike_sn'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'user_name'\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile'\r\n            },\r\n            {\r\n                title: '里程',\r\n                dataIndex: 'distance',\r\n                render(distance) {\r\n                    return distance / 1000 + 'Km';\r\n                }\r\n            },\r\n            {\r\n                title: '行驶时长',\r\n                dataIndex: 'total_time'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'status'\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'start_time'\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'end_time'\r\n            },\r\n            {\r\n                title: '订单金额',\r\n                dataIndex: 'total_fee'\r\n            },\r\n            {\r\n                title: '实付金额',\r\n                dataIndex: 'user_pay'\r\n            }\r\n        ];\r\n        const formItemLayout = {\r\n            labelCol: { span: 5 },\r\n            wrapperCol: { span: 19 }\r\n        };\r\n        // const { selectedRowKeys } = this.state;\r\n        // const rowSelection = {\r\n        //     type: 'radio',\r\n        //     wrapperCol: {\r\n        //         span: 19\r\n        //     },\r\n        //     selectedRowKeys\r\n        // };\r\n\r\n        return (\r\n            <div style={{width: '100%'}}>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} initialValues={this.initialValues} filterSubmit={this.handleFilter} />\r\n                </Card>\r\n                <Card style={{marginTop: 10}}>\r\n                    <Button type=\"primary\" onClick={this.openOrderDetail}>订单详情</Button>\r\n                    <Button type=\"primary\" style={{marginLeft: 10}} onClick={this.handleConfirm}>结束订单</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <ETable\r\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        selectedIds={this.state.selectedIds}\r\n                        selectedItem={this.state.selectedItem}\r\n                        pagination={this.state.pagination}\r\n                        // rowSelection=\"checkbox\"\r\n                    />\r\n                    {/* <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                        rowSelection={rowSelection}\r\n                        onRow={(record, index) => {\r\n                            return {\r\n                                onClick: () => {\r\n                                    this.onRowClick(record, index);\r\n                                }\r\n                            };\r\n                        }}\r\n                    /> */}\r\n                </div>\r\n                {\r\n                    this.state.orderConfirmVisible && (\r\n                        <Modal\r\n                            title=\"结束订单\"\r\n                            visible={this.state.orderConfirmVisible}\r\n                            onCancel={() => {\r\n                                this.setState({\r\n                                    orderConfirmVisible: false\r\n                                })\r\n                            }}\r\n                            onOk={this.handleFinishOrder}\r\n                            width={600}\r\n                        >\r\n                            <FormItem label=\"车辆编号\" {...formItemLayout}>\r\n                                {this.state.orderInfo.bike_sn}\r\n                            </FormItem>\r\n                            <FormItem label=\"剩余电量\" {...formItemLayout}>\r\n                                {this.state.orderInfo.battery + '%'}\r\n                            </FormItem>\r\n                            <FormItem label=\"行程开始时间\" {...formItemLayout}>\r\n                                {this.state.orderInfo.start_time}\r\n                            </FormItem>\r\n                            <FormItem label=\"当前位置\" {...formItemLayout}>\r\n                                {this.state.orderInfo.location}\r\n                            </FormItem>\r\n                        </Modal>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { Row } from 'antd';\nimport Header from './components/Header';\nimport './styles/common.less';\n\nclass common extends Component {\n    render() {\n        return (\n            <div>\n                <Row className=\"simple-page\">\n                    <Header menuType=\"second\" />\n                </Row>\n                <Row className=\"content\">\n                    {this.props.children}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default common;","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport axios from './../../axios';\nimport './detail.less';\n\nclass OrderDetail extends Component {\n    state = {\n\n    };\n\n    componentDidMount() {\n        const orderId = this.props.match.params.orderId;\n        if (orderId) {\n            this.getDetailInfo(orderId);\n        }\n    }\n\n    getDetailInfo = orderId => {\n        axios.ajax({\n            url: '/order/detail',\n            data: {\n                params: {\n                    orderId\n                }\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                this.setState({\n                    orderInfo: res.result\n                });\n                this.renderMap(res.result);\n            }\n        })\n    };\n\n    renderMap = result => {\n        this.map = new window.BMap.Map('orderDetailMap');\n        // 添加地图控件\n        this.addMapControl();\n        // this.map.centerAndZoom('北京', 11);\n        // 调用路线图绘制方法\n        this.drawBikeRoute(result.position_list);\n        // 调用服务区绘制方法\n        this.drawServiceArea(result.area);\n    };\n\n    // 添加地图控件\n    addMapControl = () => {\n        const map = this.map;\n        map.addControl(new window.BMap.ScaleControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n        map.addControl(new window.BMap.NavigationControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n    };\n\n    // 绘制用户的行驶路线\n    drawBikeRoute = positionList => {\n        let startPoint = '';\n        let endPoint = '';\n        if (positionList.length > 0) {\n            let first = positionList[0];\n            let last = positionList[positionList.length - 1];\n            startPoint = new window.BMap.Point(first.lon, first.lat);\n            let startIcon = new window.BMap.Icon('/assets/start_point.png', new window.BMap.Size(36, 42), {\n                imageSize: new window.BMap.Size(36, 42),\n                anchor: new window.BMap.Size(18, 42)\n            });\n            let startMarker = new window.BMap.Marker(startPoint, { icon: startIcon });\n            this.map.addOverlay(startMarker);\n\n            endPoint = new window.BMap.Point(last.lon, last.lat);\n            let endIcon = new window.BMap.Icon('/assets/end_point.png', new window.BMap.Size(36, 42), {\n                imageSize: new window.BMap.Size(36, 42),\n                anchor: new window.BMap.Size(18, 42)\n            });\n            let endMarker = new window.BMap.Marker(endPoint, { icon: endIcon });\n            this.map.addOverlay(endMarker);\n\n            // 连接线路图\n            let trackPoint = [];\n            for (let i = 0; i < positionList.length; i++) {\n                let point = positionList[i];\n                trackPoint.push(new window.BMap.Point(point.lon, point.lat));\n            }\n            let polyline = new window.BMap.Polyline(trackPoint, {\n                strokeColor: '#1869ad',\n                strokeWeight: 3,\n                strokeOpacity: 1\n            });\n            this.map.addOverlay(polyline);\n            this.map.centerAndZoom(endPoint, 11);\n        }\n    };\n\n    // 绘制服务区\n    drawServiceArea = positionList => {\n        // 连接路线图\n        let trackPoint = [];\n        for (let i = 0; i < positionList.length; i++) {\n            let point = positionList[i];\n            trackPoint.push(new window.BMap.Point(point.lon, point.lat));\n        }\n        // 绘制服务区\n        let polygon = new window.BMap.Polygon(trackPoint, {\n            strokeColor: '#CE0000',\n            strokeWeight: 4,\n            strokeOpacity: 1,\n            fillColor: '#ff8605',\n            fillOpacity:0.4\n        });\n        this.map.addOverlay(polygon);\n    };\n\n    render() {\n        const info = this.state.orderInfo || {};\n        return (\n            <div style={{width: '100%'}}>\n                <Card>\n                    <div id=\"orderDetailMap\" className=\"order-map\"></div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">基础信息</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">用车模式</div>\n                                <div className=\"detail-form-content\">{info.mode === 1 ?'服务区':'停车点'}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">订单编号</div>\n                                <div className=\"detail-form-content\">{info.order_sn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">车辆编号</div>\n                                <div className=\"detail-form-content\">{info.bike_sn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">用户姓名</div>\n                                <div className=\"detail-form-content\">{info.user_name}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">手机号码</div>\n                                <div className=\"detail-form-content\">{info.mobile}</div>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">行驶轨迹</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">行程起点</div>\n                                <div className=\"detail-form-content\">{info.start_location}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行程终点</div>\n                                <div className=\"detail-form-content\">{info.end_location}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行驶里程</div>\n                                <div className=\"detail-form-content\">{info.distance/1000}公里</div>\n                            </li>\n                        </ul>\n                    </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default OrderDetail;\n","import React, { Component } from 'react';\nimport { Card, Button, Form, Input, Select, Radio, Modal, DatePicker } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport axios from './../../axios';\nimport Utils from './../../utils';\nimport BaseForm from './../../components/BaseForm';\nimport ETable from './../../components/ETable';\nimport Moment from 'moment';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst RadioGroup = Radio.Group;\n\nclass User extends Component {\n    state = {\n        list: [],\n        selectedRowKeys: [],\n        selectedItem: null,\n        title: '',\n        isVisible: false,\n        type: '',\n        userInfo: null\n    };\n\n    params = {\n        page: 1\n    };\n\n    formList = [\n        {\n            type: 'INPUT',\n            label: '用户名',\n            field: 'user_name',\n            placeholder: '请输入用户名',\n            width: 130\n        },\n        {\n            type: 'INPUT',\n            label: '手机号',\n            field: 'user_mobile',\n            placeholder: '请输入手机号',\n            width: 140\n        },\n        {\n            type: 'DATE',\n            label: '请选择入职日期',\n            field: 'user_date',\n            placeholder: '请输入日期',\n            width: 100\n        }\n    ];\n\n    initialValues = {\n        'user_name': '',\n        'user_mobile': '',\n        'user_date': ''\n    };\n\n    handleFilter = params => {\n        this.params = params;\n        this.requestList();\n    };\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    requestList = () => {\n        const _this = this;\n        axios.requestList(_this, '/user/list', this.params, true);\n    };\n\n    // 操作员工\n    handleOperator = type => {\n        let item = this.state.selectedItem;\n        if (type === 'create') {\n            this.setState({\n                title: '创建员工',\n                isVisible: true,\n                type\n            });\n        } else if (type === 'edit' || type === 'detail') {\n            if (!item) {\n                Modal.info({\n                    title: '信息',\n                    content: '请选择一个用户'\n                });\n                return;\n            }\n            this.setState({\n                title: type === 'edit' ? '编辑用户' : '查看详情',\n                isVisible: true,\n                userInfo: item,\n                type\n            });\n        } else if (type === 'delete') {\n            if (!item) {\n                Modal.info({\n                    title: '信息',\n                    content: '请选择一个用户'\n                });\n                return;\n            }\n            Modal.confirm({\n                title: '确认删除',\n                content: '是否要删除当前选中的员工',\n                onOk: () => {\n                    axios.ajax({\n                        url:'/user/delete',\n                        data:{\n                            params:{\n                                id:item.id\n                            }\n                        }\n                    }).then(res => {\n                        if(res.code === 0){\n                            this.setState({\n                                isVisible:false\n                            })\n                            this.userFormRef.current.resetFields();\n                            this.requestList();\n                        }\n                    });\n                }\n            })\n        }\n    };\n\n    handleSubmit = () => {\n        let type = this.state.type;\n        let data = this.userFormRef.current.getFieldsValue();\n        axios.ajax({\n            url:type === 'create' ? '/user/add' : '/user/edit',\n            data: {\n                params: {\n                    ...data\n                }\n            }\n        }).then((res)=>{\n            if(res.code === 0){\n                this.setState({\n                    isVisible:false\n                });\n                this.userFormRef.current.resetFields();\n                this.requestList();\n            }\n        });\n    };\n\n    render() {\n        const columns = [\n            {\n                title: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                dataIndex: 'username'\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render(state) {\n                    const config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子一枚',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    };\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                render(interest) {\n                    const config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    };\n                    return config[interest];\n                }\n            },\n            {\n                title: '婚否',\n                dataIndex: 'isMarried',\n                render(isMarried) {\n                    return isMarried ? '已婚' : '未婚';\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '联系地址',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                dataIndex: 'time'\n            }\n        ];\n        let footer = {};\n        if (this.state.type === 'detail') {\n            footer = {\n                footer: null\n            };\n        }\n        return (\n            <div style={{width: '100%'}}>\n                <Card>\n                    <BaseForm formList={this.formList} initialValues={this.initialValues} filterSubmit={this.handleFilter} />\n                </Card>\n                <Card style={{marginTop: 10}}>\n                    <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => this.handleOperator('create')}>创建员工</Button>\n                    <Button type=\"primary\" icon={<EditOutlined />} style={{marginLeft: 10}} onClick={() => this.handleOperator('edit')}>编辑员工</Button>\n                    <Button type=\"primary\" style={{marginLeft: 10}} onClick={() => this.handleOperator('detail')}>员工详情</Button>\n                    <Button type=\"danger\" icon={<DeleteOutlined />} style={{marginLeft: 10}} onClick={() => this.handleOperator('delete')}>删除员工</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <ETable\n                        updateSelectedItem={Utils.updateSelectedItem.bind(this)}\n                        columns={columns}\n                        dataSource={this.state.list}\n                        selectedRowKeys={this.state.selectedRowKeys}\n                        selectedItem={this.state.selectedItem}\n                        pagination={this.state.pagination}\n                    />\n                </div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.isVisible}\n                    onOk={this.handleSubmit}\n                    width={800}\n                    onCancel={() => {\n                        this.userFormRef.current.resetFields();\n                        this.setState({\n                            isVisible: false,\n                            userInfo: ''\n                        });\n                    }}\n                    {...footer}\n                >\n                    <UserForm userInfo={this.state.userInfo} type={this.state.type} wrappedComponentRef={inst => this.userFormRef = inst} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nclass UserForm extends Component {\n    userFormRef = React.createRef();\n    getState = state => {\n        return {\n            '1': '咸鱼一条',\n            '2': '风华浪子',\n            '3': '北大才子一枚',\n            '4': '百度FE',\n            '5': '创业者'\n        }[state];\n    };\n\n    componentDidMount() {\n        this.props.wrappedComponentRef(this.userFormRef);\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 16 }\n        };\n        const { userInfo, type } = this.props;\n        return (\n            <Form\n                layout=\"horizontal\"\n                {...formItemLayout}\n                initialValues={{\n                    'user_name': userInfo !== null ? userInfo.username : '',\n                    sex: userInfo !== null ? userInfo.sex : '',\n                    state: userInfo !== null ? userInfo.state : '',\n                    birthday: userInfo !== null ? Moment(userInfo.birthday) : '',\n                    address: userInfo !== null ? userInfo.address : ''\n                }}\n                ref={this.userFormRef}\n            >\n                <FormItem label=\"姓名\" name=\"user_name\">\n                    {\n                        userInfo && type === 'detail'\n                        ? userInfo.username\n                        : <Input type=\"text\" placeholder=\"请输入姓名\" />\n                    }\n                </FormItem>\n                <FormItem label=\"性别\" name=\"sex\">\n                    {\n                        userInfo && type === 'detail'\n                        ? userInfo.sex\n                        : (\n                            <RadioGroup>\n                                <Radio value={1}>男</Radio>\n                                <Radio value={2}>女</Radio>\n                            </RadioGroup>\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"状态\" name=\"state\">\n                    {\n                        userInfo && type === 'detail'\n                        ? this.getState(userInfo.state)\n                        : (\n                            <Select>\n                                <Option value={1}>咸鱼一条</Option>\n                                <Option value={2}>风华浪子</Option>\n                                <Option value={3}>北大才子一枚</Option>\n                                <Option value={4}>百度FE</Option>\n                                <Option value={5}>创业者</Option>\n                            </Select>\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"生日\" name=\"birthday\">\n                    {\n                        userInfo && type === 'detail'\n                        ? userInfo.birthday\n                        : <DatePicker />\n                    }\n                </FormItem>\n                <FormItem label=\"联系地址\" name=\"address\">\n                    {\n                        userInfo && type === 'detail'\n                        ? userInfo.address\n                        : <Input.TextArea rows={3} placeholder=\"请输入联系地址\" />\n                    }\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nexport default User;","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport axios from './../../axios';\nimport BaseForm from './../../components/BaseForm';\n\nclass BikeMap extends Component {\n    state = {\n\n    };\n\n    formList = [\n        {\n            type: '城市',\n            placeholder: '全部'\n        },\n        {\n            type: '时间查询'\n        },\n        {\n            type: 'SELECT',\n            label: '订单状态',\n            field: 'order_status',\n            placeholder: '全部',\n            width: 150,\n            list: [\n                { id: '0', name: '全部' },\n                { id: '1', name: '进行中' },\n                { id: '2', name: '行程结束' }\n            ]\n        }\n    ];\n\n    initalValues = {\n        city: '0',\n        start_time: '',\n        end_time: '',\n        order_status: '0'\n    };\n\n    params = {\n        page: 1\n    };\n\n    // 查询表单\n    handleFilterSubmit = filterParams => {\n        this.params = filterParams;\n        this.requestList();\n    };\n\n    // 列表请求\n    requestList = () => {\n        axios.ajax({\n            url: '/map/bike_list',\n            data: {\n                params: this.params\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                this.setState({\n                    total_count: res.result.total_count\n                });\n                this.renderMap(res.result);\n            }\n        });\n    };\n\n    // 渲染地图\n    renderMap = res => {\n        const list = res.route_list;\n        this.map = new window.BMap.Map('container', { enableMapClick: false });\n        let gps1 = list[0].split(',');\n        let startPoint = new window.BMap.Point(gps1[0], gps1[1]);\n        let gps2 = list[list.length - 1].split(',');\n        let endPoint = new window.BMap.Point(gps2[0], gps2[1]);\n        this.map.centerAndZoom(endPoint, 11);\n\n        // 添加起始图标\n        let startPointIcon = new window.BMap.Icon('/assets/start_point.png', new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n        let bikeMarkerStart = new window.BMap.Marker(startPoint, { icon: startPointIcon });\n        this.map.addOverlay(bikeMarkerStart);\n        let endPointIcon = new window.BMap.Icon('/assets/end_point.png', new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n        let bikeMarkerEnd = new window.BMap.Marker(endPoint, { icon: endPointIcon });\n        this.map.addOverlay(bikeMarkerEnd);\n\n        // 绘制车辆行驶路线\n        const routeList = [];\n        list.forEach(item => {\n            let p = item.split(',');\n            let point = new window.BMap.Point(p[0], p[1]);\n            routeList.push(point);\n        });\n        let polyLine = new window.BMap.Polyline(routeList, {\n            strokeColor: '#ef4136',\n            strokeWeight: 3,\n            strokeOpacity: 1\n        });\n        this.map.addOverlay(polyLine);\n\n        // 绘制服务区\n        let serviceList = res.service_list;\n        let servicePointist = [];\n        serviceList.forEach((item) => {\n            let point = new window.BMap.Point(item.lon, item.lat);\n            servicePointist.push(point);\n        });\n        let polyServiceLine = new window.BMap.Polyline(servicePointist, {\n            strokeColor: '#ef4136',\n            strokeWeight: 3,\n            strokeOpacity: 1\n        });\n        this.map.addOverlay(polyServiceLine);\n\n        // 添加地图中的自行车图标\n        let bikeList = res.bike_list;\n        let bikeIcon = new window.BMap.Icon('assets/bike.jpg', new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n        bikeList.forEach((item) => {\n            let p = item.split(\",\");\n            let point = new window.BMap.Point(p[0], p[1]);\n            var bikeMarker = new window.BMap.Marker(point, { icon: bikeIcon });\n            this.map.addOverlay(bikeMarker);\n        });\n\n        // 添加地图控件\n        this.addMapControl();\n    };\n\n    // 添加地图控件\n    addMapControl = () => {\n        let map = this.map;\n        // 左上角，添加比例尺\n        var top_right_control = new window.BMap.ScaleControl({anchor: window.BMAP_ANCHOR_TOP_RIGHT});\n        var top_right_navigation = new window.BMap.NavigationControl({anchor: window.BMAP_ANCHOR_TOP_RIGHT});\n        //添加控件和比例尺\n        map.addControl(top_right_control);\n        map.addControl(top_right_navigation);\n        map.enableScrollWheelZoom(true);\n        // legend.addLegend(map);\n    };\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card>\n                    <BaseForm formList={this.formList} initialValues={this.initialValues} filterSubmit={this.handleFilterSubmit} />\n                </Card>\n                <Card style={{marginTop: 10}}>\n                    <div>共{this.state.total_count}辆车</div>\n                    <div id=\"container\" style={{height: 500}}></div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default BikeMap;","export default {\n    \"color\": [\n        \"#f9c700\",\n        \"#ff5400\",\n        \"#6699cc\",\n        \"#9cb3c5\",\n        \"#e0e6ec\",\n        \"#666666\",\n        \"#787464\",\n        \"#cc7e63\",\n        \"#724e58\",\n        \"#4b565b\"\n    ],\n    \"backgroundColor\": \"#ffffff\",\n    \"textStyle\": {},\n    \"title\": {\n        \"textStyle\": {\n            \"color\": \"#cccccc\"\n        },\n        \"subtextStyle\": {\n            \"color\": \"#cccccc\"\n        }\n    },\n    \"line\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 1\n            }\n        },\n        \"lineStyle\": {\n            \"normal\": {\n                \"width\": 2\n            }\n        },\n        \"symbolSize\": \"10\",\n        \"symbol\": \"emptyCircle\",\n        \"smooth\": false\n    },\n    \"pie\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"categoryAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#999999\",\n                \"fontSize\": \"14\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#f1f3f5\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": false,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#f1f3f5\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#999999\",\n                \"fontSize\": \"14\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#f1f3f5\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": false,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"toolbox\": {\n        \"iconStyle\": {\n            \"normal\": {\n                \"borderColor\": \"#999999\"\n            },\n            \"emphasis\": {\n                \"borderColor\": \"#666666\"\n            }\n        }\n    },\n    \"legend\": {\n        \"textStyle\": {\n            \"color\": \"#333333\"\n        }\n    },\n    \"tooltip\": {\n        \"axisPointer\": {\n            \"lineStyle\": {\n                \"color\": \"#cccccc\",\n                \"width\": 1\n            },\n            \"crossStyle\": {\n                \"color\": \"#cccccc\",\n                \"width\": 1\n            }\n        }\n    },\n    \"timeline\": {\n        \"lineStyle\": {\n            \"color\": \"#293c55\",\n            \"width\": 1\n        },\n        \"itemStyle\": {\n            \"normal\": {\n                \"color\": \"#293c55\",\n                \"borderWidth\": 1\n            },\n            \"emphasis\": {\n                \"color\": \"#a9334c\"\n            }\n        },\n        \"controlStyle\": {\n            \"normal\": {\n                \"color\": \"#293c55\",\n                \"borderColor\": \"#293c55\",\n                \"borderWidth\": 0.5\n            },\n            \"emphasis\": {\n                \"color\": \"#293c55\",\n                \"borderColor\": \"#293c55\",\n                \"borderWidth\": 0.5\n            }\n        },\n        \"checkpointStyle\": {\n            \"color\": \"#e43c59\",\n            \"borderColor\": \"rgba(194,53,49,0.5)\"\n        },\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#293c55\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"#293c55\"\n                }\n            }\n        }\n    },\n    \"markPoint\": {\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#ffffff\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"#ffffff\"\n                }\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport ReactEcharts from 'echarts-for-react';\nimport echartTheme from '../echartTheme';\n// 引入ECharts主模块\nimport echarts from 'echarts/lib/echarts';\n// 引入柱状图\nimport 'echarts/lib/chart/bar';\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\n\nclass Bar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        echarts.registerTheme('Bicycle', echartTheme);\n    }\n\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip : {\n                trigger: 'axis'\n            },\n            xAxis: {\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'bar',\n                    data: [\n                        1000,\n                        2000,\n                        1500,\n                        3000,\n                        2000,\n                        1200,\n                        800\n                    ]\n                }\n            ]\n        };\n        return option;\n    };\n\n    getOption2 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip : {\n                trigger: 'axis'\n            },\n            legend:{\n                data:['OFO','摩拜','小蓝']\n            },\n            xAxis: {\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: 'OFO',\n                    type: 'bar',\n                    data: [\n                        2000,\n                        3000,\n                        5500,\n                        7000,\n                        8000,\n                        12000,\n                        20000\n                    ]\n                },\n                {\n                    name: '摩拜',\n                    type: 'bar',\n                    data: [\n                        1500,\n                        3000,\n                        4500,\n                        6000,\n                        8000,\n                        10000,\n                        15000\n                    ]\n                },\n                {\n                    name: '小蓝',\n                    type: 'bar',\n                    data: [\n                        1000,\n                        2000,\n                        2500,\n                        4000,\n                        6000,\n                        7000,\n                        8000\n                    ]\n                },\n            ]\n        };\n        return option;\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"柱形图表之一\">\n                    <ReactEcharts option={this.getOption()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n                <Card title=\"柱形图表之二\" style={{marginTop: 10}}>\n                    <ReactEcharts option={this.getOption2()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Bar;","var colorPalette = [\n    '#C1232B',\n    '#27727B',\n    '#FCCE10',\n    '#E87C25',\n    '#B5C334',\n    '#FE8463',\n    '#9BCA63',\n    '#FAD860',\n    '#F3A43B',\n    '#60C0DD',\n    '#D7504B',\n    '#C6E579',\n    '#F4E001',\n    '#F0805A',\n    '#26C0C0'\n];\nexport default {\n\n    color: colorPalette,\n\n    title: {\n        textStyle: {\n            fontWeight: 'normal',\n            color: '#27727B'\n        }\n    },\n\n    visualMap: {\n        color: ['#C1232B', '#FCCE10']\n    },\n\n    toolbox: {\n        iconStyle: {\n            normal: {\n                borderColor: colorPalette[0]\n            }\n        }\n    },\n\n    tooltip: {\n        backgroundColor: 'rgba(50,50,50,0.5)',\n        axisPointer: {\n            type: 'line',\n            lineStyle: {\n                color: '#27727B',\n                type: 'dashed'\n            },\n            crossStyle: {\n                color: '#27727B'\n            },\n            shadowStyle: {\n                color: 'rgba(200,200,200,0.3)'\n            }\n        }\n    },\n\n    dataZoom: {\n        dataBackgroundColor: 'rgba(181,195,52,0.3)',\n        fillerColor: 'rgba(181,195,52,0.2)',\n        handleColor: '#27727B'\n    },\n\n    categoryAxis: {\n        axisLine: {\n            lineStyle: {\n                color: '#27727B'\n            }\n        },\n        splitLine: {\n            show: false\n        }\n    },\n\n    valueAxis: {\n        axisLine: {\n            show: false\n        },\n        splitArea: {\n            show: false\n        },\n        splitLine: {\n            lineStyle: {\n                color: ['#ccc'],\n                type: 'dashed'\n            }\n        }\n    },\n\n    timeline: {\n        lineStyle: {\n            color: '#27727B'\n        },\n        controlStyle: {\n            normal: {\n                color: '#27727B',\n                borderColor: '#27727B'\n            }\n        },\n        symbol: 'emptyCircle',\n        symbolSize: 3\n    },\n\n    line: {\n        itemStyle: {\n            normal: {\n                borderWidth: 2,\n                borderColor: '#fff',\n                lineStyle: {\n                    width: 3\n                }\n            },\n            emphasis: {\n                borderWidth: 0\n            }\n        },\n        symbol: 'circle',\n        symbolSize: 3.5\n    },\n\n    candlestick: {\n        itemStyle: {\n            normal: {\n                color: '#C1232B',\n                color0: '#B5C334',\n                lineStyle: {\n                    width: 1,\n                    color: '#C1232B',\n                    color0: '#B5C334'\n                }\n            }\n        }\n    },\n\n    graph: {\n        color: colorPalette\n    },\n\n    map: {\n        label: {\n            normal: {\n                textStyle: {\n                    color: '#C1232B'\n                }\n            },\n            emphasis: {\n                textStyle: {\n                    color: 'rgb(100,0,0)'\n                }\n            }\n        },\n        itemStyle: {\n            normal: {\n                areaColor: '#ddd',\n                borderColor: '#eee'\n            },\n            emphasis: {\n                areaColor: '#fe994e'\n            }\n        }\n    },\n\n    gauge: {\n        axisLine: {\n            lineStyle: {\n                color: [\n                    [\n                        0.2, '#B5C334'\n                    ],\n                    [\n                        0.8, '#27727B'\n                    ],\n                    [1, '#C1232B']\n                ]\n            }\n        },\n        axisTick: {\n            splitNumber: 2,\n            length: 5,\n            lineStyle: {\n                color: '#fff'\n            }\n        },\n        axisLabel: {\n            textStyle: {\n                color: '#fff'\n            }\n        },\n        splitLine: {\n            length: '5%',\n            lineStyle: {\n                color: '#fff'\n            }\n        },\n        title: {\n            offsetCenter: [0, -20]\n        }\n    }\n}","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport ReactEcharts from 'echarts-for-react';\nimport themeLight from '../themeLight';\n// 引入ECharts主模块\nimport echarts from 'echarts/lib/echarts';\n// 引入饼图\nimport 'echarts/lib/chart/pie';\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\n\nclass Pie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        echarts.registerTheme('Bicycle', themeLight);\n    }\n\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x : 'center'\n            },\n            legend : {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: ['周一','周二','周三','周四','周五','周六','周日']\n            },\n            tooltip: {\n                trigger : 'item',\n                formatter : \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name : '订单量',\n                    type : 'pie',\n                    radius : '55%',\n                    center : [\n                        '50%', '60%'\n                    ],\n                    data:[\n                        {\n                            value:1000,\n                            name:'周一'\n                        },\n                        {\n                            value: 1000,\n                            name: '周二'\n                        },\n                        {\n                            value: 2000,\n                            name: '周三'\n                        },\n                        {\n                            value: 1500,\n                            name: '周四'\n                        },\n                        {\n                            value: 3000,\n                            name: '周五'\n                        },\n                        {\n                            value: 2000,\n                            name: '周六'\n                        },\n                        {\n                            value: 1200,\n                            name: '周日'\n                        },\n                    ],\n                    itemStyle : {\n                        emphasis: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }\n            ]\n        };\n        return option;\n    };\n\n    getOption2 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            legend: {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    radius: ['50%', '80%'],\n                    center: [\n                        '50%', '55%'\n                    ],\n                    data: [\n                        {\n                            value: 1000,\n                            name: '周一'\n                        }, {\n                            value: 1000,\n                            name: '周二'\n                        }, {\n                            value: 2000,\n                            name: '周三'\n                        }, {\n                            value: 1500,\n                            name: '周四'\n                        }, {\n                            value: 3000,\n                            name: '周五'\n                        }, {\n                            value: 2000,\n                            name: '周六'\n                        }, {\n                            value: 1200,\n                            name: '周日'\n                        }\n                    ],\n                    itemStyle: {\n                        emphasis: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }\n            ]\n        };\n        return option;\n    };\n\n    getOption3 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            legend: {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    radius: '55%',\n                    center: [\n                        '50%', '50%'\n                    ],\n                    data: [\n                        {\n                            value: 1000,\n                            name: '周一'\n                        }, {\n                            value: 1000,\n                            name: '周二'\n                        }, {\n                            value: 2000,\n                            name: '周三'\n                        }, {\n                            value: 1500,\n                            name: '周四'\n                        }, {\n                            value: 3000,\n                            name: '周五'\n                        }, {\n                            value: 2000,\n                            name: '周六'\n                        }, {\n                            value: 1200,\n                            name: '周日'\n                        }\n                    ].sort(function (a, b) { return a.value - b.value; }),\n                    roseType: 'radius',\n                    animationType: 'scale',\n                    animationEasing: 'elasticOut',\n                    animationDelay: function (idx) {\n                        return Math.random() * 200;\n                    }\n                }\n            ]\n        };\n        return option;\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"饼形图表之一\">\n                    <ReactEcharts option={this.getOption()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n                <Card title=\"饼形图之二\" style={{marginTop: 10}}>\n                    <ReactEcharts option={this.getOption2()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n                <Card title=\"饼形图之三\" style={{marginTop: 10}}>\n                    <ReactEcharts option={this.getOption3()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Pie;","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport ReactEcharts from 'echarts-for-react';\nimport echartTheme from '../echartTheme';\n// 引入ECharts主模块\nimport echarts from 'echarts/lib/echarts';\n// 引入饼图\nimport 'echarts/lib/chart/line';\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\n\nclass Line extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        echarts.registerTheme('Bicycle', echartTheme);\n    }\n\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis'\n            },\n            xAxis: {\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'line',\n                    data: [\n                        1000,\n                        2000,\n                        1500,\n                        3000,\n                        2000,\n                        1200,\n                        800\n                    ]\n                }\n            ]\n        };\n        return option;\n    };\n\n    getOption2 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis'\n            },\n            legend:{\n                data:['OFO订单量','摩拜订单量']\n            },\n            xAxis: {\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: 'OFO订单量',\n                    type: 'line',\n                    stack: '总量',\n                    data: [\n                        1200,\n                        3000,\n                        4500,\n                        6000,\n                        8000,\n                        12000,\n                        20000\n                    ]\n                },\n                {\n                    name: '摩拜订单量',\n                    type: 'line',\n                    stack: '总量',\n                    data: [\n                        1000,\n                        2000,\n                        5500,\n                        6000,\n                        8000,\n                        10000,\n                        12000\n                    ]\n                },\n            ]\n        };\n        return option;\n    };\n\n    getOption3 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis'\n            },\n            xAxis: {\n                type:'category',\n                boundaryGap: false,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'line',\n                    data: [\n                        1000,\n                        2000,\n                        1500,\n                        3000,\n                        2000,\n                        1200,\n                        800\n                    ],\n                    areaStyle: {}\n                }\n            ]\n        };\n        return option;\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"折线图表之一\">\n                    <ReactEcharts option={this.getOption()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n                <Card title=\"折线图表之二\" style={{marginTop: 10}}>\n                    <ReactEcharts option={this.getOption2()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n                <Card title=\"折线图表之三\" style={{marginTop: 10}}>\n                    <ReactEcharts option={this.getOption3()} theme=\"Bicycle\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Line;","import React, { Component } from 'react';\nimport { Card, Modal, Button } from 'antd';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftjs from 'draftjs-to-html';\n\nclass RichText extends Component {\n    state = {\n        showRichText:false,\n        editorContent: '',\n        editorState: ''\n    };\n\n    handleClearContent = () => {\n        this.setState({\n            editorState:''\n        });\n    };\n\n    handleGetText = () => {\n        this.setState({\n            showRichText:true\n        });\n    };\n\n    onEditorChange = editorContent => {\n        this.setState({\n            editorContent,\n        });\n    };\n\n    onEditorStateChange = editorState => {\n        this.setState({\n            editorState\n        });\n    };\n\n    render() {\n        const { editorContent, editorState } = this.state;\n        return (\n            <div>\n                <Card style={{marginTop: 10}}>\n                    <Button type=\"primary\" onClick={this.handleClearContent}>清空内容</Button>\n                    <Button type=\"primary\" onClick={this.handleGetText}>获取HTML文本</Button>\n                </Card>\n                <Card title=\"富文本编辑器\">\n                    <Editor\n                        editorState={editorState}\n                        onContentStateChange={this.onEditorChange}\n                        onEditorStateChange={this.onEditorStateChange}\n                    />\n                </Card>\n                <Modal\n                    title=\"富文本\"\n                    visible={this.state.showRichText}\n                    onCancel={()=>{\n                        this.setState({\n                            showRichText:false\n                        })\n                    }}\n                    footer={null}\n                >\n                    {draftjs(editorContent)}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RichText;","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport App from './../App';\nimport Login from '../pages/login';\nimport Admin from './../admin';\nimport Buttons from './../pages/ui/buttons';\nimport Modals from './../pages/ui/modals';\nimport Loadings from './../pages/ui/loadings';\nimport Notice from './../pages/ui/notice';\nimport Messages from './../pages/ui/messages';\nimport Tabs from './../pages/ui/tabs';\nimport Gallery from './../pages/ui/gallery';\nimport Carousel from './../pages/ui/carousel';\nimport FormLogin from './../pages/form/login';\nimport FormRegister from './../pages/form/register';\nimport NoMatch from './../pages/nomatch';\nimport Home from './../pages/home';\nimport BasicTable from './../pages/table/basicTable';\nimport HighTable from './../pages/table/highTable';\nimport City from './../pages/city';\nimport Order from './../pages/order';\nimport Common from './../common';\nimport OrderDetail from './../pages/order/detail';\nimport User from './../pages/user';\nimport BikeMap from './../pages/map/bikeMap';\nimport Bar from './../pages/echarts/bar';\nimport Pie from './../pages/echarts/pie';\nimport Line from './../pages/echarts/line';\nimport RichText from './../pages/rich';\n\nexport default class IRouter extends React.Component {\n    render() {\n        return (\n            <Router>\n                <App>\n                    <Switch>\n                        <Route path=\"/login\" component={Login} />\n                        <Route path=\"/common\" render={() =>\n                            <Common>\n                                <Route path=\"/common/order/detail/:orderId\" component={OrderDetail} />\n                            </Common>\n                        } />\n                        <Route\n                            path=\"/\"\n                            render={() => (\n                                <Admin>\n                                    <Switch>\n                                        <Route path=\"/home\" component={Home} />\n                                        <Route path=\"/ui/buttons\" component={Buttons} />\n                                        <Route path=\"/ui/modals\" component={Modals} />\n                                        <Route path=\"/ui/loadings\" component={Loadings} />\n                                        <Route path=\"/ui/notification\" component={Notice} />\n                                        <Route path=\"/ui/messages\" component={Messages} />\n                                        <Route path=\"/ui/tabs\" component={Tabs} />\n                                        <Route path=\"/ui/gallery\" component={Gallery} />\n                                        <Route path=\"/ui/carousel\" component={Carousel} />\n                                        <Route path=\"/form/login\" component={FormLogin} />\n                                        <Route path=\"/form/reg\" component={FormRegister} />\n                                        <Route path=\"/table/basic\" component={BasicTable} />\n                                        <Route path=\"/table/high\" component={HighTable} />\n                                        <Route path=\"/city\" component={City} />\n                                        <Route path=\"/order\" component={Order} />\n                                        <Route path=\"/user\" component={User} />\n                                        <Route path=\"/bikeMap\" component={BikeMap} />\n                                        <Route path=\"/charts/bar\" component={Bar} />\n                                        <Route path=\"/charts/pie\" component={Pie} />\n                                        <Route path=\"/charts/line\" component={Line} />\n                                        <Route path=\"/rich\" component={RichText} />\n                                        <Route component={NoMatch} />\n                                        <Redirect to=\"/home\" />\n                                    </Switch>\n                                </Admin>\n                            )}\n                        ></Route>\n                    </Switch>\n                </App>\n            </Router>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import Jsx from './demos/Jsx';\n// import Life from './pages/demos/Life';\n// import Admin from './admin';\nimport Router from './router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Admin /> */}\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}