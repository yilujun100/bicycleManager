{"version":3,"sources":["App.js","pages/login/index.js","utils/index.js","axios/index.js","components/Header/index.js","components/Footer/index.js","config/menuConfig.js","components/NavLeft/index.js","admin.js","pages/ui/buttons.js","pages/ui/modals.js","pages/ui/loadings.js","pages/ui/notice.js","pages/ui/messages.js","pages/ui/tabs.js","pages/ui/gallery.js","pages/ui/carousel.js","pages/form/login.js","pages/form/register.js","pages/nomatch/index.js","pages/home/index.js","pages/table/basicTable.js","pages/table/highTable.js","pages/city/index.js","pages/order/index.js","common.js","pages/order/detail.js","router/index.js","serviceWorker.js","index.js"],"names":["App","this","props","children","React","Component","Login","formatDate","timestamp","date","Date","year","getFullYear","month","toDouble","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","str","pagination","data","callback","onChange","current","result","page","pageSize","page_size","total","total_count","showTotal","showQuickJumper","Axios","options","Promise","resolve","reject","JsonP","url","param","err","response","status","message","isShowLoading","document","getElementById","style","display","axios","method","baseURL","timeout","then","res","code","info","title","content","msg","Header","state","setState","userName","setInterval","sysTime","Util","getTime","getWeatherAPIData","jsonp","encodeURIComponent","results","weather_data","dayPictureUrl","weather","menuType","menuName","className","width","span","src","alt","href","Footer","menuList","key","btnList","SubMenu","NavLeft","renderMenu","map","item","Item","to","menuTreeNode","MenuConfig","logoSrc","process","theme","Admin","Buttons","loading","size","handleCloseLoading","handleChange","e","target","value","type","disabled","icon","PlusOutlined","EditOutlined","DeleteOutlined","shape","SearchOutlined","DownloadOutlined","onClick","Group","LeftOutlined","RightOutlined","Modals","showModal1","showModal2","showModal3","showModal4","handleOpen","handleConfirm","onOk","console","log","onCancel","visible","okText","cancelText","top","wrapClassName","Loadings","iconLoading","LoadingOutlined","fontSize","margin","indicator","marginLeft","spinning","description","marginBottom","tip","Notice","openNotification","direction","notification","config","placement","Messages","showMessage","TabPane","UITabs","newTabIndex","handleCallback","activeKey","onEdit","targetKey","action","add","panes","push","remove","lastIndex","forEach","pane","i","filter","length","defaultActiveKey","tab","Gallery","openGallery","imgSrc","currentImg","imgList","list","cover","Meta","gutter","md","footer","UICarousel","imgBaseURL","autoplay","effect","FormItem","FormLogin","handleSubmit","userInfo","success","pwd","layout","placeholder","marginTop","initialValues","remember","onFinish","name","rules","required","min","max","pattern","RegExp","prefix","UserOutlined","LockOutlined","valuePropName","noStyle","float","htmlType","RadioGroup","Option","TextArea","FormRegister","JSON","stringify","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","file","originFileObj","imageUrl","userImg","offsetLayout","wrapperCol","xs","sm","offset","sex","age","interest","isMarried","birthday","moment","address","time","labelCol","label","mode","autoSize","minRows","maxRows","listType","showUploadList","height","NoMatch","textAlign","Home","BasicTable","dataSource2","params","request","_this","ajax","index","selectedRowKeys","selectedRows","selectedCheckRowKeys","selectedCheckRows","Utils","onRowClick","record","handleDelete","ids","id","join","dataSource","columns","dataIndex","render","rowSelection","rowCheckSelection","bordered","onRow","HighTable","filters","sorter","sortOrder","order","confirm","columns3","a","b","abc","columns4","text","scroll","y","fixed","x","FilterForm","OpenCityForm","city_id","op_mode","use_mode","ref","formRef","City","isShowOpenCity","createRef","requestList","item_list","handleOpenCity","getFieldsValue","cityInfo","arr","user_name","formateDate","Order","selectedItem","orderInfo","orderConfirmVisible","selectKey","openOrderDetail","ORDER_DETAIL_RUL","window","open","orderId","handleFinishOrder","formItemLayout","distance","bike_sn","battery","start_time","location","common","OrderDetail","getDetailInfo","match","order_sn","mobile","start_location","end_location","IRouter","path","component","Tabs","Carousel","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6a8c44f8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\n\nexport default class Login extends React.Component {\n    render() {\n        return (\n            <div>\n                this is login page;\n            </div>\n        );\n    }\n};\n","export default {\n    formatDate(timestamp) {\n        if (!timestamp) return '';\n        let date = new Date(timestamp);\n        let year = date.getFullYear();\n        let month = this.toDouble(date.getMonth() + 1);\n        let day = this.toDouble(date.getDate());\n        let hour = this.toDouble(date.getHours());\n        let minute = this.toDouble(date.getMinutes());\n        let second = this.toDouble(date.getSeconds());\n        return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n    },\n\n    toDouble(str) {\n        return str < 10 ? '0' + str : str;\n    },\n\n    pagination(data, callback) {\n        return {\n            onChange: current => {\n                callback(current);\n            },\n            current: data.result.page,\n            pageSize: data.result.page_size,\n            total: data.result.total_count,\n            showTotal: () => {\n                return `共${data.result.total_count}条`;\n            },\n            showQuickJumper: true\n        };\n    }\n};","import JsonP from 'jsonp';\nimport axios from 'axios';\nimport { Modal } from 'antd';\n\nexport default class Axios {\n    static jsonp(options) {\n        return new Promise((resolve, reject) => {\n            JsonP(options.url, {\n                param: 'callback'\n            }, function(err, response) {\n                if (response.status === 'success') {\n                    resolve(response);\n                } else {\n                    reject(response.message);\n                }\n            })\n        })\n    }\n\n    static ajax(options) {\n        let loading;\n        if (options.data && options.data.isShowLoading !== false) {\n            loading = document.getElementById('ajaxLoading');\n            loading.style.display = 'block';\n        }\n        let baseApi = 'https://www.easy-mock.com/mock/5f4fa47a66f90555e2209e3b/api';\n        return new Promise((resolve, reject) => {\n            axios({\n                url: options.url,\n                method: 'get',\n                baseURL: baseApi,\n                timeout: 5000\n            }).then(response => {\n                if (options.data && options.data.isShowLoading !== false) {\n                    loading = document.getElementById('ajaxLoading');\n                    loading.style.display = 'none';\n                }\n                if (response.status === 200) {\n                    const res = response.data;\n                    if (res.code === 0) {\n                        resolve(res);\n                    } else {\n                        Modal.info({\n                            title: '提示',\n                            content: res.msg\n                        })\n                    }\n                } else {\n                    reject(response.data);\n                }\n            })\n        });\n    }\n};\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport './index.less';\nimport Util from '../../utils';\nimport axios from '../../axios';\n\nexport default class Header extends React.Component {\n    state = {};\n\n    componentDidMount() {\n        this.setState({\n            userName: 'yilujun100'\n        });\n        setInterval(() => {\n            let sysTime = Util.formatDate(new Date().getTime());\n            this.setState({\n                sysTime\n            });\n        }, 1000);\n        this.getWeatherAPIData();\n    }\n\n    getWeatherAPIData() {\n        let city = '成都';\n        axios.jsonp({\n            url: 'http://api.map.baidu.com/telematics/v3/weather?location=' + encodeURIComponent(city) + '&output=json&ak=rCoT9oPRq1tuugGRb6pcXtN7RUVGGI9K'\n        }).then(res => {\n            const {dayPictureUrl, weather} = res.results[0].weather_data[0];\n            this.setState({\n                dayPictureUrl,\n                weather\n            });\n        });\n    }\n\n    render() {\n        const { menuName, menuType } = this.props;\n        return (\n            <div className=\"header\" style={{width: '100%'}}>\n                <Row className=\"header-top\">\n                    {\n                        menuType ?\n                            <Col span={6} className=\"logo\">\n                                <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\n                                <span>共享单车管理系统</span>\n                            </Col> : ''\n                    }\n                    <Col span={menuType ? 18 : 24}>\n                        <span>欢迎，{this.state.userName}</span>\n                        <a href=\"void: 0\">退出</a>\n                    </Col>\n                </Row>\n                {\n                    menuType ? '' : (\n                        <Row className=\"breadcrumb\">\n                            <Col span={4} className=\"breadcrumb-title\">首页</Col>\n                            <Col span={20} className=\"weather\">\n                                <span className=\"date\">{this.state.sysTime}</span>\n                                <span className=\"weather-img\">\n                                    <img src={this.state.dayPictureUrl} alt=\"\"/>\n                                </span>\n                                <span className=\"weather-detail\">\n                                    {this.state.weather}\n                                </span>\n                            </Col>\n                        </Row>\n                    )\n                }\n            </div>\n        );\n    }\n};","import React from 'react';\nimport './index.less';\n\nexport default class Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"footer\">\n               版权所有：yilujun100（推荐使用谷歌浏览器，可以获得更佳操作页面体验） 技术支持：yilujun100\n            </div>\n        );\n    }\n};","const menuList = [\n    {\n        title: '首页',\n        key: '/home'\n    },\n    {\n        title: 'UI',\n        key: '/ui',\n        children: [\n            {\n                title: '按钮',\n                key: '/ui/buttons'\n            },\n            {\n                title: '弹框',\n                key: '/ui/modals'\n            },\n            {\n                title: 'Loading',\n                key: '/ui/loadings'\n            },\n            {\n                title: '通知提醒',\n                key: '/ui/notification'\n            },\n            {\n                title: '全局Message',\n                key: '/ui/messages'\n            },\n            {\n                title: 'Tab页签',\n                key: '/ui/tabs'\n            },\n            {\n                title: '图片画廊',\n                key: '/ui/gallery'\n            },\n            {\n                title: '轮播图',\n                key: '/ui/carousel'\n            }\n        ]\n    },\n    {\n        title: '表单',\n        key: '/form',\n        children: [\n            {\n                title: '登录',\n                key: '/form/login'\n            },\n            {\n                title: '注册',\n                key: '/form/reg'\n            }\n        ]\n    },\n    {\n        title: '表格',\n        key: '/table',\n        children: [\n            {\n                title: '基础表格',\n                key: '/table/basic'\n            },\n            {\n                title: '高级表格',\n                key: '/table/high'\n            }\n        ]\n    },\n    {\n        title: '富文本',\n        key: '/rich'\n    },\n    {\n        title: '城市管理',\n        key: '/city'\n    },\n    {\n        title: '订单管理',\n        key: '/order',\n        btnList: [\n            {\n                title: '订单详情',\n                key: 'detail'\n            },\n            {\n                title: '结束订单',\n                key: 'finish'\n            }\n        ]\n    },\n    {\n        title: '员工管理',\n        key: '/user'\n    },\n    {\n        title: '车辆地图',\n        key: '/bikeMap'\n    },\n    {\n        title: '图表',\n        key: '/charts',\n        children: [\n            {\n                title: '柱形图',\n                key: '/charts/bar'\n            },\n            {\n                title: '饼图',\n                key: '/charts/pie'\n            },\n            {\n                title: '折线图',\n                key: '/charts/line'\n            }\n        ]\n    },\n    {\n        title: '权限设置',\n        key: '/permission'\n    }\n];\n\nexport default menuList;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport MenuConfig from './../../config/menuConfig';\nimport './index.less';\n\nconst { SubMenu } = Menu;\n\nexport default class NavLeft extends React.Component {\n    constructor(props) {\n        super(props);\n        const menuTreeNode = this.renderMenu(MenuConfig);\n        this.state = {\n            menuTreeNode\n        };\n    }\n\n    // 菜单渲染\n    renderMenu = data => {\n        return data.map(item => {\n            if (item.children) {\n                return (\n                    <SubMenu title={item.title} key={item.key}>\n                        { this.renderMenu(item.children) }\n                    </SubMenu>\n                );\n            }\n            return <Menu.Item title={item.title} key={item.key}>\n                <NavLink to={item.key}>{ item.title }</NavLink>\n            </Menu.Item>;\n        });\n    }\n\n    render() {\n        const logoSrc = process.env.NODE_ENV === 'development' ? '/assets/logo-ant.svg' : `${process.env.PUBLIC_URL}/assets/logo-ant.svg`;\n        return (\n            <div>\n                <div className=\"logo\">\n                    <img src={logoSrc} alt=\"\" />\n                    <h1>Bicycle MS</h1>\n                </div>\n                <Menu\n                    theme=\"dark\"\n                >\n                    { this.state.menuTreeNode }\n                </Menu>\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport NavLeft from './components/NavLeft';\nimport './styles/common.less';\n// import Home from './pages/demos/demo-router/route1/Home';\n// import IRouter from './pages/demos/demo-router/route2/router';\n// import IRouter from './pages/demos/demo-router/route3/router';\n\nexport default class Admin extends React.Component {\n    render() {\n        return (\n            <Row className=\"container\">\n                <Col span={3} className=\"nav-left\">\n                    <NavLeft />\n                </Col>\n                <Col span={21} className=\"main\">\n                    <Header />\n                    <Row className=\"content\">\n                        {/* <Home /> */}\n                        {this.props.children}\n                    </Row>\n                    <Footer />\n                </Col>\n            </Row>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Card, Button, Radio } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined, SearchOutlined, DownloadOutlined, LeftOutlined, RightOutlined } from '@ant-design/icons';\nimport './ui.less';\n\nexport default class Buttons extends Component {\n    state = {\n        loading: true,\n        size: 'default'\n    };\n\n    handleCloseLoading = () => {\n        this.setState({\n            loading: false\n        });\n    }\n\n    handleChange = e => {\n        this.setState({\n            size: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"基础按钮\" className=\"card-wrap\">\n                    <Button type=\"primary\">Primary Button</Button>\n                    <Button>Default Button</Button>\n                    <Button type=\"dashed\">Dashed Button</Button>\n                    <Button type=\"danger\">Danger Button</Button>\n                    <Button disabled>Disabled Button</Button>\n                </Card>\n                <Card title=\"图形按钮\" className=\"card-wrap\">\n                    <Button icon={<PlusOutlined />}>创建</Button>\n                    <Button icon={<EditOutlined />}>编辑</Button>\n                    <Button icon={<DeleteOutlined />}>删除</Button>\n                    <Button shape=\"circle\" icon={<SearchOutlined />}></Button>\n                    <Button type=\"primary\" icon={<SearchOutlined />}>搜索</Button>\n                    <Button type=\"primary\" icon={<DownloadOutlined />}>下载</Button>\n                </Card>\n                <Card title=\"Loading按钮\" className=\"card-wrap\">\n                    <Button type=\"primary\" loading={this.state.loading}>确定</Button>\n                    <Button type=\"primary\" shape=\"circle\" loading={this.state.loading}></Button>\n                    <Button loading={this.state.loading}>点击加载</Button>\n                    <Button shape=\"circle\" loading={this.state.loading}></Button>\n                    <Button type=\"primary\" onClick={this.handleCloseLoading}>关闭</Button>\n                </Card>\n                <Card title=\"按钮组\">\n                    <Button.Group>\n                        <Button type=\"primary\" icon={<LeftOutlined />}>返回</Button>\n                        <Button type=\"primary\" icon={<RightOutlined />}>前进</Button>\n                    </Button.Group>\n                </Card>\n                <Card title=\"按钮尺寸\" className=\"card-wrap\">\n                    <Radio.Group value={this.state.size} onChange={this.handleChange}>\n                        <Radio value=\"small\">小</Radio>\n                        <Radio value=\"default\">中</Radio>\n                        <Radio value=\"large\">大</Radio>\n                    </Radio.Group>\n                    <Button type=\"primary\" size={this.state.size}>Primary Button</Button>\n                    <Button size={this.state.size}>Default Button</Button>\n                    <Button type=\"dashed\" size={this.state.size}>Dashed Button</Button>\n                    <Button type=\"danger\" size={this.state.size}>Danger Button</Button>\n                </Card>\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Button, Modal } from 'antd';\nimport './ui.less';\n\nexport default class Modals extends Component {\n    state = {\n        showModal1: false,\n        showModal2: false,\n        showModal3: false,\n        showModal4: false\n    };\n\n    handleOpen = type => {\n        this.setState({\n            [type]: true\n        })\n    };\n\n    handleConfirm = type => {\n        Modal[type]({\n            title: '确认？',\n            content: '你确定你学会了React了吗？',\n            onOk() {\n                console.log('Ok');\n            },\n            onCancel() {\n                console.log('Cancel');\n            }\n        });\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"基础模态框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal1')}>Open</Button>\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal2')}>自定义页脚</Button>\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal3')}>顶部20px弹框</Button>\n                    <Button type=\"primary\" onClick={() => this.handleOpen('showModal4')}>水平垂直居中</Button>\n                </Card>\n                <Card title=\"信息确认框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('confirm')}>Confirm</Button>\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.handleConfirm('warning')}>Warning</Button>\n                </Card>\n                <Modal\n                    title=\"React\"\n                    visible={this.state.showModal1}\n                    onCancel={() => {\n                        this.setState({\n                            showModal1: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n                <Modal\n                    title=\"React\"\n                    visible={this.state.showModal2}\n                    okText=\"好的\"\n                    cancelText=\"算了\"\n                    onCancel={() => {\n                        this.setState({\n                            showModal2: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n                <Modal\n                    title=\"React\"\n                    style={{top: 20}}\n                    visible={this.state.showModal3}\n                    onCancel={() => {\n                        this.setState({\n                            showModal3: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n                <Modal\n                    title=\"React\"\n                    wrapClassName=\"vertical-center-modal\"\n                    visible={this.state.showModal4}\n                    onCancel={() => {\n                        this.setState({\n                            showModal4: false\n                        })\n                    }}\n                >\n                    <p>我们的目标是最强王者</p>\n                </Modal>\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Spin, Alert } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport './ui.less';\n\nexport default class Loadings extends Component {\n    render() {\n        const iconLoading = <LoadingOutlined style={{fontSize: 24}} />;\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"Spin用法\" className=\"card-wrap\">\n                    <Spin size=\"small\" />\n                    <Spin style={{margin: '0 10px'}} />\n                    <Spin size=\"large\" />\n                    <Spin indicator={iconLoading} style={{marginLeft: 10}} spinning={true} />\n                </Card>\n                <Card title=\"内容遮罩\" className=\"card-wrap\">\n                    <Alert\n                        message=\"Alert message title\"\n                        description=\"Further details about the context of this alert.\"\n                        type=\"info\"\n                        style={{ marginBottom: 10 }}\n                    />\n                    <Spin>\n                        <Alert\n                            message=\"Alert message title\"\n                            description=\"Further details about the context of this alert.\"\n                            type=\"warning\"\n                            style={{ marginBottom: 10 }}\n                        />\n                    </Spin>\n                    <Spin tip=\"加载中...\">\n                        <Alert\n                            message=\"Alert message title\"\n                            description=\"Further details about the context of this alert.\"\n                            type=\"warning\"\n                            style={{ marginBottom: 10 }}\n                        />\n                    </Spin>\n                    <Spin indicator={iconLoading}>\n                        <Alert\n                            message=\"Alert message title\"\n                            description=\"Further details about the context of this alert.\"\n                            type=\"warning\"\n                            style={{ marginBottom: 10 }}\n                        />\n                    </Spin>\n                </Card>\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Button, notification } from 'antd';\nimport './ui.less';\n\nclass Notice extends Component {\n    openNotification = (type, direction) => {\n        if (direction) {\n            notification.config({\n                placement: direction\n            });\n        }\n        notification[type]({\n            message: 'Notification Title',\n            description: 'This is the content of the notification.'\n        });\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.openNotification('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('error')}>Error</Button>\n                </Card>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.openNotification('success', 'topLeft')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('info', 'topRight')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('warning', 'bottomLeft')}>Warning</Button>\n                    <Button type=\"primary\" onClick={() => this.openNotification('error', 'bottomRight')}>Error</Button>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Notice;\n","import React, { Component } from 'react';\nimport { Card, Button, message } from 'antd';\nimport './ui.less';\n\nclass Messages extends Component {\n    showMessage = type => {\n        message[type]('恭喜你，成功晋升最强王者');\n    }\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"全局提示框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={() => this.showMessage('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('error')}>Error</Button>\n                    <Button type=\"primary\" onClick={() => this.showMessage('loading')}>Loading</Button>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport { Card, Tabs, message } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport './ui.less';\nconst { TabPane } = Tabs;\n\nclass UITabs extends Component {\n    newTabIndex = 0;\n    handleCallback = key => {\n        message.info('Hi,您选择了页签：' + key);\n    };\n\n    componentWillMount() {\n        const panes = [\n            {\n                title: 'Tab 1',\n                content: 'Tab 1',\n                key: '1'\n            },\n            {\n                title: 'Tab 2',\n                content: 'Tab 2',\n                key: '2'\n            },\n            {\n                title: 'Tab 3',\n                content: 'Tab 3',\n                key: '3'\n            }\n        ];\n        this.setState({\n            activeKey: panes[0].key,\n            panes\n        });\n    }\n\n    onChange = activeKey => {\n        this.setState({\n            activeKey\n        });\n    };\n\n    onEdit = (targetKey, action) => {\n        this[action](targetKey);\n    };\n\n    add = () => {\n        const { panes } = this.state;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({ title: 'New Tab', content: 'New Tab Pane', key: activeKey });\n        this.setState({ panes, activeKey });\n    };\n\n    remove = targetKey => {\n        let { activeKey } = this.state;\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (panes.length && activeKey === targetKey) {\n            if (lastIndex >= 0) {\n                activeKey = panes[lastIndex].key;\n            } else {\n                activeKey = panes[0].key;\n            }\n        }\n        this.setState({\n            panes,\n            activeKey\n        });\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"Tab页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleCallback}>\n                        <TabPane tab=\"Tab 1\" key=\"1\">\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab=\"Tab 2\" key=\"2\" disabled>\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab=\"Tab 3\" key=\"3\">\n                            React是一个非常受欢迎的MV*框架\n                        </TabPane>\n                    </Tabs>\n                </Card>\n                <Card title=\"Tab带图的页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleCallback}>\n                        <TabPane tab={<span><PlusOutlined />Tab 1</span>} key=\"1\">\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab={<span><EditOutlined />Tab 2</span>} key=\"2\">\n                            Content of Tab Pane 1\n                        </TabPane>\n                        <TabPane tab={<span><DeleteOutlined />Tab 3</span>} key=\"3\">\n                            React是一个非常受欢迎的MV*框架\n                        </TabPane>\n                    </Tabs>\n                </Card>\n                <Card title=\"Tab带图的页签\" className=\"card-wrap\">\n                    <Tabs\n                        onChange={this.onChange}\n                        activeKey={this.state.activeKey}\n                        type=\"editable-card\"\n                        onEdit={this.onEdit}\n                    >\n                        {\n                            this.state.panes.map(pane => (\n                                <TabPane tab={pane.title} key={pane.key}>\n                                    {pane.content}\n                                </TabPane>\n                            ))\n                        }\n                    </Tabs>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default UITabs;","import React, { Component } from 'react';\nimport { Card, Row, Col, Modal } from 'antd';\n\nclass Gallery extends Component {\n    state = {\n        visible: false\n    };\n\n    openGallery = imgSrc => {\n        this.setState({\n            visible: true,\n            currentImg: `/gallery/${imgSrc}`\n        });\n    };\n\n    render() {\n        const baseURL = process.env.NODE_ENV === 'development' ? '/gallery/' : `${process.env.PUBLIC_URL}/gallery/`;\n        const imgs = [\n            ['1.png', '2.png', '3.png', '4.png', '5.png'],\n            ['6.png', '7.png', '8.png', '9.png', '10.png'],\n            ['11.png', '12.png', '13.png', '14.png', '15.png'],\n            ['16.png', '17.png', '18.png', '19.png', '20.png'],\n            ['21.png', '22.png', '23.png', '24.png', '25.png']\n        ];\n        const imgList = imgs.map(list => list.map(item => (\n            <Card\n                style={{marginBottom: 10}}\n                cover={<img src={`${baseURL}${item}`} onClick={() => this.openGallery(item)} alt=\"cover\" />}\n            >\n                <Card.Meta\n                    title=\"React Admin\"\n                    description=\"I Love React\"\n                />\n            </Card>\n        )))\n        return (\n            <div className=\"card-wrap\">\n                <Row gutter={10}>\n                    <Col md={5}>\n                        {imgList[0]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[1]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[2]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[3]}\n                    </Col>\n                    <Col md={4}>\n                        {imgList[4]}\n                    </Col>\n                </Row>\n                <Modal\n                    width={420}\n                    visible={this.state.visible}\n                    title=\"图片画廊\"\n                    onCancel={()=>{\n                        this.setState({\n                            visible:false\n                        })\n                    }}\n                    footer={null}\n                >\n                   {<img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Gallery;","import React, { Component } from 'react';\nimport { Card, Carousel } from 'antd';\nimport './ui.less';\n\nclass UICarousel extends Component {\n    render() {\n        const imgBaseURL = process.env.NODE_ENV === 'development' ? '/carousel-img/' : `${process.env.PUBLIC_URL}/carousel-img/`;\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"文字背景轮播\" className=\"card-wrap\">\n                    <Carousel autoplay effect=\"fade\">\n                        <div><h3>Ant Motion Banner - React</h3></div>\n                        <div><h3>Ant Motion Banner - Vue</h3></div>\n                        <div><h3>Ant Motion Banner - Angular</h3></div>\n                    </Carousel>\n                </Card>\n                <Card title=\"图片轮播\" className=\"slider-wrap\">\n                    <Carousel autoplay effect=\"fade\">\n                        <div>\n                            <img src={`${imgBaseURL}carousel-1.jpg`} alt=\"\"/>\n                        </div>\n                        <div>\n                            <img src={`${imgBaseURL}carousel-2.jpg`} alt=\"\" />\n                        </div>\n                        <div>\n                            <img src={`${imgBaseURL}carousel-3.jpg`} alt=\"\" />\n                        </div>\n                    </Carousel>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default UICarousel;\n","import React, { Component } from 'react';\nimport { Card, Form, Input, Button, message, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nconst FormItem = Form.Item;\n\nclass FormLogin extends Component {\n    handleSubmit = userInfo => {\n        message.success(`${userInfo.userName} 恭喜你，登录成功，当前密码为：${userInfo.pwd}`);\n    };\n\n    render() {\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"登录行内表单\">\n                    <Form layout=\"inline\">\n                        <FormItem>\n                            <Input placeholder=\"请输入用户名\" />\n                        </FormItem>\n                        <FormItem>\n                            <Input placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\">登录</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n                <Card title=\"登录水平表单\" style={{marginTop: 10}}>\n                    <Form\n                        style={{width: 300}}\n                        initialValues={{\n                            userName: '',\n                            pwd: '',\n                            remember: true\n                        }}\n                        onFinish={this.handleSubmit}\n                    >\n                        <FormItem\n                            name=\"userName\"\n                            rules={\n                                [\n                                    { required: true, message: '用户名不能为空' },\n                                    { min: 5, max: 10, message: '长度在 5 到 10 个字符' },\n                                    { pattern: new RegExp('^\\\\w+$', 'g'), message: '用户名必须为字母或者数字' }\n                                ]\n                            }\n                        >\n                            <Input prefix={<UserOutlined />} placeholder=\"请输入用户名\" />\n                        </FormItem>\n                        <FormItem\n                            name=\"pwd\"\n                        >\n                            <Input prefix={<LockOutlined />} type=\"password\" placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem>\n                            <FormItem name=\"remember\" valuePropName=\"checked\" noStyle>\n                                <Checkbox>记住密码</Checkbox>\n                            </FormItem>\n                            <a href=\"void: 0\" style={{float: 'right'}}>忘记密码</a>\n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\" htmlType=\"submit\">登录</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default FormLogin;","import React, { Component } from 'react';\nimport { Card, Form, Button, Input, Checkbox, Radio, Select, Switch, DatePicker, TimePicker, Upload, InputNumber, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst Option = Select.Option;\nconst TextArea= Input.TextArea;\n\nclass FormRegister extends Component {\n    state = {\n        loading: false\n    };\n\n    handleSubmit = userInfo =>{\n        console.log(JSON.stringify(userInfo))\n        message.success(`${userInfo.userName} 恭喜你，注册成功，当前密码为：${userInfo.pwd}`)\n    };\n\n    getBase64 = (img, callback)=>{\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    };\n\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n                userImg:imageUrl,\n                loading: false,\n            }));\n        }\n    };\n\n    render() {\n        const fromItemLayout = {\n            labelCol: {\n                xs: 24,\n                sm: 4\n            },\n            wrapperCol: {\n                xs: 24,\n                sm: 12\n            }\n        };\n        const offsetLayout = {\n            wrapperCol: {\n                xs: 24,\n                sm: {\n                    span: 12,\n                    offset: 4\n                }\n            }\n        };\n        const rowObject = {\n            minRows: 4,\n            maxRows: 6\n        };\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"注册表单\">\n                    <Form\n                        layout=\"horizontal\"\n                        initialValues={{\n                            userName: '',\n                            pwd: '',\n                            sex: '1',\n                            age: 18,\n                            state: '2',\n                            interest: ['2', '5'],\n                            isMarried: true,\n                            birthday: moment('2018-08-08'),\n                            address: '成都市天府广场',\n                            time: '',\n                            userImg: ''\n                        }}\n                        {...fromItemLayout}\n                        onFinish={this.handleSubmit}\n                    >\n                        <FormItem\n                            label=\"用户名\"\n                            name=\"userName\"\n                            rules={\n                                [\n                                    { required: true, message: '用户名不能为空' }\n                                ]\n                            }\n                        >\n                            <Input placeholder=\"请输入用户名\" />\n                        </FormItem>\n                        <FormItem\n                            label=\"密码\"\n                            name=\"pwd\"\n                        >\n                            <Input type=\"password\" placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem\n                            label=\"性别\"\n                            name=\"sex\"\n                        >\n                            <RadioGroup>\n                                <Radio value=\"1\">男</Radio>\n                                <Radio value=\"2\">女</Radio>\n                            </RadioGroup>\n                        </FormItem>\n                        <FormItem\n                            label=\"年龄\"\n                            name=\"age\"\n                        >\n                            <InputNumber />\n                        </FormItem>\n                        <FormItem\n                            label=\"当前状态\"\n                            name=\"state\"\n                        >\n                            <Select>\n                                <Option value=\"1\">咸鱼一条</Option>\n                                <Option value=\"2\">风华浪子</Option>\n                                <Option value=\"3\">北大才子一枚</Option>\n                                <Option value=\"4\">百度FE</Option>\n                                <Option value=\"5\">创业者</Option>\n                            </Select>\n                        </FormItem>\n                        <FormItem\n                            label=\"爱好\"\n                            name=\"interest\"\n                        >\n                            <Select mode=\"multiple\">\n                                <Option value=\"1\">游泳</Option>\n                                <Option value=\"2\">打篮球</Option>\n                                <Option value=\"3\">踢足球</Option>\n                                <Option value=\"4\">跑步</Option>\n                                <Option value=\"5\">爬山</Option>\n                                <Option value=\"6\">骑行</Option>\n                                <Option value=\"7\">桌球</Option>\n                                <Option value=\"8\">麦霸</Option>\n                            </Select>\n                        </FormItem>\n                        <FormItem\n                            label=\"是否已婚\"\n                        >\n                            <FormItem name=\"isMarried\" valuePropName=\"checked\" noStyle>\n                                <Switch />\n                            </FormItem>\n                        </FormItem>\n                        <FormItem\n                            label=\"生日\"\n                            name=\"birthday\"\n                        >\n                            <DatePicker />\n                        </FormItem>\n                        <FormItem\n                            label=\"联系地址\"\n                            name=\"address\"\n                        >\n                            <TextArea autoSize={rowObject} />\n                        </FormItem>\n                        <FormItem\n                            label=\"早起时间\"\n                            name=\"time\"\n                        >\n                            <TimePicker />\n                        </FormItem>\n                        <FormItem\n                            label=\"头像\"\n                        >\n                            <Upload\n                                name=\"userImg\"\n                                listType=\"picture-card\"\n                                showUploadList={false}\n                                action=\"//jsonplaceholder.typicode.com/posts/\"\n                                onChange={this.handleChange}\n                            >\n                                {this.state.userImg ? <img src={this.state.userImg} width=\"100\" height=\"100\" alt=\"userImg\" /> : <PlusOutlined />}\n                            </Upload>\n                        </FormItem>\n                        <FormItem\n                            {...offsetLayout}\n                        >\n                            <Checkbox>我已阅读过<a href=\"void: 0\">用户协议</a></Checkbox>\n                        </FormItem>\n                        <FormItem\n                            {...offsetLayout}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\">注册</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default FormRegister;","import React from 'react';\n\nexport default class NoMatch extends React.Component {\n    render() {\n        return (\n            <div style={{\n                width: '100%',\n                textAlign: 'center',\n                fontSize: 24\n            }}>\n                404 NO Found!!!\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport './index.less';\n\nexport default class Home extends React.Component{\n\n    render(){\n        return (\n            <div className=\"home-wrap\">\n                欢迎进入共享单车后台管理系统\n            </div>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { Card, Table, Modal, Button, message } from 'antd';\nimport axios from './../../axios';\nimport Utils from './../../utils';\n\nclass BasicTable extends Component {\n    state = {\n        dataSource2: []\n    };\n\n    params = {\n        page: 1\n    };\n\n    componentDidMount() {\n        let data = [\n            {\n                id: '0',\n                userName: 'Jack',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            },\n            {\n                id: '1',\n                userName: 'Tom',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            },\n            {\n                id: '2',\n                userName: 'Lily',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            }\n        ];\n        data = data.map((item, index) => ({\n            ...item,\n            key: index\n        }));\n        this.setState({\n            dataSource: data\n        });\n        this.request();\n    }\n\n    // 动态获取mock数据\n    request = () => {\n        let _this = this;\n        axios.ajax({\n            url: '/table/list',\n            data: {\n                params: {\n                    page: this.params.page\n                }\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                res.result.list = res.result.list.map((item, index) => ({\n                    ...item,\n                    key: index\n                }));\n                this.setState({\n                    dataSource2: res.result.list,\n                    selectedRowKeys: [],\n                    selectedRows: null,\n                    selectedCheckRowKeys: [],\n                    selectedCheckRows: null,\n                    pagination: Utils.pagination(res, current => {\n                        _this.params.page = current;\n                        this.request();\n                    })\n                });\n            }\n        });\n    };\n\n    onRowClick = (record, index) => {\n        const selectedRowKeys = [index];\n\n        Modal.info({\n            title: '信息',\n            content: `用户名：${record.userName},用户爱好：${record.interest}`\n        });\n        this.setState({\n            selectedRowKeys,\n            selectedRows: record\n        });\n    };\n\n    // 多选执行删除操作\n    handleDelete = () => {\n        const rows = this.state.selectedCheckRows;\n        const ids = rows.map(item => item.id);\n        Modal.info({\n            title: '删除提示',\n            content: `您确定要删除这些数据吗？${ids.join(',')}`,\n            onOk: () => {\n                message.success('删除成功');\n                this.request();\n            }\n        })\n    };\n\n    render() {\n        const columns = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: sex => {\n                    return sex === '1' ? '男' : '女';\n                }\n            },\n            {\n                title: '状态',\n                key: 'state',\n                dataIndex: 'state',\n                render: state => {\n                    const config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    };\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: interest => {\n                    const config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    };\n                    return config[interest];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time'\n            }\n        ];\n        const { selectedRowKeys, selectedCheckRowKeys } = this.state;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys\n        };\n        const rowCheckSelection = {\n            type: 'checkbox',\n            selectedRowKeys: selectedCheckRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedCheckRowKeys: selectedRowKeys,\n                    selectedCheckRows: selectedRows\n                });\n            }\n        }\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"基础表格\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"动态数据渲染表格-Mock\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-单选\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        rowSelection={rowSelection}\n                        onRow={(record, index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(record, index);\n                                }\n                            };\n                        }}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-多选\" style={{margin: '10px 0'}}>\n                    <div style={{marginBottom: 10}}>\n                        <Button onClick={this.handleDelete}>删除</Button>\n                    </div>\n                    <Table\n                        bordered\n                        rowSelection={rowCheckSelection}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-表格分页\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={this.state.pagination}\n                    />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default BasicTable;\n","import React, { Component } from 'react';\nimport { Card, Table, Modal, Button, message, Badge } from 'antd';\nimport axios from './../../axios';\n\nexport default class HighTable extends Component {\n    state = {\n\n    };\n\n    params = {\n        page: 1\n    };\n\n    // 动态获取mock数据\n    request = () => {\n        axios.ajax({\n            url: '/table/high/list',\n            data: {\n                params: {\n                    page: this.params.page\n                }\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                res.result.list = res.result.list.map((item, index) => ({...item, key: index}));\n                this.setState({\n                    dataSource: res.result.list\n                });\n            }\n        });\n    };\n\n    handleChange = (pagination, filters, sorter) => {\n        this.setState({\n            sortOrder: sorter.order\n        });\n    };\n\n    // 删除操作\n    handleDelete = item => {\n        Modal.confirm({\n            title: '确认',\n            content: '您确认要删除此条数据吗？',\n            onOk: () => {\n                message.success('删除成功');\n                this.request();\n            }\n        });\n    };\n\n    componentDidMount() {\n        this.request();\n    }\n\n    render() {\n        const columns = [\n            {\n                title: 'id',\n                key: 'id',\n                width:80,\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                width: 80,\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                width: 80,\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '状态',\n                key: 'state',\n                width: 80,\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                width: 80,\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                width: 120,\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                width: 80,\n                dataIndex: 'time'\n            }\n        ];\n        const columns2 = [\n            {\n                title: 'id',\n                key: 'id',\n                width:80,\n                fixed: 'left',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                width: 80,\n                fixed: 'left',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                width: 80,\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '状态',\n                key: 'state',\n                width: 80,\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                width: 80,\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                width: 120,\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                width: 220,\n                fixed: 'right',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                width: 120,\n                fixed: 'right',\n                dataIndex: 'time'\n            }\n        ];\n        const columns3 = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age',\n                sorter: (a, b) => {\n                    return a.age - b.age\n                },\n                sortOrder: this.state.sortOrder\n            },\n            {\n                title: '状态',\n                key: 'state',\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time'\n            }\n        ];\n        const columns4 = [\n            {\n                title: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                render(sex) {\n                    return sex === 1 ? '男' : '女'\n                }\n            },\n            {\n                title: '年龄',\n                dataIndex: 'age'\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render(state) {\n                    let config = {\n                        '1': '咸鱼一条',\n                        '2': '风华浪子',\n                        '3': '北大才子',\n                        '4': '百度FE',\n                        '5': '创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': <Badge status=\"success\" text=\"成功\"/>,\n                        '2': <Badge status=\"error\" text=\"报错\" />,\n                        '3': <Badge status=\"default\" text=\"正常\" />,\n                        '4': <Badge status=\"processing\" text=\"进行中\" />,\n                        '5': <Badge status=\"warning\" text=\"警告\" />\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                dataIndex: 'address'\n            },\n            {\n                title: '操作',\n                render: (text, item) => {\n                    return <Button size=\"small\" onClick={(item) => { this.handleDelete(item) }}>删除</Button>;\n                }\n            }\n        ];\n        return (\n            <div style={{width: '100%'}}>\n                <Card title=\"头部固定\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        scroll={{ y: 240 }}\n                    />\n                </Card>\n                <Card title=\"左侧固定\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        columns={columns2}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        scroll={{ x: 1800 }}\n                    />\n                </Card>\n                <Card title=\"表格排序\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        columns={columns3}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        onChange={this.handleChange}\n                    />\n                </Card>\n                <Card title=\"操作按钮\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        columns={columns4}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                    />\n                </Card>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Card, Button, Table, Form, Select, Modal, message } from 'antd';\nimport axios from './../../axios';\nimport Utils from './../../utils';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass FilterForm extends Component {\n\n    render() {\n        return (\n            <Form layout=\"inline\">\n                <FormItem\n                    label=\"城市\"\n                    name=\"city_id\"\n                >\n                    <Select\n                        style={{width: 100}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">北京市</Option>\n                        <Option value=\"2\">上海市</Option>\n                        <Option value=\"3\">深圳市</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"用车模式\"\n                    name=\"mode\"\n                >\n                    <Select\n                        style={{width: 120}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">指定停车点模式</Option>\n                        <Option value=\"2\">禁停区模式</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"营运模式\"\n                    name=\"op_mode\"\n                >\n                    <Select\n                        style={{width: 80}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">自营</Option>\n                        <Option value=\"2\">加盟</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"加盟商授权状态\"\n                    name=\"auth_status\"\n                >\n                    <Select\n                        style={{width: 100}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">已授权</Option>\n                        <Option value=\"2\">未授权</Option>\n                    </Select>\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" style={{margin: '0 20px'}}>查询</Button>\n                    <Button>重置</Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nclass OpenCityForm extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                span: 5\n            },\n            wrapperCol: {\n                span: 19\n            }\n        };\n        return (\n            <Form\n                layout=\"horizontal\"\n                initialValues={{\n                    city_id: '1',\n                    op_mode: '1',\n                    use_mode: '1'\n                }}\n                {...formItemLayout}\n                ref={this.props.formRef}\n            >\n                <FormItem\n                    label=\"选择城市\"\n                    name=\"city_id\"\n                >\n                    <Select\n                        style={{width: 120}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">北京市</Option>\n                        <Option value=\"2\">上海市</Option>\n                        <Option value=\"3\">深圳市</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"营运模式\"\n                    name=\"op_mode\"\n                >\n                    <Select\n                        style={{width: 120}}\n                        placeholder=\"全部\"\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">自营</Option>\n                        <Option value=\"2\">加盟</Option>\n                    </Select>\n                </FormItem>\n                <FormItem\n                    label=\"用车模式\"\n                    name=\"use_mode\"\n                >\n                    <Select\n                        style={{width: 120}}\n                    >\n                        <Option value=\"\">全部</Option>\n                        <Option value=\"1\">指定停车点</Option>\n                        <Option value=\"2\">禁停区</Option>\n                    </Select>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nclass City extends Component {\n    state = {\n        list: [],\n        isShowOpenCity: false\n    };\n    params = {\n        page: 1\n    };\n    formRef = React.createRef();\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    // 请求mock接口数据\n    requestList = () => {\n        let _this = this;\n        axios.ajax({\n            url: '/open_city',\n            data: {\n                params: {\n                    page: this.params.page\n                }\n            }\n        }).then(res => {\n            let list = res.result.item_list.map((item, index) => ({\n                ...item,\n                key: index\n            }));\n            this.setState({\n                list,\n                pagination: Utils.pagination(res, current => {\n                    _this.params.page = current;\n                    _this.requestList();\n                })\n            })\n        });\n    };\n\n    // 开通城市\n    handleOpenCity = () => {\n        this.setState({\n            isShowOpenCity: true\n        });\n    };\n\n    // 城市开通提交\n    handleSubmit = () => {\n        console.log(this.formRef.current.getFieldsValue());\n        let cityInfo = this.formRef.current.getFieldsValue();\n        axios.ajax({\n            url: '/city/open',\n            data: {\n                params: cityInfo\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                message.success('开通成功');\n                this.setState({\n                    isShowOpenCity: false\n                });\n                this.requestList();\n            }\n        })\n    };\n\n    render() {\n        const columns = [\n            {\n                title: '城市ID',\n                dataIndex: 'id'\n            },\n            {\n                title: '城市名称',\n                dataIndex: 'name'\n            },\n            {\n                title: '用车模式',\n                dataIndex: 'mode',\n                render(mode) {\n                    return mode === 1 ? '停车点' : '禁停区';\n                }\n            },\n            {\n                title: '营运模式',\n                dataIndex: 'op_mode',\n                render(op_mode) {\n                    return op_mode === 1 ? '自营' : '加盟';\n                }\n            },\n            {\n                title: '授权加盟商',\n                dataIndex: 'franchisee_name'\n            },\n            {\n                title: '城市管理员',\n                dataIndex: 'city_admins',\n                render(arr) {\n                    return arr.map(item => item.user_name).join(',');\n                }\n            },\n            {\n                title: '城市开通时间',\n                dataIndex: 'open_time'\n            },\n            {\n                title: '操作时间',\n                dataIndex: 'update_time',\n                render: Utils.formateDate\n            },\n            {\n                title: '操作人',\n                dataIndex: 'sys_user_name'\n            }\n        ];\n        return (\n            <div style={{width: '100%'}}>\n                <Card>\n                    <FilterForm />\n                </Card>\n                <Card style={{marginTop: 10}}>\n                    <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                    />\n                </div>\n                <Modal\n                    title=\"开通城市\"\n                    visible={this.state.isShowOpenCity}\n                    onCancel={() => {\n                        this.setState({\n                            isShowOpenCity: false\n                        })\n                    }}\n                    onOk={this.handleSubmit}\n                >\n                    <OpenCityForm formRef={this.formRef} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default City;\n","import React, { Component } from 'react';\r\nimport { Card, Button, Table, Form, Modal, message } from 'antd';\r\nimport axios from './../../axios';\r\nimport Utils from './../../utils';\r\nconst FormItem = Form.Item;\r\n\r\nexport default class Order extends Component {\r\n    state = {\r\n        list: [],\r\n        selectedRowKeys: [],\r\n        selectedItem: null,\r\n        orderInfo: null,\r\n        orderConfirmVisible: false\r\n    };\r\n    params = {\r\n        page: 1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.requestList();\r\n    }\r\n\r\n    onRowClick = (record, index) => {\r\n        let selectKey = [index];\r\n        this.setState({\r\n            selectedRowKeys: selectKey,\r\n            selectedItem: record\r\n        });\r\n    };\r\n\r\n    requestList = () => {\r\n        const _this = this;\r\n        axios.ajax({\r\n            url: '/order/list',\r\n            data: {\r\n                params: this.params\r\n            }\r\n        }).then(res => {\r\n            const list = res.result.item_list.map((item, index) => {\r\n                item.key = index;\r\n                return item;\r\n            });\r\n            this.setState({\r\n                list,\r\n                pagination: Utils.pagination(res, current => {\r\n                    _this.params.page = current;\r\n                    _this.requestList();\r\n                })\r\n            })\r\n        });\r\n    };\r\n\r\n    openOrderDetail = () => {\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            });\r\n            return;\r\n        }\r\n        const ORDER_DETAIL_RUL = process.env.NODE_ENV === 'development'\r\n            ? `/#/common/order/detail/${item.id}`\r\n            : `/bicyclemanager/#/common/order/detail/${item.id}`;\r\n        window.open(ORDER_DETAIL_RUL, '_blank');\r\n    };\r\n\r\n    // 结束订单二次确认\r\n    handleConfirm = () => {\r\n        let item = this.state.selectedItem;\r\n        console.log(item);\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请选择一条订单进行结束'\r\n            });\r\n            return;\r\n        }\r\n        axios.ajax({\r\n            url: '/order/ebike_info',\r\n            data: {\r\n                params: {\r\n                    orderId: item.id\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    orderInfo: res.result,\r\n                    orderConfirmVisible: true\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    // 结束订单\r\n    handleFinishOrder = () => {\r\n        const { selectedItem } = this.state;\r\n        axios.ajax({\r\n            url: '/order/finish_order',\r\n            data: {\r\n                params: {\r\n                    orderId: selectedItem.id\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.code === 0) {\r\n                message.success('订单结束成功');\r\n                this.setState({\r\n                    orderConfirmVisible: false\r\n                });\r\n                this.requestList();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '订单编号',\r\n                dataIndex: 'order_sn'\r\n            },\r\n            {\r\n                title: '车辆编号',\r\n                dataIndex: 'bike_sn'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'user_name'\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile'\r\n            },\r\n            {\r\n                title: '里程',\r\n                dataIndex: 'distance',\r\n                render(distance) {\r\n                    return distance / 1000 + 'Km';\r\n                }\r\n            },\r\n            {\r\n                title: '行驶时长',\r\n                dataIndex: 'total_time'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'status'\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'start_time'\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'end_time'\r\n            },\r\n            {\r\n                title: '订单金额',\r\n                dataIndex: 'total_fee'\r\n            },\r\n            {\r\n                title: '实付金额',\r\n                dataIndex: 'user_pay'\r\n            }\r\n        ];\r\n        const formItemLayout = {\r\n            labelCol: { span: 5 },\r\n            wrapperCol: { span: 19 }\r\n        };\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            type: 'radio',\r\n            wrapperCol: {\r\n                span: 19\r\n            },\r\n            selectedRowKeys\r\n        };\r\n\r\n        return (\r\n            <div style={{width: '100%'}}>\r\n                <Card style={{marginTop: 10}}>\r\n                    <Button type=\"primary\" onClick={this.openOrderDetail}>订单详情</Button>\r\n                    <Button type=\"primary\" style={{marginLeft: 10}} onClick={this.handleConfirm}>结束订单</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                        rowSelection={rowSelection}\r\n                        onRow={(record, index) => {\r\n                            return {\r\n                                onClick: () => {\r\n                                    this.onRowClick(record, index);\r\n                                }\r\n                            };\r\n                        }}\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.orderConfirmVisible && (\r\n                        <Modal\r\n                            title=\"结束订单\"\r\n                            visible={this.state.orderConfirmVisible}\r\n                            onCancel={() => {\r\n                                this.setState({\r\n                                    orderConfirmVisible: false\r\n                                })\r\n                            }}\r\n                            onOk={this.handleFinishOrder}\r\n                            width={600}\r\n                        >\r\n                            <FormItem label=\"车辆编号\" {...formItemLayout}>\r\n                                {this.state.orderInfo.bike_sn}\r\n                            </FormItem>\r\n                            <FormItem label=\"剩余电量\" {...formItemLayout}>\r\n                                {this.state.orderInfo.battery + '%'}\r\n                            </FormItem>\r\n                            <FormItem label=\"行程开始时间\" {...formItemLayout}>\r\n                                {this.state.orderInfo.start_time}\r\n                            </FormItem>\r\n                            <FormItem label=\"当前位置\" {...formItemLayout}>\r\n                                {this.state.orderInfo.location}\r\n                            </FormItem>\r\n                        </Modal>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { Row } from 'antd';\nimport Header from './components/Header';\nimport './styles/common.less';\n\nclass common extends Component {\n    render() {\n        return (\n            <div>\n                <Row className=\"simple-page\">\n                    <Header menuType=\"second\" />\n                </Row>\n                <Row className=\"content\">\n                    {this.props.children}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default common;","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport axios from './../../axios';\nimport './detail.less';\n\nclass OrderDetail extends Component {\n    state = {\n\n    };\n\n    componentDidMount() {\n        const orderId = this.props.match.params.orderId;\n        if (orderId) {\n            this.getDetailInfo(orderId);\n        }\n    }\n\n    getDetailInfo = orderId => {\n        axios.ajax({\n            url: '/order/detail',\n            data: {\n                params: {\n                    orderId\n                }\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                this.setState({\n                    orderInfo: res.result\n                });\n            }\n        })\n    };\n\n    render() {\n        const info = this.state.orderInfo || {};\n        return (\n            <div style={{width: '100%'}}>\n                <Card>\n                    <div id=\"orderDetailMap\" className=\"order-map\"></div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">基础信息</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">用车模式</div>\n                                <div className=\"detail-form-content\">{info.mode === 1 ?'服务区':'停车点'}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">订单编号</div>\n                                <div className=\"detail-form-content\">{info.order_sn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">车辆编号</div>\n                                <div className=\"detail-form-content\">{info.bike_sn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">用户姓名</div>\n                                <div className=\"detail-form-content\">{info.user_name}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">手机号码</div>\n                                <div className=\"detail-form-content\">{info.mobile}</div>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">行驶轨迹</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">行程起点</div>\n                                <div className=\"detail-form-content\">{info.start_location}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行程终点</div>\n                                <div className=\"detail-form-content\">{info.end_location}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行驶里程</div>\n                                <div className=\"detail-form-content\">{info.distance/1000}公里</div>\n                            </li>\n                        </ul>\n                    </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default OrderDetail;","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport App from './../App';\nimport Login from '../pages/login';\nimport Admin from './../admin';\nimport Buttons from './../pages/ui/buttons';\nimport Modals from './../pages/ui/modals';\nimport Loadings from './../pages/ui/loadings';\nimport Notice from './../pages/ui/notice';\nimport Messages from './../pages/ui/messages';\nimport Tabs from './../pages/ui/tabs';\nimport Gallery from './../pages/ui/gallery';\nimport Carousel from './../pages/ui/carousel';\nimport FormLogin from './../pages/form/login';\nimport FormRegister from './../pages/form/register';\nimport NoMatch from './../pages/nomatch';\nimport Home from './../pages/home';\nimport BasicTable from './../pages/table/basicTable';\nimport HighTable from './../pages/table/highTable';\nimport City from './../pages/city';\nimport Order from './../pages/order';\nimport Common from './../common';\nimport OrderDetail from './../pages/order/detail';\n\nexport default class IRouter extends React.Component {\n    render() {\n        return (\n            <Router>\n                <App>\n                    <Switch>\n                        <Route path=\"/login\" component={Login} />\n                        <Route path=\"/common\" render={() =>\n                            <Common>\n                                <Route path=\"/common/order/detail/:orderId\" component={OrderDetail} />\n                            </Common>\n                        } />\n                        <Route\n                            path=\"/\"\n                            render={() => (\n                                <Admin>\n                                    <Switch>\n                                        <Route path=\"/home\" component={Home} />\n                                        <Route path=\"/ui/buttons\" component={Buttons} />\n                                        <Route path=\"/ui/modals\" component={Modals} />\n                                        <Route path=\"/ui/loadings\" component={Loadings} />\n                                        <Route path=\"/ui/notification\" component={Notice} />\n                                        <Route path=\"/ui/messages\" component={Messages} />\n                                        <Route path=\"/ui/tabs\" component={Tabs} />\n                                        <Route path=\"/ui/gallery\" component={Gallery} />\n                                        <Route path=\"/ui/carousel\" component={Carousel} />\n                                        <Route path=\"/form/login\" component={FormLogin} />\n                                        <Route path=\"/form/reg\" component={FormRegister} />\n                                        <Route path=\"/table/basic\" component={BasicTable} />\n                                        <Route path=\"/table/high\" component={HighTable} />\n                                        <Route path=\"/city\" component={City} />\n                                        <Route path=\"/order\" component={Order} />\n                                        <Route component={NoMatch} />\n                                        <Redirect to=\"/home\" />\n                                    </Switch>\n                                </Admin>\n                            )}\n                        ></Route>\n                    </Switch>\n                </App>\n            </Router>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import Jsx from './demos/Jsx';\n// import Life from './pages/demos/Life';\n// import Admin from './admin';\nimport Router from './router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Admin /> */}\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}